#############################################################################
# Makefile for building: ws_client
# Generated by qmake (3.1) (Qt 6.2.2)
# Project:  ..\ws_client\ws_client.pro
# Template: lib
#############################################################################

MAKEFILE      = Makefile.Debug

EQ            = =

####### Compiler, tools and options

CC            = cl
CXX           = cl
DEFINES       = -DUNICODE -D_UNICODE -DWIN32 -D_ENABLE_EXTENDED_ALIGNED_STORAGE -DWIN64 -DWS_CLIENT_LIBRARY -D_WINDOWS -D_CRT_SECURE_NO_WARNINGS -DUSE_QT_CREATOR -DQT_QML_DEBUG -DQT_CORE_LIB -D_WINDLL
CFLAGS        = -nologo -Zc:wchar_t -FS -Zc:strictStrings -Zi -MDd -utf-8 -W3 -w44456 -w44457 -w44458 /Fddebug\ws_client.vc.pdb $(DEFINES)
CXXFLAGS      = -nologo -Zc:wchar_t -FS -Zc:rvalueCast -Zc:inline -Zc:strictStrings -Zc:throwingNew -permissive- -Zc:__cplusplus -Zc:externConstexpr -Zi -MDd -std:c++17 -utf-8 -W3 -w34100 -w34189 -w44996 -w44456 -w44457 -w44458 -wd4577 -wd4467 -EHsc /Fddebug\ws_client.vc.pdb $(DEFINES)
INCPATH       = -I..\ws_client -I. -I..\arcirk -I$(BOOST_INCLDUE) -I..\..\..\..\Qt\6.2.2\msvc2019_64\include -I..\..\..\..\Qt\6.2.2\msvc2019_64\include\QtCore -Idebug -I..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\win32-msvc 
LINKER        = link
LFLAGS        = /NOLOGO /DYNAMICBASE /NXCOMPAT /DEBUG /DLL /SUBSYSTEM:WINDOWS
LIBS          = /LIBPATH:C:\src\ws\ws_solution\arcirk-Debug\debug C:\src\ws\ws_solution\arcirk-Debug\debug\arcirk.lib /LIBPATH:$(BOOST_LIB) bcrypt.lib C:\Qt\6.2.2\msvc2019_64\lib\Qt6Cored.lib   
QMAKE         = C:\Qt\6.2.2\msvc2019_64\bin\qmake.exe
DEL_FILE      = del
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
COPY          = copy /y
COPY_FILE     = copy /y
COPY_DIR      = xcopy /s /q /y /i
INSTALL_FILE  = copy /y
INSTALL_PROGRAM = copy /y
INSTALL_DIR   = xcopy /s /q /y /i
QINSTALL      = C:\Qt\6.2.2\msvc2019_64\bin\qmake.exe -install qinstall
QINSTALL_PROGRAM = C:\Qt\6.2.2\msvc2019_64\bin\qmake.exe -install qinstall -exe
DEL_FILE      = del
SYMLINK       = $(QMAKE) -install ln -f -s
DEL_DIR       = rmdir
MOVE          = move
IDC           = idc
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
SED           = $(QMAKE) -install sed
MOVE          = move

####### Output directory

OBJECTS_DIR   = debug

####### Files

SOURCES       = ..\ws_client\src\iws_client.cpp \
		..\ws_client\src\ws_client.cpp \
		..\ws_client\src\ws_session.cpp 
OBJECTS       = debug\iws_client.obj \
		debug\ws_client.obj \
		debug\ws_session.obj

DIST          =  ..\ws_client\include\beast.h \
		..\ws_client\include\iws_client_global.h \
		..\ws_client\include\iws_client.h \
		..\ws_client\include\net.h \
		..\ws_client\include\stdafx.h \
		..\ws_client\include\ws_client.h \
		..\ws_client\include\ws_session.h ..\ws_client\src\iws_client.cpp \
		..\ws_client\src\ws_client.cpp \
		..\ws_client\src\ws_session.cpp
QMAKE_TARGET  = ws_client
DESTDIR        = debug\ #avoid trailing-slash linebreak
TARGET         = ws_client.dll
DESTDIR_TARGET = debug\ws_client.dll

####### Implicit rules

.SUFFIXES: .c .cpp .cc .cxx

{..\ws_client\src}.cpp{debug\}.obj::
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -Fodebug\ @<<
	$<
<<

{..\ws_client\src}.cc{debug\}.obj::
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -Fodebug\ @<<
	$<
<<

{..\ws_client\src}.cxx{debug\}.obj::
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -Fodebug\ @<<
	$<
<<

{..\ws_client\src}.c{debug\}.obj::
	$(CC) -c $(CFLAGS) $(INCPATH) -Fodebug\ @<<
	$<
<<

{.}.cpp{debug\}.obj::
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -Fodebug\ @<<
	$<
<<

{.}.cc{debug\}.obj::
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -Fodebug\ @<<
	$<
<<

{.}.cxx{debug\}.obj::
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -Fodebug\ @<<
	$<
<<

{.}.c{debug\}.obj::
	$(CC) -c $(CFLAGS) $(INCPATH) -Fodebug\ @<<
	$<
<<

####### Build rules

first: all
all: Makefile.Debug  debug\ws_client.dll

debug\ws_client.dll: C:\src\ws\ws_solution\ws_client-Debug\..\arcirk-Debug\debug\arcirk.lib C:\Qt\6.2.2\msvc2019_64\lib\Qt6Cored.lib $(OBJECTS) 
	$(LINKER) $(LFLAGS) /MANIFEST:embed /OUT:$(DESTDIR_TARGET) @<<
debug\iws_client.obj debug\ws_client.obj debug\ws_session.obj
$(LIBS)
<<

qmake: FORCE
	@$(QMAKE) -o Makefile.Debug ..\ws_client\ws_client.pro -spec win32-msvc "CONFIG+=debug" "CONFIG+=qml_debug"

qmake_all: FORCE

dist:
	$(ZIP) ws_client.zip $(SOURCES) $(DIST) ..\ws_client\ws_client.pro ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\spec_pre.prf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\common\windows-desktop.conf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\win32\windows_vulkan_sdk.prf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\common\windows-vulkan.conf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\common\msvc-desktop.conf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\qconfig.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_ext_freetype.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_ext_libpng.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_3danimation.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_3danimation_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_3dcore.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_3dcore_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_3dextras.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_3dextras_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_3dinput.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_3dinput_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_3dlogic.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_3dlogic_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_3dquick.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_3dquick_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_3dquickanimation.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_3dquickanimation_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_3dquickextras.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_3dquickextras_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_3dquickinput.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_3dquickinput_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_3dquickrender.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_3dquickrender_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_3dquickscene2d.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_3dquickscene2d_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_3drender.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_3drender_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_activeqt.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_activeqt_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_axbase_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_axcontainer.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_axcontainer_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_axserver.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_axserver_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_bluetooth.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_bluetooth_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_bodymovin_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_charts.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_charts_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_chartsqml.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_chartsqml_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_concurrent.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_concurrent_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_core.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_core5compat.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_core5compat_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_core_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_datavisualization.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_datavisualization_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_dbus.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_dbus_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_designer.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_designer_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_designercomponents_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_devicediscovery_support_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_entrypoint_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_fb_support_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_gui.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_gui_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_help.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_help_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_labsanimation.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_labsanimation_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_labsfolderlistmodel.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_labsfolderlistmodel_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_labsqmlmodels.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_labsqmlmodels_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_labssettings.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_labssettings_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_labssharedimage.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_labssharedimage_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_labswavefrontmesh.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_labswavefrontmesh_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_linguist.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_linguist_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_multimedia.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_multimedia_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_multimediaquick_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_multimediawidgets.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_multimediawidgets_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_network.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_network_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_networkauth.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_networkauth_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_nfc.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_nfc_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_opengl.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_opengl_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_openglwidgets.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_openglwidgets_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_packetprotocol_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_positioning.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_positioning_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_positioningquick.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_positioningquick_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_printsupport.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_printsupport_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_qml.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_qml_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_qmlcompiler_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_qmlcore.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_qmlcore_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_qmldebug_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_qmldevtools_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_qmldom_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_qmllocalstorage.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_qmllocalstorage_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_qmlmodels.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_qmlmodels_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_qmltest.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_qmltest_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_qmlworkerscript.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_qmlworkerscript_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_qmlxmllistmodel.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_qmlxmllistmodel_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quick.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quick3d.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quick3d_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quick3dassetimport.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quick3dassetimport_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quick3dassetutils.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quick3dassetutils_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quick3deffects.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quick3deffects_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quick3dhelpers.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quick3dhelpers_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quick3diblbaker.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quick3diblbaker_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quick3dparticles.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quick3dparticles_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quick3druntimerender.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quick3druntimerender_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quick3dutils.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quick3dutils_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quick_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quickcontrols2.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quickcontrols2_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quickcontrols2impl.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quickcontrols2impl_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quickcontrolstestutilsprivate_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quickdialogs2.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quickdialogs2_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quickdialogs2quickimpl.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quickdialogs2quickimpl_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quickdialogs2utils.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quickdialogs2utils_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quicklayouts.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quicklayouts_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quickparticles_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quickshapes_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quicktemplates2.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quicktemplates2_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quicktestutilsprivate_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quicktimeline.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quicktimeline_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quickwidgets.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_quickwidgets_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_remoteobjects.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_remoteobjects_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_remoteobjectsqml.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_remoteobjectsqml_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_repparser.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_repparser_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_scxml.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_scxml_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_scxmlqml.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_scxmlqml_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_sensors.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_sensors_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_sensorsquick.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_sensorsquick_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_serialbus.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_serialbus_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_serialport.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_serialport_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_shadertools.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_shadertools_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_sql.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_sql_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_statemachine.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_statemachine_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_statemachineqml.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_statemachineqml_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_svg.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_svg_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_svgwidgets.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_svgwidgets_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_testlib.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_testlib_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_tools_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_uiplugin.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_uitools.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_uitools_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_virtualkeyboard.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_virtualkeyboard_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_webchannel.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_webchannel_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_webenginecore.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_webenginecore_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_webenginequick.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_webenginequick_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_webenginequickdelegatesqml.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_webenginequickdelegatesqml_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_webenginewidgets.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_webenginewidgets_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_websockets.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_websockets_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_webview.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_webview_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_webviewquick.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_webviewquick_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_widgets.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_widgets_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_xml.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_xml_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\modules\qt_lib_zlib_private.pri ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\qt_functions.prf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\qt_config.prf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\win32-msvc\qmake.conf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\spec_post.prf .qmake.stash ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\exclusive_builds.prf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\common\msvc-version.conf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\toolchain.prf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\default_pre.prf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\win32\default_pre.prf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\resolve_config.prf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\exclusive_builds_post.prf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\default_post.prf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\build_pass.prf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\qml_debug.prf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\entrypoint.prf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\precompile_header.prf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\warn_on.prf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\qt.prf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\resources_functions.prf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\resources.prf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\moc.prf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\qmake_use.prf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\file_copies.prf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\win32\windows.prf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\testcase_targets.prf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\exceptions.prf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\yacc.prf ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\lex.prf ..\ws_client\ws_client.pro ..\..\..\..\Qt\6.2.2\msvc2019_64\lib\Qt6Cored.prl    ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\data\dummy.cpp ..\ws_client\include\beast.h ..\ws_client\include\iws_client_global.h ..\ws_client\include\iws_client.h ..\ws_client\include\net.h ..\ws_client\include\stdafx.h ..\ws_client\include\ws_client.h ..\ws_client\include\ws_session.h  ..\ws_client\src\iws_client.cpp ..\ws_client\src\ws_client.cpp ..\ws_client\src\ws_session.cpp    

clean: compiler_clean 
	-$(DEL_FILE) debug\iws_client.obj debug\ws_client.obj debug\ws_session.obj
	-$(DEL_FILE) debug\ws_client.exp debug\ws_client.vc.pdb debug\ws_client.ilk debug\ws_client.idb

distclean: clean 
	-$(DEL_FILE) .qmake.stash debug\ws_client.lib debug\ws_client.pdb
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Debug

mocclean: compiler_moc_header_clean compiler_moc_objc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_objc_header_make_all compiler_moc_source_make_all

check: first

benchmark: first

compiler_no_pch_compiler_make_all:
compiler_no_pch_compiler_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_moc_predefs_make_all: debug\moc_predefs.h
compiler_moc_predefs_clean:
	-$(DEL_FILE) debug\moc_predefs.h
debug\moc_predefs.h: ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\data\dummy.cpp
	cl -BxC:\Qt\6.2.2\msvc2019_64\bin\qmake.exe -nologo -Zc:wchar_t -FS -Zc:rvalueCast -Zc:inline -Zc:strictStrings -Zc:throwingNew -permissive- -Zc:__cplusplus -Zc:externConstexpr -Zi -MDd -std:c++17 -utf-8 -W3 -w34100 -w34189 -w44996 -w44456 -w44457 -w44458 -wd4577 -wd4467 -E ..\..\..\..\Qt\6.2.2\msvc2019_64\mkspecs\features\data\dummy.cpp 2>NUL >debug\moc_predefs.h

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_moc_objc_header_make_all:
compiler_moc_objc_header_clean:
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_predefs_clean 



####### Compile

debug\iws_client.obj: ..\ws_client\src\iws_client.cpp ..\ws_client\include\iws_client.h \
		..\ws_client\include\iws_client_global.h \
		..\..\..\..\Qt\6.2.2\msvc2019_64\include\QtCore\qglobal.h \
		..\..\..\..\Qt\6.2.2\msvc2019_64\include\QtCore\qconfig-bootstrapped.h \
		..\..\..\..\Qt\6.2.2\msvc2019_64\include\QtCore\qconfig.h \
		..\..\..\..\Qt\6.2.2\msvc2019_64\include\QtCore\qtcore-config.h \
		..\..\..\..\Qt\6.2.2\msvc2019_64\include\QtCore\qsystemdetection.h \
		..\..\..\..\Qt\6.2.2\msvc2019_64\include\QtCore\qprocessordetection.h \
		..\..\..\..\Qt\6.2.2\msvc2019_64\include\QtCore\qcompilerdetection.h \
		..\..\..\..\Qt\6.2.2\msvc2019_64\include\QtCore\qtypeinfo.h \
		..\..\..\..\Qt\6.2.2\msvc2019_64\include\QtCore\qcontainerfwd.h \
		..\..\..\..\Qt\6.2.2\msvc2019_64\include\QtCore\qsysinfo.h \
		..\..\..\..\Qt\6.2.2\msvc2019_64\include\QtCore\qlogging.h \
		..\..\..\..\Qt\6.2.2\msvc2019_64\include\QtCore\qflags.h \
		..\..\..\..\Qt\6.2.2\msvc2019_64\include\QtCore\qatomic.h \
		..\..\..\..\Qt\6.2.2\msvc2019_64\include\QtCore\qbasicatomic.h \
		..\..\..\..\Qt\6.2.2\msvc2019_64\include\QtCore\qatomic_bootstrap.h \
		..\..\..\..\Qt\6.2.2\msvc2019_64\include\QtCore\qgenericatomic.h \
		..\..\..\..\Qt\6.2.2\msvc2019_64\include\QtCore\qatomic_cxx11.h \
		..\..\..\..\Qt\6.2.2\msvc2019_64\include\QtCore\qglobalstatic.h \
		..\..\..\..\Qt\6.2.2\msvc2019_64\include\QtCore\qnumeric.h \
		..\..\..\..\Qt\6.2.2\msvc2019_64\include\QtCore\qversiontagging.h \
		..\ws_client\include\net.h \
		..\ws_drv\src\stdafx.h \
		$(BOOST_INCLDUE)\boost\asio.hpp \
		$(BOOST_INCLDUE)\boost\asio\associated_allocator.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\config.hpp \
		$(BOOST_INCLDUE)\boost\config.hpp \
		$(BOOST_INCLDUE)\boost\config\user.hpp \
		$(BOOST_INCLDUE)\boost\config\detail\select_compiler_config.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\nvcc.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\gcc_xml.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\cray.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\common_edg.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\comeau.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\pathscale.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\clang.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\clang_version.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\intel.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\visualc.hpp \
		$(BOOST_INCLDUE)\boost\config\pragma_message.hpp \
		$(BOOST_INCLDUE)\boost\config\helper_macros.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\gcc.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\digitalmars.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\kai.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\sgi_mipspro.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\compaq_cxx.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\greenhills.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\codegear.hpp \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\boost\config\compiler\clang.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\borland.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\metrowerks.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\sunpro_cc.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\hp_acc.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\mpw.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\xlcpp_zos.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\xlcpp.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\vacpp.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\pgi.hpp \
		$(BOOST_INCLDUE)\boost\config\detail\select_stdlib_config.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\stlport.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\libcomo.hpp \
		$(BOOST_INCLDUE)\boost\config\no_tr1\utility.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\roguewave.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\libcpp.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\libstdcpp3.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\sgi.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\msl.hpp \
		$(BOOST_INCLDUE)\boost\config\detail\posix_features.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\xlcpp_zos.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\vacpp.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\modena.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\dinkumware.hpp \
		$(BOOST_INCLDUE)\boost\config\detail\select_platform_config.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\linux.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\bsd.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\solaris.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\irix.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\hpux.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\cygwin.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\win32.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\beos.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\macos.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\zos.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\aix.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\amigaos.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\qnxnto.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\vxworks.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\symbian.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\cray.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\vms.hpp \
		$(BOOST_INCLDUE)\boost\config\detail\suffix.hpp \
		$(BOOST_INCLDUE)\boost\config\detail\cxx_composite.hpp \
		$(BOOST_INCLDUE)\boost\version.hpp \
		$(BOOST_INCLDUE)\boost\asio\associator.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\push_options.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\pop_options.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\functional.hpp \
		$(BOOST_INCLDUE)\boost\function.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\iterate.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\iteration\iterate.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\dec.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\config\config.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\config\limits.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\limits\dec_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\limits\dec_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\limits\dec_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\inc.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\limits\inc_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\limits\inc_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\limits\inc_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\array\elem.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\array\data.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\tuple\elem.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\cat.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\expand.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\overload.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\variadic\size.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\iif.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\check_empty.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\variadic\has_opt.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\variadic\detail\has_opt.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\is_empty_variadic.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\punctuation\is_begin_parens.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\punctuation\detail\is_begin_parens.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\empty.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\detail\is_empty.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\variadic\limits\size_64.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\variadic\limits\size_128.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\variadic\limits\size_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\tuple\rem.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\tuple\detail\is_single_return.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\is_1.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\is_empty.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\tuple\size.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\if.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\logical\bool.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\logical\limits\bool_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\logical\limits\bool_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\logical\limits\bool_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\variadic\elem.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\variadic\limits\elem_64.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\variadic\limits\elem_128.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\variadic\limits\elem_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\array\size.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\slot\slot.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\slot\detail\def.hpp \
		$(BOOST_INCLDUE)\boost\config\workaround.hpp \
		$(BOOST_INCLDUE)\boost\function\detail\prologue.hpp \
		$(BOOST_INCLDUE)\boost\config\no_tr1\functional.hpp \
		$(BOOST_INCLDUE)\boost\throw_exception.hpp \
		$(BOOST_INCLDUE)\boost\exception\exception.hpp \
		$(BOOST_INCLDUE)\boost\assert\source_location.hpp \
		$(BOOST_INCLDUE)\boost\current_function.hpp \
		$(BOOST_INCLDUE)\boost\cstdint.hpp \
		$(BOOST_INCLDUE)\boost\limits.hpp \
		$(BOOST_INCLDUE)\boost\function\function_base.hpp \
		$(BOOST_INCLDUE)\boost\assert.hpp \
		$(BOOST_INCLDUE)\boost\integer.hpp \
		$(BOOST_INCLDUE)\boost\integer_fwd.hpp \
		$(BOOST_INCLDUE)\boost\integer_traits.hpp \
		$(BOOST_INCLDUE)\boost\static_assert.hpp \
		$(BOOST_INCLDUE)\boost\detail\workaround.hpp \
		$(BOOST_INCLDUE)\boost\type_index.hpp \
		$(BOOST_INCLDUE)\boost\type_index\stl_type_index.hpp \
		$(BOOST_INCLDUE)\boost\type_index\type_index_facade.hpp \
		$(BOOST_INCLDUE)\boost\container_hash\hash_fwd.hpp \
		$(BOOST_INCLDUE)\boost\core\demangle.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\conditional.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_const.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\integral_constant.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_reference.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_lvalue_reference.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_rvalue_reference.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_rvalue_reference_msvc10_fix.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_volatile.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\remove_cv.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\remove_reference.hpp \
		$(BOOST_INCLDUE)\boost\container_hash\hash.hpp \
		$(BOOST_INCLDUE)\boost\container_hash\detail\hash_float.hpp \
		$(BOOST_INCLDUE)\boost\container_hash\detail\float_functions.hpp \
		$(BOOST_INCLDUE)\boost\config\no_tr1\cmath.hpp \
		$(BOOST_INCLDUE)\boost\container_hash\detail\limits.hpp \
		$(BOOST_INCLDUE)\boost\core\enable_if.hpp \
		$(BOOST_INCLDUE)\boost\integer\static_log2.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_enum.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\intrinsics.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\config.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_same.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_void.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\add_reference.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_arithmetic.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_integral.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_floating_point.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_convertible.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_complete.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\declval.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\add_rvalue_reference.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_function.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_function_cxx_11.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_function_cxx_03.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_function_ptr_helper.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_function_ptr_tester.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\yes_no_type.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_function_msvc10_fix.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_array.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_abstract.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_class.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_union.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_scalar.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_pointer.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_member_pointer.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_member_function_pointer.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_member_function_pointer_cxx_11.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_member_function_pointer_cxx_03.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_mem_fun_pointer_impl.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_mem_fun_pointer_tester.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_polymorphic.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\add_lvalue_reference.hpp \
		$(BOOST_INCLDUE)\boost\container_hash\extensions.hpp \
		$(BOOST_INCLDUE)\boost\detail\container_fwd.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_signed.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\make_signed.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_unsigned.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\add_const.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\add_volatile.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\type_identity.hpp \
		$(BOOST_INCLDUE)\boost\type_index\detail\stl_register_class.hpp \
		$(BOOST_INCLDUE)\boost\type_index\ctti_type_index.hpp \
		$(BOOST_INCLDUE)\boost\type_index\detail\compile_time_type_info.hpp \
		$(BOOST_INCLDUE)\boost\type_index\detail\ctti_register_class.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_trivial_copy.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_pod.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_copy_constructible.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_constructible.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_destructible.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_default_constructible.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_noncopyable.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_base_and_derived.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_trivial_destructor.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\composite_traits.hpp \
		$(BOOST_INCLDUE)\boost\ref.hpp \
		$(BOOST_INCLDUE)\boost\core\ref.hpp \
		$(BOOST_INCLDUE)\boost\core\addressof.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\alignment_of.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\enable_if.hpp \
		$(BOOST_INCLDUE)\boost\function_equal.hpp \
		$(BOOST_INCLDUE)\boost\function\function_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mem_fn.hpp \
		$(BOOST_INCLDUE)\boost\bind\mem_fn.hpp \
		$(BOOST_INCLDUE)\boost\get_pointer.hpp \
		$(BOOST_INCLDUE)\boost\config\no_tr1\memory.hpp \
		$(BOOST_INCLDUE)\boost\bind\mem_fn_template.hpp \
		$(BOOST_INCLDUE)\boost\bind\mem_fn_vw.hpp \
		$(BOOST_INCLDUE)\boost\bind\mem_fn_cc.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\enum.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\enum.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\debug\error.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\detail\auto_rec.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\detail\dmc\auto_rec.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\detail\limits\auto_rec_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\detail\limits\auto_rec_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\detail\limits\auto_rec_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\punctuation\comma_if.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\punctuation\comma.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\repeat.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\tuple\eat.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\limits\repeat_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\limits\repeat_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\limits\repeat_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\enum_params.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\enum_params.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repeat.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\inc.hpp \
		$(BOOST_INCLDUE)\boost\function\function0.hpp \
		$(BOOST_INCLDUE)\boost\function\detail\maybe_include.hpp \
		$(BOOST_INCLDUE)\boost\function\function_template.hpp \
		$(BOOST_INCLDUE)\boost\core\no_exceptions_support.hpp \
		$(BOOST_INCLDUE)\boost\function\function1.hpp \
		$(BOOST_INCLDUE)\boost\function\function2.hpp \
		$(BOOST_INCLDUE)\boost\function\function3.hpp \
		$(BOOST_INCLDUE)\boost\function\function4.hpp \
		$(BOOST_INCLDUE)\boost\function\function5.hpp \
		$(BOOST_INCLDUE)\boost\function\function6.hpp \
		$(BOOST_INCLDUE)\boost\function\function7.hpp \
		$(BOOST_INCLDUE)\boost\function\function8.hpp \
		$(BOOST_INCLDUE)\boost\function\function9.hpp \
		$(BOOST_INCLDUE)\boost\function\function10.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\type_traits.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\aligned_storage.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\type_with_alignment.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\decay.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\remove_bounds.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\remove_extent.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\add_pointer.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_nothrow_copy.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_nothrow_destructor.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_base_of.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_object.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\remove_pointer.hpp \
		$(BOOST_INCLDUE)\boost\utility\declval.hpp \
		$(BOOST_INCLDUE)\boost\utility\enable_if.hpp \
		$(BOOST_INCLDUE)\boost\utility\result_of.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\enum_trailing_params.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\enum_binary_params.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\enum_shifted_params.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\intercept.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\limits\intercept_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\limits\intercept_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\limits\intercept_1024.hpp \
		$(BOOST_INCLDUE)\boost\utility\detail\result_of_variadic.hpp \
		$(BOOST_INCLDUE)\boost\utility\detail\result_of_iterate.hpp \
		$(BOOST_INCLDUE)\boost\asio\associated_executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\execute.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\detail\as_invocable.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\atomic_count.hpp \
		$(BOOST_INCLDUE)\boost\detail\atomic_count.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\atomic_count.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_has_gcc_intrinsics.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_has_sync_intrinsics.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\atomic_count_nt.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\atomic_count_std_atomic.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\atomic_count_spin.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\spinlock_pool.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\spinlock.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\spinlock_std_atomic.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\yield_k.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_thread_pause.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_thread_sleep.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_win32_sleep.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_thread_yield.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\spinlock_pt.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\spinlock_gcc_atomic.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\spinlock_gcc_arm.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\spinlock_sync.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\spinlock_w32.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_interlocked.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\spinlock_nt.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\atomic_count_pt.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\atomic_count_gcc_atomic.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\atomic_count_sync.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\atomic_count_gcc_x86.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_obsolete.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\atomic_count_win32.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\atomic_count_gcc.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\memory.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\throw_exception.hpp \
		$(BOOST_INCLDUE)\boost\make_shared.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\make_shared.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\make_shared_object.hpp \
		$(BOOST_INCLDUE)\boost\move\core.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\config_begin.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\workaround.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\type_traits.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\meta_utils.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\meta_utils_core.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\addressof.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\config_end.hpp \
		$(BOOST_INCLDUE)\boost\move\utility_core.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\shared_ptr.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\shared_count.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\bad_weak_ptr.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_nt.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_typeinfo_.hpp \
		$(BOOST_INCLDUE)\boost\core\typeinfo.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_noexcept.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_std_atomic.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_spin.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_pt.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_gcc_atomic.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_sync.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_gcc_x86.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_snc_ps3.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_acc_ia64.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_gcc_ia64.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_vacpp_ppc.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_cw_ppc.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_gcc_ppc.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_gcc_mips.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_gcc_sparc.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_w32.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_aix.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_impl.hpp \
		$(BOOST_INCLDUE)\boost\checked_delete.hpp \
		$(BOOST_INCLDUE)\boost\core\checked_delete.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\quick_allocator.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\lightweight_mutex.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\lwm_std_mutex.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\lwm_win32_cs.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\lwm_pthreads.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_disable_deprecated.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_convertible.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_nullptr_t.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\operator_bool.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\local_sp_deleter.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\local_counted_base.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_forward.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\make_shared_array.hpp \
		$(BOOST_INCLDUE)\boost\core\default_allocator.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\allocate_shared_array.hpp \
		$(BOOST_INCLDUE)\boost\core\allocator_access.hpp \
		$(BOOST_INCLDUE)\boost\core\pointer_traits.hpp \
		$(BOOST_INCLDUE)\boost\core\alloc_construct.hpp \
		$(BOOST_INCLDUE)\boost\core\noinit_adaptor.hpp \
		$(BOOST_INCLDUE)\boost\core\first_scalar.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\extent.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_bounded_array.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_unbounded_array.hpp \
		$(BOOST_INCLDUE)\boost\shared_ptr.hpp \
		$(BOOST_INCLDUE)\boost\weak_ptr.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\weak_ptr.hpp \
		$(BOOST_INCLDUE)\boost\utility\addressof.hpp \
		$(BOOST_INCLDUE)\boost\align\aligned_alloc.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\aligned_alloc.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\is_alignment.hpp \
		$(BOOST_INCLDUE)\boost\align\align.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\align_cxx11.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\align.hpp \
		$(BOOST_INCLDUE)\boost\align\alignment_of.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\element_type.hpp \
		$(BOOST_INCLDUE)\boost\align\alignment_of_forward.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\alignment_of_cxx11.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\alignment_of_msvc.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\min_size.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\integral_constant.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\alignment_of.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\alignment_of_gcc.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\alignment_of_codegear.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\alignment_of_clang.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\aligned_alloc_new.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\aligned_alloc_msvc.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\aligned_alloc_mingw.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\aligned_alloc_posix.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\aligned_alloc_macos.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\aligned_alloc_android.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\aligned_alloc_sunos.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\receiver_invocation_error.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\impl\receiver_invocation_error.ipp \
		$(BOOST_INCLDUE)\boost\asio\execution\set_done.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\set_done_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\set_done_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\set_error.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\set_error_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\set_error_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\set_value.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\variadic_templates.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\set_value_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\set_value_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\detail\as_receiver.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\execute_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\execute_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\invocable_archetype.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\equality_comparable.hpp \
		$(BOOST_INCLDUE)\boost\asio\is_executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\is_executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\system_executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\allocator.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\scheduler.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\schedule.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\schedule_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\schedule_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\sender.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\detail\void_receiver.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\receiver.hpp \
		$(BOOST_INCLDUE)\boost\system\error_code.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\error_code.hpp \
		$(BOOST_INCLDUE)\boost\system\is_error_code_enum.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\error_category.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\config.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\error_condition.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\generic_category.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\generic_category_message.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\enable_if.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\is_same.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\errc.hpp \
		$(BOOST_INCLDUE)\boost\system\is_error_condition_enum.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\cerrno.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\append_int.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\snprintf.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\system_category.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\system_category_impl.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\system_category_message.hpp \
		$(BOOST_INCLDUE)\boost\system\api_config.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\system_category_message_win32.hpp \
		$(BOOST_INCLDUE)\boost\winapi\error_handling.hpp \
		$(BOOST_INCLDUE)\boost\winapi\basic_types.hpp \
		$(BOOST_INCLDUE)\boost\winapi\config.hpp \
		$(BOOST_INCLDUE)\boost\predef\version_number.h \
		$(BOOST_INCLDUE)\boost\predef\platform.h \
		$(BOOST_INCLDUE)\boost\predef\platform\android.h \
		$(BOOST_INCLDUE)\boost\predef\make.h \
		$(BOOST_INCLDUE)\boost\predef\detail\test.h \
		$(BOOST_INCLDUE)\boost\predef\detail\platform_detected.h \
		$(BOOST_INCLDUE)\boost\predef\platform\cloudabi.h \
		$(BOOST_INCLDUE)\boost\predef\platform\mingw.h \
		$(BOOST_INCLDUE)\boost\predef\platform\mingw32.h \
		$(BOOST_INCLDUE)\boost\predef\platform\mingw64.h \
		$(BOOST_INCLDUE)\boost\predef\platform\windows_uwp.h \
		$(BOOST_INCLDUE)\boost\predef\os\windows.h \
		$(BOOST_INCLDUE)\boost\predef\detail\os_detected.h \
		$(BOOST_INCLDUE)\boost\predef\platform\windows_desktop.h \
		$(BOOST_INCLDUE)\boost\predef\platform\windows_phone.h \
		$(BOOST_INCLDUE)\boost\predef\platform\windows_server.h \
		$(BOOST_INCLDUE)\boost\predef\platform\windows_store.h \
		$(BOOST_INCLDUE)\boost\predef\platform\windows_system.h \
		$(BOOST_INCLDUE)\boost\predef\platform\windows_runtime.h \
		$(BOOST_INCLDUE)\boost\predef\platform\ios.h \
		$(BOOST_INCLDUE)\boost\predef\os\ios.h \
		$(BOOST_INCLDUE)\boost\winapi\detail\header.hpp \
		$(BOOST_INCLDUE)\boost\winapi\detail\footer.hpp \
		$(BOOST_INCLDUE)\boost\winapi\get_last_error.hpp \
		$(BOOST_INCLDUE)\boost\winapi\character_code_conversion.hpp \
		$(BOOST_INCLDUE)\boost\winapi\local_memory.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\system_category_condition_win32.hpp \
		$(BOOST_INCLDUE)\boost\winapi\error_codes.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\interop_category.hpp \
		$(BOOST_INCLDUE)\boost\system\error_category.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\error_category_impl.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\std_category.hpp \
		$(BOOST_INCLDUE)\boost\system\error_condition.hpp \
		$(BOOST_INCLDUE)\boost\system\errc.hpp \
		$(BOOST_INCLDUE)\boost\system\generic_category.hpp \
		$(BOOST_INCLDUE)\boost\system\system_category.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\throws.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\connect.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\detail\as_operation.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\start_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\operation_state.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\start.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\start_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\connect_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\connect_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\is_applicable_property.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\query_static_constexpr_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\static_query.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\any_executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\assert.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\cstddef.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\executor_function.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\handler_alloc_helpers.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\noncopyable.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\recycling_allocator.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\thread_context.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\call_stack.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\tss_ptr.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\null_tss_ptr.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\keyword_tss_ptr.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_tss_ptr.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\socket_types.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\old_win_sdk_compat.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_tss_ptr.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\throw_error.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\throw_error.ipp \
		$(BOOST_INCLDUE)\boost\system\system_error.hpp \
		$(BOOST_INCLDUE)\boost\asio\error.hpp \
		$(BOOST_INCLDUE)\boost\cerrno.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\error.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\posix_tss_ptr.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\posix_tss_ptr.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\thread_context.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\thread_info_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\multiple_exceptions.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\multiple_exceptions.ipp \
		$(BOOST_INCLDUE)\boost\asio\handler_alloc_hook.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\handler_alloc_hook.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\handler_invoke_helpers.hpp \
		$(BOOST_INCLDUE)\boost\asio\handler_invoke_hook.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\non_const_lvalue.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\scoped_ptr.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\bad_executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\impl\bad_executor.ipp \
		$(BOOST_INCLDUE)\boost\asio\execution\blocking.hpp \
		$(BOOST_INCLDUE)\boost\asio\prefer.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\prefer_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\prefer_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\require_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\require_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\static_require.hpp \
		$(BOOST_INCLDUE)\boost\asio\query.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\query_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\query_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\require.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\blocking_adaptation.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\event.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\null_event.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\null_event.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_event.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_event.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\posix_event.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\posix_event.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\std_event.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\null_mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\scoped_lock.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_mutex.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\posix_mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\posix_mutex.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\std_mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\bulk_execute.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\bulk_guarantee.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\detail\bulk_sender.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\bulk_execute_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\bulk_execute_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\context.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\context_as.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\mapping.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\occupancy.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\outstanding_work.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\prefer_only.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\relationship.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\submit.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\detail\submit_receiver.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\submit_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\submit_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\system_executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\executor_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\fenced_block.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\null_fenced_block.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\std_fenced_block.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\macos_fenced_block.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\solaris_fenced_block.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\gcc_arm_fenced_block.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\gcc_hppa_fenced_block.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\gcc_x86_fenced_block.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\gcc_sync_fenced_block.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_fenced_block.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\scheduler_operation.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\handler_tracking.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\cstdint.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\static_mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\null_static_mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_static_mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_static_mutex.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\posix_static_mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\std_static_mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\handler_tracking.ipp \
		$(BOOST_INCLDUE)\boost\asio\time_traits.hpp \
		$(BOOST_INCLDUE)\boost\date_time\posix_time\posix_time_types.hpp \
		$(BOOST_INCLDUE)\boost\date_time\time_clock.hpp \
		$(BOOST_INCLDUE)\boost\date_time\c_time.hpp \
		$(BOOST_INCLDUE)\boost\date_time\compiler_config.hpp \
		$(BOOST_INCLDUE)\boost\date_time\locale_config.hpp \
		$(BOOST_INCLDUE)\boost\date_time\microsec_time_clock.hpp \
		$(BOOST_INCLDUE)\boost\winapi\time.hpp \
		$(BOOST_INCLDUE)\boost\date_time\posix_time\ptime.hpp \
		$(BOOST_INCLDUE)\boost\date_time\posix_time\posix_time_system.hpp \
		$(BOOST_INCLDUE)\boost\date_time\posix_time\posix_time_config.hpp \
		$(BOOST_INCLDUE)\boost\date_time\time_duration.hpp \
		$(BOOST_INCLDUE)\boost\date_time\special_defs.hpp \
		$(BOOST_INCLDUE)\boost\date_time\time_defs.hpp \
		$(BOOST_INCLDUE)\boost\operators.hpp \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\boost\operators_v1.hpp \
		$(BOOST_INCLDUE)\boost\date_time\time_resolution_traits.hpp \
		$(BOOST_INCLDUE)\boost\date_time\int_adapter.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\gregorian_types.hpp \
		$(BOOST_INCLDUE)\boost\date_time\date.hpp \
		$(BOOST_INCLDUE)\boost\date_time\year_month_day.hpp \
		$(BOOST_INCLDUE)\boost\date_time\period.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\greg_calendar.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\greg_weekday.hpp \
		$(BOOST_INCLDUE)\boost\date_time\constrained_value.hpp \
		$(BOOST_INCLDUE)\boost\date_time\date_defs.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\greg_day_of_year.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian_calendar.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian_calendar.ipp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\greg_ymd.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\greg_day.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\greg_year.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\greg_month.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\greg_duration.hpp \
		$(BOOST_INCLDUE)\boost\date_time\date_duration.hpp \
		$(BOOST_INCLDUE)\boost\date_time\date_duration_types.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\greg_duration_types.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\greg_date.hpp \
		$(BOOST_INCLDUE)\boost\date_time\adjust_functors.hpp \
		$(BOOST_INCLDUE)\boost\date_time\wrapping_int.hpp \
		$(BOOST_INCLDUE)\boost\date_time\date_generators.hpp \
		$(BOOST_INCLDUE)\boost\date_time\date_clock_device.hpp \
		$(BOOST_INCLDUE)\boost\date_time\date_iterator.hpp \
		$(BOOST_INCLDUE)\boost\date_time\time_system_split.hpp \
		$(BOOST_INCLDUE)\boost\date_time\time_system_counted.hpp \
		$(BOOST_INCLDUE)\boost\date_time\time.hpp \
		$(BOOST_INCLDUE)\boost\date_time\posix_time\date_duration_operators.hpp \
		$(BOOST_INCLDUE)\boost\date_time\posix_time\posix_time_duration.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\cast.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\old_numeric_cast.hpp \
		$(BOOST_INCLDUE)\boost\type.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\converter_policies.hpp \
		$(BOOST_INCLDUE)\boost\mpl\if.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\value_wknd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\static_cast.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\workaround.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\integral.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\msvc.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\eti.hpp \
		$(BOOST_INCLDUE)\boost\mpl\int.hpp \
		$(BOOST_INCLDUE)\boost\mpl\int_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\adl_barrier.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\adl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\intel.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\gcc.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\nttp_decl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\nttp.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\integral_wrapper.hpp \
		$(BOOST_INCLDUE)\boost\mpl\integral_c_tag.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\static_constant.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\na_spec.hpp \
		$(BOOST_INCLDUE)\boost\mpl\lambda_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\void_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\na.hpp \
		$(BOOST_INCLDUE)\boost\mpl\bool.hpp \
		$(BOOST_INCLDUE)\boost\mpl\bool_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\na_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\ctps.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\lambda.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\ttp.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\lambda_arity_param.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\template_arity_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\arity.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\dtp.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\params.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\preprocessor.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\comma_if.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\enum.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\def_params_tail.hpp \
		$(BOOST_INCLDUE)\boost\mpl\limits\arity.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\logical\and.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\logical\bitand.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\identity.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\identity.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\empty.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\filter_params.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\sub.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\tuple.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\sub.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\while.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\fold_left.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\edg\fold_left.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\expr_iif.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\adt.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\detail\is_binary.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\detail\check.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\logical\compl.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\edg\limits\fold_left_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\edg\limits\fold_left_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\edg\limits\fold_left_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\dmc\fold_left.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\fold_left.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\limits\fold_left_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\limits\fold_left_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\limits\fold_left_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\limits\fold_left_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\limits\fold_left_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\limits\fold_left_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\fold_right.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\edg\fold_right.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\edg\limits\fold_right_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\edg\limits\fold_right_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\edg\limits\fold_right_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\fold_right.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\reverse.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\limits\fold_right_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\limits\fold_right_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\limits\fold_right_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\detail\edg\while.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\detail\edg\limits\while_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\detail\edg\limits\while_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\detail\edg\limits\while_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\detail\msvc\while.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\detail\dmc\while.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\detail\while.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\detail\limits\while_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\detail\limits\while_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\detail\limits\while_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\limits\while_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\limits\while_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\limits\while_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\logical\bitor.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\detail\is_maximum_number.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\comparison\equal.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\comparison\not_equal.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\comparison\limits\not_equal_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\comparison\limits\not_equal_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\comparison\limits\not_equal_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\detail\maximum_number.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\detail\is_minimum_number.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\logical\not.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\add.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\overload_resolution.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\lambda_support.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\yes_no.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\arrays.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\tuple\to_list.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\tuple\limits\to_list_64.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\tuple\limits\to_list_128.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\tuple\limits\to_list_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\for_each_i.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\for.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\detail\edg\for.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\detail\edg\limits\for_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\detail\edg\limits\for_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\detail\edg\limits\for_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\detail\msvc\for.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\detail\dmc\for.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\detail\for.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\detail\limits\for_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\detail\limits\for_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\detail\limits\for_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\limits\for_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\limits\for_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\limits\for_1024.hpp \
		$(BOOST_INCLDUE)\boost\mpl\integral_c.hpp \
		$(BOOST_INCLDUE)\boost\mpl\integral_c_fwd.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\converter.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\conversion_traits.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\conversion_traits.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\meta.hpp \
		$(BOOST_INCLDUE)\boost\mpl\eval_if.hpp \
		$(BOOST_INCLDUE)\boost\mpl\equal_to.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\comparison_op.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\numeric_op.hpp \
		$(BOOST_INCLDUE)\boost\mpl\numeric_cast.hpp \
		$(BOOST_INCLDUE)\boost\mpl\apply_wrap.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\has_apply.hpp \
		$(BOOST_INCLDUE)\boost\mpl\has_xxx.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\type_wrapper.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\has_xxx.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\msvc_typename.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\has_apply.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\msvc_never_true.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\use_preprocessed.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\include_preprocessed.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\compiler.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\stringize.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\add.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\bcc.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\msvc_dtw.hpp \
		$(BOOST_INCLDUE)\boost\mpl\tag.hpp \
		$(BOOST_INCLDUE)\boost\mpl\void.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\has_tag.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\numeric_cast_utils.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\forwarding.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\msvc_eti_base.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\is_msvc_eti_arg.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\partial_spec_params.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\repeat.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\ext_params.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\dec.hpp \
		$(BOOST_INCLDUE)\boost\mpl\not.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\nested_type_wknd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\and.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\logical_op.hpp \
		$(BOOST_INCLDUE)\boost\mpl\identity.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\int_float_mixture.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\int_float_mixture_enum.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\sign_mixture.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\sign_mixture_enum.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\udt_builtin_mixture.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\udt_builtin_mixture_enum.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\is_subranged.hpp \
		$(BOOST_INCLDUE)\boost\mpl\multiplies.hpp \
		$(BOOST_INCLDUE)\boost\mpl\times.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\arithmetic_op.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\largest_int.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\default_params.hpp \
		$(BOOST_INCLDUE)\boost\mpl\less.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\converter.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\bounds.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\bounds.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\numeric_cast_traits.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\numeric_cast_traits.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\preprocessed\numeric_cast_traits_common.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\preprocessed\numeric_cast_traits_long_long.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\elem.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\elem_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\elem_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\elem_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\size.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\size_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\size_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\size_1024.hpp \
		$(BOOST_INCLDUE)\boost\date_time\posix_time\time_period.hpp \
		$(BOOST_INCLDUE)\boost\date_time\time_iterator.hpp \
		$(BOOST_INCLDUE)\boost\date_time\dst_rules.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\chrono.hpp \
		$(BOOST_INCLDUE)\boost\chrono\system_clocks.hpp \
		$(BOOST_INCLDUE)\boost\chrono\config.hpp \
		$(BOOST_INCLDUE)\boost\predef.h \
		$(BOOST_INCLDUE)\boost\predef\language.h \
		$(BOOST_INCLDUE)\boost\predef\language\stdc.h \
		$(BOOST_INCLDUE)\boost\predef\language\stdcpp.h \
		$(BOOST_INCLDUE)\boost\predef\language\objc.h \
		$(BOOST_INCLDUE)\boost\predef\language\cuda.h \
		$(BOOST_INCLDUE)\boost\predef\architecture.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\alpha.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\arm.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\blackfin.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\convex.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\e2k.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\ia64.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\loongarch.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\m68k.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\mips.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\parisc.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\ppc.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\ptx.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\pyramid.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\riscv.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\rs6k.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\sparc.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\superh.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\sys370.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\sys390.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\x86.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\x86\32.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\x86\64.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\z.h \
		$(BOOST_INCLDUE)\boost\predef\compiler.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\borland.h \
		$(BOOST_INCLDUE)\boost\predef\detail\comp_detected.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\clang.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\comeau.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\compaq.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\diab.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\digitalmars.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\dignus.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\edg.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\ekopath.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\gcc_xml.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\gcc.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\greenhills.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\hp_acc.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\iar.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\ibm.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\intel.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\kai.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\llvm.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\metaware.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\metrowerks.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\microtec.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\mpw.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\nvcc.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\palm.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\pgi.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\sgi_mipspro.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\sunpro.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\tendra.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\visualc.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\watcom.h \
		$(BOOST_INCLDUE)\boost\predef\library.h \
		$(BOOST_INCLDUE)\boost\predef\library\c.h \
		$(BOOST_INCLDUE)\boost\predef\library\c\_prefix.h \
		$(BOOST_INCLDUE)\boost\predef\detail\_cassert.h \
		$(BOOST_INCLDUE)\boost\predef\library\c\cloudabi.h \
		$(BOOST_INCLDUE)\boost\predef\library\c\gnu.h \
		$(BOOST_INCLDUE)\boost\predef\library\c\uc.h \
		$(BOOST_INCLDUE)\boost\predef\library\c\vms.h \
		$(BOOST_INCLDUE)\boost\predef\library\c\zos.h \
		$(BOOST_INCLDUE)\boost\predef\library\std.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\_prefix.h \
		$(BOOST_INCLDUE)\boost\predef\detail\_exception.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\cxx.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\dinkumware.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\libcomo.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\modena.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\msl.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\roguewave.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\sgi.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\stdcpp3.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\stlport.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\vacpp.h \
		$(BOOST_INCLDUE)\boost\predef\os.h \
		$(BOOST_INCLDUE)\boost\predef\os\aix.h \
		$(BOOST_INCLDUE)\boost\predef\os\amigaos.h \
		$(BOOST_INCLDUE)\boost\predef\os\beos.h \
		$(BOOST_INCLDUE)\boost\predef\os\bsd.h \
		$(BOOST_INCLDUE)\boost\predef\os\macos.h \
		$(BOOST_INCLDUE)\boost\predef\os\bsd\bsdi.h \
		$(BOOST_INCLDUE)\boost\predef\os\bsd\dragonfly.h \
		$(BOOST_INCLDUE)\boost\predef\os\bsd\free.h \
		$(BOOST_INCLDUE)\boost\predef\os\bsd\open.h \
		$(BOOST_INCLDUE)\boost\predef\os\bsd\net.h \
		$(BOOST_INCLDUE)\boost\predef\os\cygwin.h \
		$(BOOST_INCLDUE)\boost\predef\os\haiku.h \
		$(BOOST_INCLDUE)\boost\predef\os\hpux.h \
		$(BOOST_INCLDUE)\boost\predef\os\irix.h \
		$(BOOST_INCLDUE)\boost\predef\os\linux.h \
		$(BOOST_INCLDUE)\boost\predef\os\os400.h \
		$(BOOST_INCLDUE)\boost\predef\os\qnxnto.h \
		$(BOOST_INCLDUE)\boost\predef\os\solaris.h \
		$(BOOST_INCLDUE)\boost\predef\os\unix.h \
		$(BOOST_INCLDUE)\boost\predef\os\vms.h \
		$(BOOST_INCLDUE)\boost\predef\other.h \
		$(BOOST_INCLDUE)\boost\predef\other\endian.h \
		$(BOOST_INCLDUE)\boost\predef\other\wordsize.h \
		$(BOOST_INCLDUE)\boost\predef\other\workaround.h \
		$(BOOST_INCLDUE)\boost\predef\hardware.h \
		$(BOOST_INCLDUE)\boost\predef\hardware\simd.h \
		$(BOOST_INCLDUE)\boost\predef\hardware\simd\x86.h \
		$(BOOST_INCLDUE)\boost\predef\hardware\simd\x86\versions.h \
		$(BOOST_INCLDUE)\boost\predef\hardware\simd\x86_amd.h \
		$(BOOST_INCLDUE)\boost\predef\hardware\simd\x86_amd\versions.h \
		$(BOOST_INCLDUE)\boost\predef\hardware\simd\arm.h \
		$(BOOST_INCLDUE)\boost\predef\hardware\simd\arm\versions.h \
		$(BOOST_INCLDUE)\boost\predef\hardware\simd\ppc.h \
		$(BOOST_INCLDUE)\boost\predef\hardware\simd\ppc\versions.h \
		$(BOOST_INCLDUE)\boost\predef\version.h \
		$(BOOST_INCLDUE)\boost\config\auto_link.hpp \
		$(BOOST_INCLDUE)\boost\chrono\duration.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\static_assert.hpp \
		$(BOOST_INCLDUE)\boost\mpl\assert.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\gpu.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\pp_counter.hpp \
		$(BOOST_INCLDUE)\boost\mpl\logical.hpp \
		$(BOOST_INCLDUE)\boost\mpl\or.hpp \
		$(BOOST_INCLDUE)\boost\ratio\ratio.hpp \
		$(BOOST_INCLDUE)\boost\ratio\config.hpp \
		$(BOOST_INCLDUE)\boost\ratio\detail\mpl\abs.hpp \
		$(BOOST_INCLDUE)\boost\ratio\detail\mpl\sign.hpp \
		$(BOOST_INCLDUE)\boost\ratio\detail\mpl\gcd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\dependent_nttp.hpp \
		$(BOOST_INCLDUE)\boost\ratio\detail\mpl\lcm.hpp \
		$(BOOST_INCLDUE)\boost\ratio\ratio_fwd.hpp \
		$(BOOST_INCLDUE)\boost\ratio\detail\overflow_helpers.hpp \
		$(BOOST_INCLDUE)\boost\rational.hpp \
		$(BOOST_INCLDUE)\boost\call_traits.hpp \
		$(BOOST_INCLDUE)\boost\detail\call_traits.hpp \
		$(BOOST_INCLDUE)\boost\integer\common_factor_rt.hpp \
		$(BOOST_INCLDUE)\boost\ratio\mpl\rational_c_tag.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\common_type.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\common_type_impl.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\common_arithmetic_type.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\composite_pointer_type.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\copy_cv.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\composite_member_pointer_type.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\mp_defer.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\is_evenly_divisible_by.hpp \
		$(BOOST_INCLDUE)\boost\config\abi_prefix.hpp \
		$(BOOST_INCLDUE)\boost\config\abi_suffix.hpp \
		$(BOOST_INCLDUE)\boost\chrono\time_point.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\system.hpp \
		$(BOOST_INCLDUE)\boost\chrono\clock_string.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\inlined\chrono.hpp \
		$(BOOST_INCLDUE)\boost\chrono\chrono.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\inlined\win\chrono.hpp \
		$(BOOST_INCLDUE)\boost\winapi\timers.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\inlined\mac\chrono.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\inlined\posix\chrono.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\chrono_time_traits.hpp \
		$(BOOST_INCLDUE)\boost\asio\wait_traits.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\op_queue.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\global.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\null_global.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_global.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\posix_global.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\std_global.hpp \
		$(BOOST_INCLDUE)\boost\asio\system_context.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\scheduler.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution_context.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\execution_context.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\handler_type_requirements.hpp \
		$(BOOST_INCLDUE)\boost\asio\async_result.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\service_registry.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\service_registry.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\service_registry.ipp \
		$(BOOST_INCLDUE)\boost\asio\impl\execution_context.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\conditionally_enabled_event.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\conditionally_enabled_mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\scheduler_task.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\thread.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\null_thread.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\posix_thread.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\posix_thread.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\wince_thread.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\winapp_thread.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_thread.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_thread.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\std_thread.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\scheduler.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\concurrency_hint.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\limits.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\scheduler_thread_info.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\signal_blocker.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\null_signal_blocker.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\posix_signal_blocker.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\buffer_sequence_adapter.hpp \
		$(BOOST_INCLDUE)\boost\asio\buffer.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\array_fwd.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\string_view.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\is_buffer_sequence.hpp \
		$(BOOST_INCLDUE)\boost\asio\registered_buffer.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\buffer_sequence_adapter.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_operation.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\operation.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_operation.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\object_pool.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\null_reactor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\epoll_reactor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactor_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\select_interrupter.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\socket_select_interrupter.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\socket_select_interrupter.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\socket_holder.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\socket_ops.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\socket_ops.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\eventfd_select_interrupter.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\eventfd_select_interrupter.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\pipe_select_interrupter.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\pipe_select_interrupter.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\timer_queue_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\timer_queue_set.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\timer_queue_set.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\wait_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\epoll_reactor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\epoll_reactor.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\kqueue_reactor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\kqueue_reactor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\kqueue_reactor.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\dev_poll_reactor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\hash_map.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactor_op_queue.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\dev_poll_reactor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\dev_poll_reactor.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\select_reactor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\fd_set_adapter.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\posix_fd_set_adapter.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_fd_set_adapter.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\select_reactor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_io_context.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_thread_info.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_iocp_io_context.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\completion_handler.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\handler_work.hpp \
		$(BOOST_INCLDUE)\boost\asio\executor_work_guard.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_iocp_io_context.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\select_reactor.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\io_uring_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\io_uring_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\thread_group.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\system_context.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\system_context.ipp \
		$(BOOST_INCLDUE)\boost\asio\associated_cancellation_slot.hpp \
		$(BOOST_INCLDUE)\boost\asio\cancellation_signal.hpp \
		$(BOOST_INCLDUE)\boost\asio\cancellation_type.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\cancellation_signal.ipp \
		$(BOOST_INCLDUE)\boost\asio\awaitable.hpp \
		$(BOOST_INCLDUE)\boost\asio\any_io_executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\executor.ipp \
		$(BOOST_INCLDUE)\boost\asio\impl\any_io_executor.ipp \
		$(BOOST_INCLDUE)\boost\asio\impl\awaitable.hpp \
		$(BOOST_INCLDUE)\boost\asio\cancellation_state.hpp \
		$(BOOST_INCLDUE)\boost\asio\post.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\post.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\work_dispatcher.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\bind_handler.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\handler_cont_helpers.hpp \
		$(BOOST_INCLDUE)\boost\asio\handler_continuation_hook.hpp \
		$(BOOST_INCLDUE)\boost\asio\this_coro.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_datagram_socket.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_socket.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_object_impl.hpp \
		$(BOOST_INCLDUE)\boost\asio\io_context.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\wrapped_handler.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\winsock_init.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\winsock_init.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\signal_init.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\io_context.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\io_context.ipp \
		$(BOOST_INCLDUE)\boost\asio\io_context_strand.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\strand_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\strand_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\strand_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\socket_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_control.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\socket_option.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\null_socket_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_socket_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_null_buffers_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_socket_accept_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_socket_service_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_socket_connect_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_socket_send_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_socket_recv_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_socket_recvmsg_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_wait_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_iocp_socket_service_base.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_socket_recvfrom_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_socket_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_null_buffers_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_socket_accept_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_socket_connect_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_socket_recvfrom_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_socket_sendto_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_socket_service_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_socket_recv_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_socket_recvmsg_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_socket_send_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_wait_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\io_uring_socket_service_base.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_socket_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_null_buffers_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_socket_accept_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_socket_connect_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_socket_recvfrom_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_socket_sendto_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_socket_service_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_socket_recv_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_socket_recvmsg_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_socket_send_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_wait_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\reactive_socket_service_base.ipp \
		$(BOOST_INCLDUE)\boost\asio\basic_deadline_timer.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\deadline_timer_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\timer_queue.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\date_time_fwd.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\timer_queue_ptime.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\timer_queue_ptime.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\timer_scheduler.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\timer_scheduler_fwd.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\winrt_timer_scheduler.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\winrt_timer_scheduler.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\winrt_timer_scheduler.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\wait_handler.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_file.hpp \
		$(BOOST_INCLDUE)\boost\asio\file_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_file_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_handle_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_handle_read_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_handle_write_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_iocp_handle_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_iocp_file_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_file_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\descriptor_ops.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\descriptor_ops.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_descriptor_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_descriptor_read_at_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_descriptor_read_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_descriptor_write_at_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_descriptor_write_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\posix\descriptor_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\io_uring_descriptor_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\io_uring_file_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\basic_io_object.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_random_access_file.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_raw_socket.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_readable_pipe.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_descriptor_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\descriptor_read_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\descriptor_write_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\reactive_descriptor_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\basic_seq_packet_socket.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_serial_port.hpp \
		$(BOOST_INCLDUE)\boost\asio\serial_port_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\serial_port_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\serial_port_base.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_serial_port_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_iocp_serial_port_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\posix_serial_port_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\posix_serial_port_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\basic_signal_set.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\signal_set_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\signal_handler.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\signal_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\signal_set_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\basic_socket_acceptor.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_socket_iostream.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_socket_streambuf.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_stream_socket.hpp \
		$(BOOST_INCLDUE)\boost\asio\steady_timer.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_waitable_timer.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_stream_file.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_streambuf.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_streambuf_fwd.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_writable_pipe.hpp \
		$(BOOST_INCLDUE)\boost\asio\bind_allocator.hpp \
		$(BOOST_INCLDUE)\boost\asio\bind_cancellation_slot.hpp \
		$(BOOST_INCLDUE)\boost\asio\bind_executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\uses_executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\buffer_registration.hpp \
		$(BOOST_INCLDUE)\boost\asio\buffered_read_stream_fwd.hpp \
		$(BOOST_INCLDUE)\boost\asio\buffered_read_stream.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\buffer_resize_guard.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\buffered_stream_storage.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\buffered_read_stream.hpp \
		$(BOOST_INCLDUE)\boost\asio\buffered_stream_fwd.hpp \
		$(BOOST_INCLDUE)\boost\asio\buffered_stream.hpp \
		$(BOOST_INCLDUE)\boost\asio\buffered_write_stream.hpp \
		$(BOOST_INCLDUE)\boost\asio\buffered_write_stream_fwd.hpp \
		$(BOOST_INCLDUE)\boost\asio\completion_condition.hpp \
		$(BOOST_INCLDUE)\boost\asio\write.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\write.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\base_from_cancellation_state.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\base_from_completion_cond.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\consuming_buffers.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\dependent_type.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\buffered_write_stream.hpp \
		$(BOOST_INCLDUE)\boost\asio\buffers_iterator.hpp \
		$(BOOST_INCLDUE)\boost\asio\co_spawn.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\co_spawn.hpp \
		$(BOOST_INCLDUE)\boost\asio\dispatch.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\dispatch.hpp \
		$(BOOST_INCLDUE)\boost\asio\use_awaitable.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\source_location.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\use_awaitable.hpp \
		$(BOOST_INCLDUE)\boost\asio\compose.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\compose.hpp \
		$(BOOST_INCLDUE)\boost\asio\connect.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\connect.hpp \
		$(BOOST_INCLDUE)\boost\asio\connect_pipe.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\connect_pipe.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\connect_pipe.ipp \
		$(BOOST_INCLDUE)\boost\asio\coroutine.hpp \
		$(BOOST_INCLDUE)\boost\asio\deadline_timer.hpp \
		$(BOOST_INCLDUE)\boost\asio\defer.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\defer.hpp \
		$(BOOST_INCLDUE)\boost\asio\detached.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\detached.hpp \
		$(BOOST_INCLDUE)\boost\asio\generic\basic_endpoint.hpp \
		$(BOOST_INCLDUE)\boost\asio\generic\detail\endpoint.hpp \
		$(BOOST_INCLDUE)\boost\asio\generic\detail\impl\endpoint.ipp \
		$(BOOST_INCLDUE)\boost\asio\generic\datagram_protocol.hpp \
		$(BOOST_INCLDUE)\boost\asio\generic\raw_protocol.hpp \
		$(BOOST_INCLDUE)\boost\asio\generic\seq_packet_protocol.hpp \
		$(BOOST_INCLDUE)\boost\asio\generic\stream_protocol.hpp \
		$(BOOST_INCLDUE)\boost\asio\high_resolution_timer.hpp \
		$(BOOST_INCLDUE)\boost\asio\io_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\io_service_strand.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\address.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\address_v4.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\array.hpp \
		$(BOOST_INCLDUE)\boost\array.hpp \
		$(BOOST_INCLDUE)\boost\swap.hpp \
		$(BOOST_INCLDUE)\boost\core\swap.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\address_v4.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\address_v4.ipp \
		$(BOOST_INCLDUE)\boost\asio\ip\address_v6.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\address_v6.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\address_v6.ipp \
		$(BOOST_INCLDUE)\boost\asio\ip\bad_address_cast.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\address.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\address.ipp \
		$(BOOST_INCLDUE)\boost\asio\ip\address_v4_iterator.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\address_v4_range.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\address_v6_iterator.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\address_v6_range.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\network_v4.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\network_v4.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\network_v4.ipp \
		$(BOOST_INCLDUE)\boost\asio\ip\network_v6.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\network_v6.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\network_v6.ipp \
		$(BOOST_INCLDUE)\boost\asio\ip\basic_endpoint.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\detail\endpoint.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\detail\impl\endpoint.ipp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\basic_endpoint.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\basic_resolver.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\basic_resolver_iterator.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\basic_resolver_entry.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\winrt_utils.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\basic_resolver_query.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\resolver_query_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\resolver_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\basic_resolver_results.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\winrt_resolver_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\winrt_async_manager.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\winrt_async_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\winrt_resolve_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\resolver_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\resolve_endpoint_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\resolve_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\resolve_query_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\resolver_service_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\resolver_service_base.ipp \
		$(BOOST_INCLDUE)\boost\asio\ip\host_name.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\host_name.ipp \
		$(BOOST_INCLDUE)\boost\asio\ip\icmp.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\multicast.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\detail\socket_option.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\tcp.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\udp.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\unicast.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\v6_only.hpp \
		$(BOOST_INCLDUE)\boost\asio\is_read_buffered.hpp \
		$(BOOST_INCLDUE)\boost\asio\is_write_buffered.hpp \
		$(BOOST_INCLDUE)\boost\asio\local\basic_endpoint.hpp \
		$(BOOST_INCLDUE)\boost\asio\local\detail\endpoint.hpp \
		$(BOOST_INCLDUE)\boost\asio\local\detail\impl\endpoint.ipp \
		$(BOOST_INCLDUE)\boost\asio\local\connect_pair.hpp \
		$(BOOST_INCLDUE)\boost\asio\local\datagram_protocol.hpp \
		$(BOOST_INCLDUE)\boost\asio\local\stream_protocol.hpp \
		$(BOOST_INCLDUE)\boost\asio\packaged_task.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\future.hpp \
		$(BOOST_INCLDUE)\boost\asio\placeholders.hpp \
		$(BOOST_INCLDUE)\boost\bind\arg.hpp \
		$(BOOST_INCLDUE)\boost\is_placeholder.hpp \
		$(BOOST_INCLDUE)\boost\asio\posix\basic_descriptor.hpp \
		$(BOOST_INCLDUE)\boost\asio\posix\basic_stream_descriptor.hpp \
		$(BOOST_INCLDUE)\boost\asio\posix\descriptor.hpp \
		$(BOOST_INCLDUE)\boost\asio\posix\stream_descriptor.hpp \
		$(BOOST_INCLDUE)\boost\asio\random_access_file.hpp \
		$(BOOST_INCLDUE)\boost\asio\read.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\read.hpp \
		$(BOOST_INCLDUE)\boost\asio\read_at.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\read_at.hpp \
		$(BOOST_INCLDUE)\boost\asio\read_until.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\regex_fwd.hpp \
		$(BOOST_INCLDUE)\boost\regex_fwd.hpp \
		$(BOOST_INCLDUE)\boost\regex\config.hpp \
		$(BOOST_INCLDUE)\boost\regex\config\borland.hpp \
		$(BOOST_INCLDUE)\boost\regex\config\cwchar.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_fwd.hpp \
		$(BOOST_INCLDUE)\boost\regex.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_workaround.hpp \
		$(BOOST_INCLDUE)\boost\scoped_ptr.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\scoped_ptr.hpp \
		$(BOOST_INCLDUE)\boost\scoped_array.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\scoped_array.hpp \
		$(BOOST_INCLDUE)\boost\regex\regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\syntax_type.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\error_type.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_traits_defaults.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\make_unsigned.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\cpp_regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\pattern_except.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\pattern_except.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\pattern_except.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\error_type.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_traits_defaults.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\syntax_type.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_workaround.hpp \
		$(BOOST_INCLDUE)\boost\regex\pending\static_mutex.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\primary_transform.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\object_cache.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\c_regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\w32_regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\cpp_regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\primary_transform.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\object_cache.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\c_regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\w32_regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\match_flags.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_raw_buffer.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\char_regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\states.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regbase.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\iterator_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\basic_regex.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\basic_regex_creator.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\indexed_bit_flag.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\basic_regex_parser.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\sub_match.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_format.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\match_results.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\protected_call.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\perl_matcher.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\iterator_category.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\perl_matcher_recursive.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\perl_matcher_non_recursive.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\mem_block_cache.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\perl_matcher_common.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_match.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_search.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_iterator.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_token_iterator.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_grep.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_replace.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_merge.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_split.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\match_flags.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_raw_buffer.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\char_regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\states.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regbase.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\basic_regex.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\basic_regex_creator.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\basic_regex_parser.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\sub_match.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_format.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\match_results.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\perl_matcher.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\iterator_category.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\perl_matcher_non_recursive.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\mem_block_cache.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\perl_matcher_common.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_match.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_search.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_iterator.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_token_iterator.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_grep.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_replace.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_merge.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_split.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_fwd.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\read_until.hpp \
		$(BOOST_INCLDUE)\boost\asio\readable_pipe.hpp \
		$(BOOST_INCLDUE)\boost\asio\recycling_allocator.hpp \
		$(BOOST_INCLDUE)\boost\asio\redirect_error.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\redirect_error.hpp \
		$(BOOST_INCLDUE)\boost\asio\require_concept.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\require_concept_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\require_concept_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\static_require_concept.hpp \
		$(BOOST_INCLDUE)\boost\asio\serial_port.hpp \
		$(BOOST_INCLDUE)\boost\asio\signal_set.hpp \
		$(BOOST_INCLDUE)\boost\asio\static_thread_pool.hpp \
		$(BOOST_INCLDUE)\boost\asio\thread_pool.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\thread_pool.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\blocking_executor_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\bulk_executor_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\thread_pool.ipp \
		$(BOOST_INCLDUE)\boost\asio\strand.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\strand_executor_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\strand_executor_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\strand_executor_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\stream_file.hpp \
		$(BOOST_INCLDUE)\boost\asio\streambuf.hpp \
		$(BOOST_INCLDUE)\boost\asio\system_timer.hpp \
		$(BOOST_INCLDUE)\boost\asio\use_future.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\use_future.hpp \
		$(BOOST_INCLDUE)\boost\asio\version.hpp \
		$(BOOST_INCLDUE)\boost\asio\windows\basic_object_handle.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_object_handle_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_object_handle_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\windows\basic_overlapped_handle.hpp \
		$(BOOST_INCLDUE)\boost\asio\windows\basic_random_access_handle.hpp \
		$(BOOST_INCLDUE)\boost\asio\windows\basic_stream_handle.hpp \
		$(BOOST_INCLDUE)\boost\asio\windows\object_handle.hpp \
		$(BOOST_INCLDUE)\boost\asio\windows\overlapped_handle.hpp \
		$(BOOST_INCLDUE)\boost\asio\windows\overlapped_ptr.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_overlapped_ptr.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_overlapped_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\windows\random_access_handle.hpp \
		$(BOOST_INCLDUE)\boost\asio\windows\stream_handle.hpp \
		$(BOOST_INCLDUE)\boost\asio\writable_pipe.hpp \
		$(BOOST_INCLDUE)\boost\asio\write_at.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\write_at.hpp \
		..\ws_client\include\ws_client.h \
		..\arcirk\include\arcirk.h \
		$(BOOST_INCLDUE)\boost\variant.hpp \
		$(BOOST_INCLDUE)\boost\variant\variant.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\config.hpp \
		$(BOOST_INCLDUE)\boost\variant\variant_fwd.hpp \
		$(BOOST_INCLDUE)\boost\blank_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\arg.hpp \
		$(BOOST_INCLDUE)\boost\mpl\arg_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\na_assert.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\arity_spec.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\arg_typedef.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\enum_shifted_params.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\substitute_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\template_arity.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\has_rebind.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\msvc_is_class.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\range.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\subseq.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\first_n.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\detail\split.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\detail\limits\split_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\detail\limits\split_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\detail\limits\split_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\rest_n.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\detail\is_empty.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\fold_left.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\seq.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\fold_left_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\fold_left_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\fold_left_1024.hpp \
		$(BOOST_INCLDUE)\boost\mpl\limits\list.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\backup_holder.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\enable_recursive_fwd.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\forced_return.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\initializer.hpp \
		$(BOOST_INCLDUE)\boost\detail\reference_content.hpp \
		$(BOOST_INCLDUE)\boost\variant\recursive_wrapper_fwd.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_nothrow_move_constructible.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_trivial_move_constructor.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\remove_const.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\move.hpp \
		$(BOOST_INCLDUE)\boost\move\adl_move_swap.hpp \
		$(BOOST_INCLDUE)\boost\mpl\iter_fold.hpp \
		$(BOOST_INCLDUE)\boost\mpl\begin_end.hpp \
		$(BOOST_INCLDUE)\boost\mpl\begin_end_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\begin_end_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\sequence_tag_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\has_begin.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\traits_lambda_spec.hpp \
		$(BOOST_INCLDUE)\boost\mpl\sequence_tag.hpp \
		$(BOOST_INCLDUE)\boost\mpl\O1_size.hpp \
		$(BOOST_INCLDUE)\boost\mpl\O1_size_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\O1_size_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\long.hpp \
		$(BOOST_INCLDUE)\boost\mpl\long_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\has_size.hpp \
		$(BOOST_INCLDUE)\boost\mpl\lambda.hpp \
		$(BOOST_INCLDUE)\boost\mpl\bind.hpp \
		$(BOOST_INCLDUE)\boost\mpl\bind_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\bind.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\dmc_ambiguous_ctps.hpp \
		$(BOOST_INCLDUE)\boost\mpl\placeholders.hpp \
		$(BOOST_INCLDUE)\boost\mpl\next.hpp \
		$(BOOST_INCLDUE)\boost\mpl\next_prior.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\common_name_wknd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\protect.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\count_args.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\expr_if.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\expr_if.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\full_lambda.hpp \
		$(BOOST_INCLDUE)\boost\mpl\quote.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\has_type.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\lambda_no_ctps.hpp \
		$(BOOST_INCLDUE)\boost\mpl\is_placeholder.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\iter_fold_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\apply.hpp \
		$(BOOST_INCLDUE)\boost\mpl\apply_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\fold_impl_body.hpp \
		$(BOOST_INCLDUE)\boost\mpl\limits\unrolling.hpp \
		$(BOOST_INCLDUE)\boost\mpl\deref.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\msvc_type.hpp \
		$(BOOST_INCLDUE)\boost\mpl\pair.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\make_variant_list.hpp \
		$(BOOST_INCLDUE)\boost\mpl\list.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\sequence_wrapper.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\enum_params_with_a_default.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\enum_params_with_a_default.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\over_sequence.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\visitation_impl.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\cast_storage.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\hash_variant.hpp \
		$(BOOST_INCLDUE)\boost\variant\static_visitor.hpp \
		$(BOOST_INCLDUE)\boost\variant\apply_visitor.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\apply_visitor_unary.hpp \
		$(BOOST_INCLDUE)\boost\move\utility.hpp \
		$(BOOST_INCLDUE)\boost\move\traits.hpp \
		$(BOOST_INCLDUE)\boost\mpl\distance.hpp \
		$(BOOST_INCLDUE)\boost\mpl\distance_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\iterator_range.hpp \
		$(BOOST_INCLDUE)\boost\mpl\advance.hpp \
		$(BOOST_INCLDUE)\boost\mpl\advance_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\negate.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\advance_forward.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\advance_backward.hpp \
		$(BOOST_INCLDUE)\boost\mpl\prior.hpp \
		$(BOOST_INCLDUE)\boost\mpl\size.hpp \
		$(BOOST_INCLDUE)\boost\mpl\size_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\size_impl.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\copy_cv_ref.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\copy_reference.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\has_result_type.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\apply_visitor_binary.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\apply_visitor_delayed.hpp \
		$(BOOST_INCLDUE)\boost\functional\hash_fwd.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\std_hash.hpp \
		$(BOOST_INCLDUE)\boost\blank.hpp \
		$(BOOST_INCLDUE)\boost\detail\templated_streams.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_empty.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_stateless.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_trivial_constructor.hpp \
		$(BOOST_INCLDUE)\boost\integer\common_factor_ct.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_nothrow_constructor.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\remove_all_extents.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_nothrow_move_assignable.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_trivial_move_assign.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_assignable.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_trivial_assign.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_nothrow_assign.hpp \
		$(BOOST_INCLDUE)\boost\mpl\empty.hpp \
		$(BOOST_INCLDUE)\boost\mpl\empty_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\empty_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\find_if.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\find_if_pred.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\iter_apply.hpp \
		$(BOOST_INCLDUE)\boost\mpl\iter_fold_if.hpp \
		$(BOOST_INCLDUE)\boost\mpl\always.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\iter_fold_if_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\fold.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\fold_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\front.hpp \
		$(BOOST_INCLDUE)\boost\mpl\front_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\front_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\insert_range.hpp \
		$(BOOST_INCLDUE)\boost\mpl\insert_range_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\insert_range_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\insert.hpp \
		$(BOOST_INCLDUE)\boost\mpl\insert_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\insert_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\reverse_fold.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\reverse_fold_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\reverse_fold_impl_body.hpp \
		$(BOOST_INCLDUE)\boost\mpl\clear.hpp \
		$(BOOST_INCLDUE)\boost\mpl\clear_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\clear_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\push_front.hpp \
		$(BOOST_INCLDUE)\boost\mpl\push_front_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\push_front_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\joint_view.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\joint_iter.hpp \
		$(BOOST_INCLDUE)\boost\mpl\iterator_tags.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\lambda_spec.hpp \
		$(BOOST_INCLDUE)\boost\mpl\plus.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\iter_push_front.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\same_traits.hpp \
		$(BOOST_INCLDUE)\boost\mpl\is_sequence.hpp \
		$(BOOST_INCLDUE)\boost\mpl\max_element.hpp \
		$(BOOST_INCLDUE)\boost\mpl\same_as.hpp \
		$(BOOST_INCLDUE)\boost\mpl\size_t.hpp \
		$(BOOST_INCLDUE)\boost\mpl\size_t_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\sizeof.hpp \
		$(BOOST_INCLDUE)\boost\mpl\transform.hpp \
		$(BOOST_INCLDUE)\boost\mpl\pair_view.hpp \
		$(BOOST_INCLDUE)\boost\mpl\iterator_category.hpp \
		$(BOOST_INCLDUE)\boost\mpl\min_max.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\inserter_algorithm.hpp \
		$(BOOST_INCLDUE)\boost\mpl\back_inserter.hpp \
		$(BOOST_INCLDUE)\boost\mpl\push_back.hpp \
		$(BOOST_INCLDUE)\boost\mpl\push_back_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\push_back_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\inserter.hpp \
		$(BOOST_INCLDUE)\boost\mpl\front_inserter.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\variant_io.hpp \
		$(BOOST_INCLDUE)\boost\variant\recursive_variant.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\enable_recursive.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\substitute.hpp \
		$(BOOST_INCLDUE)\boost\variant\recursive_wrapper.hpp \
		$(BOOST_INCLDUE)\boost\mpl\equal.hpp \
		$(BOOST_INCLDUE)\boost\variant\get.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\element_index.hpp \
		$(BOOST_INCLDUE)\boost\variant\visitor_ptr.hpp \
		$(BOOST_INCLDUE)\boost\variant\bad_visit.hpp \
		$(BOOST_INCLDUE)\boost\exception\all.hpp \
		$(BOOST_INCLDUE)\boost\exception\diagnostic_information.hpp \
		$(BOOST_INCLDUE)\boost\exception\get_error_info.hpp \
		$(BOOST_INCLDUE)\boost\exception\detail\error_info_impl.hpp \
		$(BOOST_INCLDUE)\boost\exception\detail\type_info.hpp \
		$(BOOST_INCLDUE)\boost\exception\detail\shared_ptr.hpp \
		$(BOOST_INCLDUE)\boost\exception\info.hpp \
		$(BOOST_INCLDUE)\boost\exception\to_string_stub.hpp \
		$(BOOST_INCLDUE)\boost\exception\to_string.hpp \
		$(BOOST_INCLDUE)\boost\exception\detail\is_output_streamable.hpp \
		$(BOOST_INCLDUE)\boost\exception\detail\object_hex_dump.hpp \
		$(BOOST_INCLDUE)\boost\exception\current_exception_cast.hpp \
		$(BOOST_INCLDUE)\boost\exception\error_info.hpp \
		$(BOOST_INCLDUE)\boost\exception\info_tuple.hpp \
		$(BOOST_INCLDUE)\boost\tuple\tuple.hpp \
		$(BOOST_INCLDUE)\boost\tuple\detail\tuple_basic.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\cv_traits.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\add_cv.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\remove_volatile.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\function_traits.hpp \
		$(BOOST_INCLDUE)\boost\utility\swap.hpp \
		$(BOOST_INCLDUE)\boost\exception\errinfo_api_function.hpp \
		$(BOOST_INCLDUE)\boost\exception\errinfo_at_line.hpp \
		$(BOOST_INCLDUE)\boost\exception\errinfo_errno.hpp \
		$(BOOST_INCLDUE)\boost\exception\errinfo_file_handle.hpp \
		$(BOOST_INCLDUE)\boost\exception\errinfo_file_name.hpp \
		$(BOOST_INCLDUE)\boost\exception\errinfo_file_open_mode.hpp \
		$(BOOST_INCLDUE)\boost\exception\errinfo_type_info_name.hpp \
		$(BOOST_INCLDUE)\boost\exception\errinfo_nested_exception.hpp \
		$(BOOST_INCLDUE)\boost\exception_ptr.hpp \
		$(BOOST_INCLDUE)\boost\exception\detail\exception_ptr.hpp \
		$(BOOST_INCLDUE)\boost\exception\detail\clone_current_exception.hpp \
		$(BOOST_INCLDUE)\boost\uuid\uuid.hpp \
		$(BOOST_INCLDUE)\boost\uuid\detail\config.hpp \
		$(BOOST_INCLDUE)\boost\uuid\detail\uuid_x86.ipp \
		$(BOOST_INCLDUE)\boost\uuid\detail\uuid_generic.ipp \
		$(BOOST_INCLDUE)\boost\uuid\uuid_generators.hpp \
		$(BOOST_INCLDUE)\boost\uuid\nil_generator.hpp \
		$(BOOST_INCLDUE)\boost\uuid\string_generator.hpp \
		$(BOOST_INCLDUE)\boost\uuid\name_generator.hpp \
		$(BOOST_INCLDUE)\boost\uuid\name_generator_sha1.hpp \
		$(BOOST_INCLDUE)\boost\uuid\basic_name_generator.hpp \
		$(BOOST_INCLDUE)\boost\uuid\detail\sha1.hpp \
		$(BOOST_INCLDUE)\boost\uuid\random_generator.hpp \
		$(BOOST_INCLDUE)\boost\random\mersenne_twister.hpp \
		$(BOOST_INCLDUE)\boost\integer\integer_mask.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\config.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\ptr_helper.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\seed.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\seed_impl.hpp \
		$(BOOST_INCLDUE)\boost\random\traits.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\const_mod.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\large_arithmetic.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\integer_log2.hpp \
		$(BOOST_INCLDUE)\boost\integer\integer_log2.hpp \
		$(BOOST_INCLDUE)\boost\core\bit.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\disable_warnings.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\enable_warnings.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\signed_unsigned_tools.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\generator_bits.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\generator_seed_seq.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\polynomial.hpp \
		$(BOOST_INCLDUE)\boost\random\uniform_int.hpp \
		$(BOOST_INCLDUE)\boost\random\uniform_int_distribution.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\operators.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\uniform_int_float.hpp \
		$(BOOST_INCLDUE)\boost\random\variate_generator.hpp \
		$(BOOST_INCLDUE)\boost\tti\has_member_function.hpp \
		$(BOOST_INCLDUE)\boost\function_types\property_tags.hpp \
		$(BOOST_INCLDUE)\boost\mpl\bitxor.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\pp_tags\preprocessed.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\pp_loop.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\punctuation\paren.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\encoding\def.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\encoding\aliases_def.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\encoding\aliases_undef.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\encoding\undef.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector.hpp \
		$(BOOST_INCLDUE)\boost\mpl\limits\vector.hpp \
		$(BOOST_INCLDUE)\boost\tti\detail\ddeftype.hpp \
		$(BOOST_INCLDUE)\boost\tti\detail\dmem_fun.hpp \
		$(BOOST_INCLDUE)\boost\function_types\is_member_function_pointer.hpp \
		$(BOOST_INCLDUE)\boost\function_types\components.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\vector0.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\at.hpp \
		$(BOOST_INCLDUE)\boost\mpl\at_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\tag.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\typeof.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\front.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\push_front.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\item.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\pop_front.hpp \
		$(BOOST_INCLDUE)\boost\mpl\pop_front_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\push_back.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\pop_back.hpp \
		$(BOOST_INCLDUE)\boost\mpl\pop_back_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\back.hpp \
		$(BOOST_INCLDUE)\boost\mpl\back_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\clear.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\vector0.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\iterator.hpp \
		$(BOOST_INCLDUE)\boost\mpl\minus.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\O1_size.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\size.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\empty.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\begin_end.hpp \
		$(BOOST_INCLDUE)\boost\mpl\bitand.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\vector10.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\include_preprocessed.hpp \
		$(BOOST_INCLDUE)\boost\mpl\begin.hpp \
		$(BOOST_INCLDUE)\boost\mpl\copy.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\classifier.hpp \
		$(BOOST_INCLDUE)\boost\function_types\config\config.hpp \
		$(BOOST_INCLDUE)\boost\function_types\config\compiler.hpp \
		$(BOOST_INCLDUE)\boost\function_types\config\cc_names.hpp \
		$(BOOST_INCLDUE)\boost\mpl\remove.hpp \
		$(BOOST_INCLDUE)\boost\mpl\remove_if.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\vector20.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\vector30.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\vector40.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\vector50.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\class_transform.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\components_as_mpl_sequence.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\retag_default_cc.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\pp_retag_default_cc\master.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\iteration\self.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\pp_retag_default_cc\preprocessed.hpp \
		$(BOOST_INCLDUE)\boost\tti\detail\dcomp_mem_fun.hpp \
		$(BOOST_INCLDUE)\boost\tti\detail\dftclass.hpp \
		$(BOOST_INCLDUE)\boost\function_types\parameter_types.hpp \
		$(BOOST_INCLDUE)\boost\mpl\pop_front.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\pop_front_impl.hpp \
		$(BOOST_INCLDUE)\boost\function_types\is_callable_builtin.hpp \
		$(BOOST_INCLDUE)\boost\mpl\at.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\at_impl.hpp \
		$(BOOST_INCLDUE)\boost\tti\detail\dmacro_sunfix.hpp \
		$(BOOST_INCLDUE)\boost\tti\detail\dnullptr.hpp \
		$(BOOST_INCLDUE)\boost\tti\gen\namespace_gen.hpp \
		$(BOOST_INCLDUE)\boost\tti\detail\denclosing_type.hpp \
		$(BOOST_INCLDUE)\boost\tti\detail\dptmf.hpp \
		$(BOOST_INCLDUE)\boost\function_types\member_function_pointer.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\synthesize.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\cv_traits.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\to_sequence.hpp \
		$(BOOST_INCLDUE)\boost\tti\gen\has_member_function_gen.hpp \
		$(BOOST_INCLDUE)\boost\uuid\detail\random_provider.hpp \
		$(BOOST_INCLDUE)\boost\uuid\entropy_error.hpp \
		$(BOOST_INCLDUE)\boost\uuid\detail\random_provider_detect_platform.hpp \
		$(BOOST_INCLDUE)\boost\uuid\detail\random_provider_include_platform.hpp \
		$(BOOST_INCLDUE)\boost\uuid\detail\random_provider_arc4random.ipp \
		$(BOOST_INCLDUE)\boost\uuid\detail\random_provider_bcrypt.ipp \
		$(BOOST_INCLDUE)\boost\core\ignore_unused.hpp \
		$(BOOST_INCLDUE)\boost\winapi\bcrypt.hpp \
		$(BOOST_INCLDUE)\boost\uuid\detail\random_provider_getentropy.ipp \
		$(BOOST_INCLDUE)\boost\uuid\detail\random_provider_getrandom.ipp \
		$(BOOST_INCLDUE)\boost\uuid\detail\random_provider_posix.ipp \
		$(BOOST_INCLDUE)\boost\uuid\detail\random_provider_wincrypt.ipp \
		$(BOOST_INCLDUE)\boost\winapi\crypt.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast.hpp \
		$(BOOST_INCLDUE)\boost\range\iterator_range_core.hpp \
		$(BOOST_INCLDUE)\boost\iterator\iterator_traits.hpp \
		$(BOOST_INCLDUE)\boost\iterator\iterator_facade.hpp \
		$(BOOST_INCLDUE)\boost\iterator\interoperable.hpp \
		$(BOOST_INCLDUE)\boost\iterator\detail\config_def.hpp \
		$(BOOST_INCLDUE)\boost\iterator\detail\config_undef.hpp \
		$(BOOST_INCLDUE)\boost\iterator\iterator_categories.hpp \
		$(BOOST_INCLDUE)\boost\iterator\detail\facade_iterator_category.hpp \
		$(BOOST_INCLDUE)\boost\core\use_default.hpp \
		$(BOOST_INCLDUE)\boost\detail\indirect_traits.hpp \
		$(BOOST_INCLDUE)\boost\detail\select_type.hpp \
		$(BOOST_INCLDUE)\boost\iterator\detail\enable_if.hpp \
		$(BOOST_INCLDUE)\boost\range\functions.hpp \
		$(BOOST_INCLDUE)\boost\range\begin.hpp \
		$(BOOST_INCLDUE)\boost\range\config.hpp \
		$(BOOST_INCLDUE)\boost\range\iterator.hpp \
		$(BOOST_INCLDUE)\boost\range\range_fwd.hpp \
		$(BOOST_INCLDUE)\boost\range\mutable_iterator.hpp \
		$(BOOST_INCLDUE)\boost\range\detail\extract_optional_type.hpp \
		$(BOOST_INCLDUE)\boost\range\detail\msvc_has_iterator_workaround.hpp \
		$(BOOST_INCLDUE)\boost\range\const_iterator.hpp \
		$(BOOST_INCLDUE)\boost\range\end.hpp \
		$(BOOST_INCLDUE)\boost\range\detail\implementation_help.hpp \
		$(BOOST_INCLDUE)\boost\range\detail\common.hpp \
		$(BOOST_INCLDUE)\boost\range\detail\sfinae.hpp \
		$(BOOST_INCLDUE)\boost\range\size.hpp \
		$(BOOST_INCLDUE)\boost\range\size_type.hpp \
		$(BOOST_INCLDUE)\boost\range\difference_type.hpp \
		$(BOOST_INCLDUE)\boost\range\has_range_iterator.hpp \
		$(BOOST_INCLDUE)\boost\range\concepts.hpp \
		$(BOOST_INCLDUE)\boost\concept_check.hpp \
		$(BOOST_INCLDUE)\boost\concept\assert.hpp \
		$(BOOST_INCLDUE)\boost\concept\detail\msvc.hpp \
		$(BOOST_INCLDUE)\boost\concept\detail\backward_compatibility.hpp \
		$(BOOST_INCLDUE)\boost\concept\detail\has_constraints.hpp \
		$(BOOST_INCLDUE)\boost\concept\detail\borland.hpp \
		$(BOOST_INCLDUE)\boost\concept\detail\general.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\conversion_traits.hpp \
		$(BOOST_INCLDUE)\boost\concept\usage.hpp \
		$(BOOST_INCLDUE)\boost\concept\detail\concept_def.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\for_each_i.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\enum.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\enum_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\enum_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\enum_1024.hpp \
		$(BOOST_INCLDUE)\boost\concept\detail\concept_undef.hpp \
		$(BOOST_INCLDUE)\boost\iterator\iterator_concepts.hpp \
		$(BOOST_INCLDUE)\boost\range\value_type.hpp \
		$(BOOST_INCLDUE)\boost\range\detail\misc_concept.hpp \
		$(BOOST_INCLDUE)\boost\range\detail\has_member_size.hpp \
		$(BOOST_INCLDUE)\boost\utility.hpp \
		$(BOOST_INCLDUE)\boost\utility\base_from_member.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\repeat_from_to.hpp \
		$(BOOST_INCLDUE)\boost\utility\binary.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\deduce_d.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\cat.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\transform.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\mod.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\detail\div_base.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\comparison\less_equal.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\detail\is_1_number.hpp \
		$(BOOST_INCLDUE)\boost\utility\identity_type.hpp \
		$(BOOST_INCLDUE)\boost\core\noncopyable.hpp \
		$(BOOST_INCLDUE)\boost\range\distance.hpp \
		$(BOOST_INCLDUE)\boost\iterator\distance.hpp \
		$(BOOST_INCLDUE)\boost\range\empty.hpp \
		$(BOOST_INCLDUE)\boost\range\rbegin.hpp \
		$(BOOST_INCLDUE)\boost\range\reverse_iterator.hpp \
		$(BOOST_INCLDUE)\boost\iterator\reverse_iterator.hpp \
		$(BOOST_INCLDUE)\boost\iterator\iterator_adaptor.hpp \
		$(BOOST_INCLDUE)\boost\range\rend.hpp \
		$(BOOST_INCLDUE)\boost\range\algorithm\equal.hpp \
		$(BOOST_INCLDUE)\boost\range\detail\safe_bool.hpp \
		$(BOOST_INCLDUE)\boost\next_prior.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_plus.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\has_binary_operator.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\make_void.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_fundamental.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_likely_lambda.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_plus_assign.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_minus.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_minus_assign.hpp \
		$(BOOST_INCLDUE)\boost\iterator\advance.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast\bad_lexical_cast.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast\try_lexical_convert.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast\detail\is_character.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast\detail\converter_numeric.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_float.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast\detail\converter_lexical.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_left_shift.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_right_shift.hpp \
		$(BOOST_INCLDUE)\boost\detail\lcast_precision.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast\detail\widest_char.hpp \
		$(BOOST_INCLDUE)\boost\container\container_fwd.hpp \
		$(BOOST_INCLDUE)\boost\container\detail\std_fwd.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\std_ns_begin.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\std_ns_end.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast\detail\converter_lexical_streams.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast\detail\lcast_char_constants.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast\detail\lcast_unsigned_converters.hpp \
		$(BOOST_INCLDUE)\boost\noncopyable.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast\detail\inf_nan.hpp \
		$(BOOST_INCLDUE)\boost\core\cmath.hpp \
		$(BOOST_INCLDUE)\boost\detail\basic_pointerbuf.hpp \
		$(BOOST_INCLDUE)\boost\uuid\uuid_io.hpp \
		$(BOOST_INCLDUE)\boost\io\ios_state.hpp \
		$(BOOST_INCLDUE)\boost\io_fwd.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\std_containers_traits.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\std\string_traits.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\yes_no_type.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\sequence_traits.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\std\list_traits.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\std\slist_traits.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\config.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\trim.hpp \
		$(BOOST_INCLDUE)\boost\range\as_literal.hpp \
		$(BOOST_INCLDUE)\boost\range\iterator_range.hpp \
		$(BOOST_INCLDUE)\boost\range\iterator_range_io.hpp \
		$(BOOST_INCLDUE)\boost\range\detail\str_types.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\trim.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\classification.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\classification.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\predicate_facade.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\case_conv.hpp \
		$(BOOST_INCLDUE)\boost\iterator\transform_iterator.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\case_conv.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\predicate.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\compare.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\find.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\finder.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\constants.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\finder.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\predicate.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\split.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\iter_find.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\concept.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\find_iterator.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\find_iterator.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\util.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\join.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\sequence.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\replace.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\find_format.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\find_format.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\find_format_store.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\replace_storage.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\find_format_all.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\formatter.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\formatter.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\erase.hpp \
		$(BOOST_INCLDUE)\boost\archive\iterators\base64_from_binary.hpp \
		$(BOOST_INCLDUE)\boost\archive\iterators\dataflow_exception.hpp \
		$(BOOST_INCLDUE)\boost\archive\iterators\transform_width.hpp \
		$(BOOST_INCLDUE)\boost\archive\iterators\binary_from_base64.hpp \
		$(BOOST_INCLDUE)\boost\serialization\throw_exception.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\ptree.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\ptree_fwd.hpp \
		$(BOOST_INCLDUE)\boost\optional\optional_fwd.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\string_path.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\id_translator.hpp \
		$(BOOST_INCLDUE)\boost\optional.hpp \
		$(BOOST_INCLDUE)\boost\optional\optional.hpp \
		$(BOOST_INCLDUE)\boost\core\explicit_operator_bool.hpp \
		$(BOOST_INCLDUE)\boost\optional\bad_optional_access.hpp \
		$(BOOST_INCLDUE)\boost\none.hpp \
		$(BOOST_INCLDUE)\boost\none_t.hpp \
		$(BOOST_INCLDUE)\boost\utility\compare_pointees.hpp \
		$(BOOST_INCLDUE)\boost\optional\detail\optional_config.hpp \
		$(BOOST_INCLDUE)\boost\optional\detail\optional_factory_support.hpp \
		$(BOOST_INCLDUE)\boost\optional\detail\optional_aligned_storage.hpp \
		$(BOOST_INCLDUE)\boost\optional\detail\old_optional_implementation.hpp \
		$(BOOST_INCLDUE)\boost\optional\detail\optional_trivially_copyable_base.hpp \
		$(BOOST_INCLDUE)\boost\optional\detail\optional_reference_spec.hpp \
		$(BOOST_INCLDUE)\boost\optional\detail\optional_relops.hpp \
		$(BOOST_INCLDUE)\boost\optional\detail\optional_swap.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\exceptions.hpp \
		$(BOOST_INCLDUE)\boost\any.hpp \
		$(BOOST_INCLDUE)\boost\any\bad_any_cast.hpp \
		$(BOOST_INCLDUE)\boost\any\fwd.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\detail\exception_implementation.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\detail\ptree_utils.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\stream_translator.hpp \
		$(BOOST_INCLDUE)\boost\optional\optional_io.hpp \
		$(BOOST_INCLDUE)\boost\multi_index_container.hpp \
		$(BOOST_INCLDUE)\boost\mpl\contains.hpp \
		$(BOOST_INCLDUE)\boost\mpl\contains_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\contains_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\find.hpp \
		$(BOOST_INCLDUE)\boost\multi_index_container_fwd.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\identity.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\identity_fwd.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\indexed_by.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\ordered_index_fwd.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\ord_index_args.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\tag.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\no_duplicate_tags.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\set0.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\at_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\has_key_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\tag.hpp \
		$(BOOST_INCLDUE)\boost\mpl\has_key_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\overload_names.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\ptr_to_ref.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\operators.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\clear_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\set0.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\size_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\empty_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\insert_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\item.hpp \
		$(BOOST_INCLDUE)\boost\mpl\base.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\insert_range_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\erase_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\erase_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\erase_key_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\erase_key_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\key_type_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\key_type_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\value_type_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\value_type_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\begin_end_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\iterator.hpp \
		$(BOOST_INCLDUE)\boost\mpl\has_key.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\has_key_impl.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\ord_index_impl_fwd.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\access_specifier.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\adl_swap.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\allocator_traits.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\vartempl_support.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\base_type.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\index_base.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\copy_map.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\auto_space.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\raw_ptr.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\do_not_copy_elements_tag.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\index_access_sequence.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\node_handle.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\define_if_constexpr_macro.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\ignore_wstrict_aliasing.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\restore_wstrict_aliasing.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\undef_if_constexpr_macro.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\node_type.hpp \
		$(BOOST_INCLDUE)\boost\mpl\reverse_iter_fold.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\reverse_iter_fold_impl.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\header_holder.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\index_node_base.hpp \
		$(BOOST_INCLDUE)\boost\archive\archive_exception.hpp \
		$(BOOST_INCLDUE)\boost\archive\detail\decl.hpp \
		$(BOOST_INCLDUE)\boost\archive\detail\abi_prefix.hpp \
		$(BOOST_INCLDUE)\boost\archive\detail\abi_suffix.hpp \
		$(BOOST_INCLDUE)\boost\serialization\access.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\is_index_list.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\index_loader.hpp \
		$(BOOST_INCLDUE)\boost\serialization\nvp.hpp \
		$(BOOST_INCLDUE)\boost\core\nvp.hpp \
		$(BOOST_INCLDUE)\boost\serialization\level.hpp \
		$(BOOST_INCLDUE)\boost\serialization\level_enum.hpp \
		$(BOOST_INCLDUE)\boost\serialization\tracking.hpp \
		$(BOOST_INCLDUE)\boost\mpl\greater.hpp \
		$(BOOST_INCLDUE)\boost\serialization\tracking_enum.hpp \
		$(BOOST_INCLDUE)\boost\serialization\type_info_implementation.hpp \
		$(BOOST_INCLDUE)\boost\serialization\traits.hpp \
		$(BOOST_INCLDUE)\boost\serialization\split_free.hpp \
		$(BOOST_INCLDUE)\boost\serialization\serialization.hpp \
		$(BOOST_INCLDUE)\boost\serialization\strong_typedef.hpp \
		$(BOOST_INCLDUE)\boost\serialization\wrapper.hpp \
		$(BOOST_INCLDUE)\boost\serialization\base_object.hpp \
		$(BOOST_INCLDUE)\boost\serialization\force_include.hpp \
		$(BOOST_INCLDUE)\boost\serialization\void_cast_fwd.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\index_saver.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\index_matcher.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\converter.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\has_tag.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\invalidate_iterators.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\safe_mode.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\any_container_view.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\iter_adaptor.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\safe_mode_errors.hpp \
		$(BOOST_INCLDUE)\boost\serialization\split_member.hpp \
		$(BOOST_INCLDUE)\boost\serialization\version.hpp \
		$(BOOST_INCLDUE)\boost\mpl\comparison.hpp \
		$(BOOST_INCLDUE)\boost\mpl\not_equal_to.hpp \
		$(BOOST_INCLDUE)\boost\mpl\less_equal.hpp \
		$(BOOST_INCLDUE)\boost\mpl\greater_equal.hpp \
		$(BOOST_INCLDUE)\boost\detail\lightweight_mutex.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\scoped_bilock.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\scope_guard.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\archive_constructed.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\serialization_version.hpp \
		$(BOOST_INCLDUE)\boost\serialization\collection_size_type.hpp \
		$(BOOST_INCLDUE)\boost\serialization\is_bitwise_serializable.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\invariant_assert.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\sequenced_index.hpp \
		$(BOOST_INCLDUE)\boost\bind\bind.hpp \
		$(BOOST_INCLDUE)\boost\bind\detail\result_traits.hpp \
		$(BOOST_INCLDUE)\boost\bind\std_placeholders.hpp \
		$(BOOST_INCLDUE)\boost\visit_each.hpp \
		$(BOOST_INCLDUE)\boost\core\is_same.hpp \
		$(BOOST_INCLDUE)\boost\bind\storage.hpp \
		$(BOOST_INCLDUE)\boost\bind\bind_template.hpp \
		$(BOOST_INCLDUE)\boost\bind\bind_cc.hpp \
		$(BOOST_INCLDUE)\boost\bind\bind_mf_cc.hpp \
		$(BOOST_INCLDUE)\boost\bind\bind_mf2_cc.hpp \
		$(BOOST_INCLDUE)\boost\bind\placeholders.hpp \
		$(BOOST_INCLDUE)\boost\foreach_fwd.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\bidir_node_iterator.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\seq_index_node.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\seq_index_ops.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\sequenced_index_fwd.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\ordered_index.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\ord_index_impl.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\modify_key_adaptor.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\ord_index_node.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\uintptr_type.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\ord_index_ops.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\promotes_arg.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\is_transparent.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_final.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\unbounded.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\value_compare.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\duplicates_iterator.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\member.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\detail\ptree_implementation.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\json_parser.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\json_parser\error.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\detail\file_parser_error.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\json_parser\detail\read.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\json_parser\detail\parser.hpp \
		$(BOOST_INCLDUE)\boost\format.hpp \
		$(BOOST_INCLDUE)\boost\format\detail\compat_workarounds.hpp \
		$(BOOST_INCLDUE)\boost\format\detail\config_macros.hpp \
		$(BOOST_INCLDUE)\boost\format\detail\workarounds_gcc-2_95.hpp \
		$(BOOST_INCLDUE)\boost\format\detail\workarounds_stlport.hpp \
		$(BOOST_INCLDUE)\boost\format\format_fwd.hpp \
		$(BOOST_INCLDUE)\boost\format\internals_fwd.hpp \
		$(BOOST_INCLDUE)\boost\format\internals.hpp \
		$(BOOST_INCLDUE)\boost\format\alt_sstream.hpp \
		$(BOOST_INCLDUE)\boost\format\alt_sstream_impl.hpp \
		$(BOOST_INCLDUE)\boost\format\format_class.hpp \
		$(BOOST_INCLDUE)\boost\format\exceptions.hpp \
		$(BOOST_INCLDUE)\boost\format\format_implementation.hpp \
		$(BOOST_INCLDUE)\boost\format\group.hpp \
		$(BOOST_INCLDUE)\boost\format\feed_args.hpp \
		$(BOOST_INCLDUE)\boost\format\detail\msvc_disambiguater.hpp \
		$(BOOST_INCLDUE)\boost\format\parsing.hpp \
		$(BOOST_INCLDUE)\boost\format\free_funcs.hpp \
		$(BOOST_INCLDUE)\boost\format\detail\unset_macros.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\json_parser\detail\narrow_encoding.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\json_parser\detail\wide_encoding.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\json_parser\detail\standard_callbacks.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\json_parser\detail\write.hpp \
		$(BOOST_INCLDUE)\rapidjson\document.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\reader.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\allocators.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\rapidjson.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\msinttypes\stdint.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\msinttypes\inttypes.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\stream.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\encodings.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\encodedstream.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\memorystream.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\clzll.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\meta.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\stack.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\swap.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\strtod.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\ieee754.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\biginteger.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\diyfp.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\pow10.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\error\error.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\strfunc.h \
		$(BOOST_INCLDUE)\rapidjson\istreamwrapper.h \
		$(BOOST_INCLDUE)\rapidjson\writer.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\dtoa.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\itoa.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\stringbuffer.h \
		$(BOOST_INCLDUE)\rapidjson\stringbuffer.h \
		$(BOOST_INCLDUE)\rapidjson\ostreamwrapper.h \
		$(BOOST_INCLDUE)\rapidjson\filereadstream.h \
		$(BOOST_INCLDUE)\boost\smart_ptr.hpp \
		$(BOOST_INCLDUE)\boost\shared_array.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\shared_array.hpp \
		$(BOOST_INCLDUE)\boost\intrusive_ptr.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\intrusive_ptr.hpp \
		$(BOOST_INCLDUE)\boost\enable_shared_from_this.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\enable_shared_from_this.hpp \
		$(BOOST_INCLDUE)\boost\thread\thread.hpp \
		$(BOOST_INCLDUE)\boost\thread\thread_only.hpp \
		$(BOOST_INCLDUE)\boost\thread\detail\platform.hpp \
		$(BOOST_INCLDUE)\boost\config\requires_threads.hpp \
		$(BOOST_INCLDUE)\boost\thread\win32\thread_data.hpp \
		$(BOOST_INCLDUE)\boost\thread\detail\config.hpp \
		$(BOOST_INCLDUE)\boost\thread\detail\thread_safety.hpp \
		$(BOOST_INCLDUE)\boost\thread\thread_time.hpp \
		$(BOOST_INCLDUE)\boost\thread\win32\thread_primitives.hpp \
		$(BOOST_INCLDUE)\boost\thread\exceptions.hpp \
		$(BOOST_INCLDUE)\boost\detail\interlocked.hpp \
		$(BOOST_INCLDUE)\boost\winapi\semaphore.hpp \
		$(BOOST_INCLDUE)\boost\winapi\system.hpp \
		$(BOOST_INCLDUE)\boost\winapi\event.hpp \
		$(BOOST_INCLDUE)\boost\winapi\thread.hpp \
		$(BOOST_INCLDUE)\boost\winapi\get_current_thread.hpp \
		$(BOOST_INCLDUE)\boost\winapi\get_current_thread_id.hpp \
		$(BOOST_INCLDUE)\boost\winapi\get_current_process.hpp \
		$(BOOST_INCLDUE)\boost\winapi\get_current_process_id.hpp \
		$(BOOST_INCLDUE)\boost\winapi\wait.hpp \
		$(BOOST_INCLDUE)\boost\winapi\wait_constants.hpp \
		$(BOOST_INCLDUE)\boost\winapi\handles.hpp \
		$(BOOST_INCLDUE)\boost\winapi\access_rights.hpp \
		$(BOOST_INCLDUE)\boost\thread\win32\interlocked_read.hpp \
		$(BOOST_INCLDUE)\boost\thread\win32\thread_heap_alloc.hpp \
		$(BOOST_INCLDUE)\boost\winapi\heap_memory.hpp \
		$(BOOST_INCLDUE)\boost\thread\detail\platform_time.hpp \
		$(BOOST_INCLDUE)\boost\date_time\posix_time\conversion.hpp \
		$(BOOST_INCLDUE)\boost\date_time\filetime_functions.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\conversion.hpp \
		$(BOOST_INCLDUE)\boost\chrono\ceil.hpp \
		$(BOOST_INCLDUE)\boost\thread\pthread\thread_data.hpp \
		$(BOOST_INCLDUE)\boost\thread\lock_guard.hpp \
		$(BOOST_INCLDUE)\boost\thread\detail\delete.hpp \
		$(BOOST_INCLDUE)\boost\thread\detail\move.hpp \
		$(BOOST_INCLDUE)\boost\thread\detail\lockable_wrapper.hpp \
		$(BOOST_INCLDUE)\boost\thread\lock_options.hpp \
		$(BOOST_INCLDUE)\boost\thread\is_locked_by_this_thread.hpp \
		$(BOOST_INCLDUE)\boost\thread\lock_types.hpp \
		$(BOOST_INCLDUE)\boost\thread\lockable_traits.hpp \
		$(BOOST_INCLDUE)\boost\thread\mutex.hpp \
		$(BOOST_INCLDUE)\boost\thread\win32\mutex.hpp \
		$(BOOST_INCLDUE)\boost\thread\win32\basic_timed_mutex.hpp \
		$(BOOST_INCLDUE)\boost\thread\xtime.hpp \
		$(BOOST_INCLDUE)\boost\thread\pthread\mutex.hpp \
		$(BOOST_INCLDUE)\boost\thread\pthread\pthread_mutex_scoped_lock.hpp \
		$(BOOST_INCLDUE)\boost\thread\pthread\pthread_helpers.hpp \
		$(BOOST_INCLDUE)\boost\thread\pthread\condition_variable_fwd.hpp \
		$(BOOST_INCLDUE)\boost\thread\cv_status.hpp \
		$(BOOST_INCLDUE)\boost\core\scoped_enum.hpp \
		$(BOOST_INCLDUE)\boost\thread\detail\thread.hpp \
		$(BOOST_INCLDUE)\boost\thread\interruption.hpp \
		$(BOOST_INCLDUE)\boost\thread\detail\thread_heap_alloc.hpp \
		$(BOOST_INCLDUE)\boost\thread\pthread\thread_heap_alloc.hpp \
		$(BOOST_INCLDUE)\boost\thread\detail\make_tuple_indices.hpp \
		$(BOOST_INCLDUE)\boost\thread\detail\invoke.hpp \
		$(BOOST_INCLDUE)\boost\thread\detail\is_convertible.hpp \
		$(BOOST_INCLDUE)\boost\functional\hash.hpp \
		$(BOOST_INCLDUE)\boost\thread\detail\thread_interruption.hpp \
		$(BOOST_INCLDUE)\boost\thread\condition_variable.hpp \
		$(BOOST_INCLDUE)\boost\thread\win32\condition_variable.hpp \
		$(BOOST_INCLDUE)\boost\thread\pthread\condition_variable.hpp \
		$(BOOST_INCLDUE)\boost\thread\detail\thread_group.hpp \
		$(BOOST_INCLDUE)\boost\thread\csbl\memory\unique_ptr.hpp \
		$(BOOST_INCLDUE)\boost\thread\csbl\memory\config.hpp \
		$(BOOST_INCLDUE)\boost\move\unique_ptr.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\unique_ptr_meta_utils.hpp \
		$(BOOST_INCLDUE)\boost\move\default_delete.hpp \
		$(BOOST_INCLDUE)\boost\move\make_unique.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\fwd_macros.hpp \
		$(BOOST_INCLDUE)\boost\thread\shared_mutex.hpp \
		$(BOOST_INCLDUE)\boost\thread\v2\shared_mutex.hpp \
		$(BOOST_INCLDUE)\boost\chrono.hpp \
		$(BOOST_INCLDUE)\boost\chrono\include.hpp \
		$(BOOST_INCLDUE)\boost\chrono\chrono_io.hpp \
		$(BOOST_INCLDUE)\boost\chrono\io\time_point_io.hpp \
		$(BOOST_INCLDUE)\boost\chrono\io\time_point_put.hpp \
		$(BOOST_INCLDUE)\boost\chrono\io\time_point_units.hpp \
		$(BOOST_INCLDUE)\boost\chrono\process_cpu_clocks.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\inlined\process_cpu_clocks.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\inlined\win\process_cpu_clocks.hpp \
		$(BOOST_INCLDUE)\boost\winapi\get_process_times.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\inlined\mac\process_cpu_clocks.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\inlined\posix\process_cpu_clocks.hpp \
		$(BOOST_INCLDUE)\boost\chrono\thread_clock.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\inlined\thread_clock.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\inlined\win\thread_clock.hpp \
		$(BOOST_INCLDUE)\boost\winapi\get_thread_times.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\inlined\mac\thread_clock.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\inlined\posix\thread_clock.hpp \
		$(BOOST_INCLDUE)\boost\chrono\io\ios_base_state.hpp \
		$(BOOST_INCLDUE)\boost\chrono\io\duration_style.hpp \
		$(BOOST_INCLDUE)\boost\chrono\io\timezone.hpp \
		$(BOOST_INCLDUE)\boost\chrono\io\utility\ios_base_state_ptr.hpp \
		$(BOOST_INCLDUE)\boost\chrono\io\duration_put.hpp \
		$(BOOST_INCLDUE)\boost\chrono\io\duration_units.hpp \
		$(BOOST_INCLDUE)\boost\ratio\ratio_io.hpp \
		$(BOOST_INCLDUE)\boost\ratio\detail\ratio_io.hpp \
		$(BOOST_INCLDUE)\boost\chrono\io\time_point_get.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\scan_keyword.hpp \
		$(BOOST_INCLDUE)\boost\chrono\io\duration_get.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\no_warning\signed_unsigned_cmp.hpp \
		$(BOOST_INCLDUE)\boost\chrono\io\duration_io.hpp \
		$(BOOST_INCLDUE)\boost\chrono\io\utility\manip_base.hpp \
		$(BOOST_INCLDUE)\boost\chrono\round.hpp \
		$(BOOST_INCLDUE)\boost\chrono\io_v1\chrono_io.hpp \
		$(BOOST_INCLDUE)\boost\chrono\io\utility\to_string.hpp \
		$(BOOST_INCLDUE)\boost\chrono\floor.hpp \
		$(BOOST_INCLDUE)\boost\thread\pthread\shared_mutex.hpp \
		$(BOOST_INCLDUE)\boost\thread\win32\shared_mutex.hpp

debug\ws_client.obj: ..\ws_client\src\ws_client.cpp ..\ws_client\include\net.h \
		..\ws_drv\src\stdafx.h \
		$(BOOST_INCLDUE)\boost\asio.hpp \
		$(BOOST_INCLDUE)\boost\asio\associated_allocator.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\config.hpp \
		$(BOOST_INCLDUE)\boost\config.hpp \
		$(BOOST_INCLDUE)\boost\config\user.hpp \
		$(BOOST_INCLDUE)\boost\config\detail\select_compiler_config.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\nvcc.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\gcc_xml.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\cray.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\common_edg.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\comeau.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\pathscale.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\clang.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\clang_version.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\intel.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\visualc.hpp \
		$(BOOST_INCLDUE)\boost\config\pragma_message.hpp \
		$(BOOST_INCLDUE)\boost\config\helper_macros.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\gcc.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\digitalmars.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\kai.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\sgi_mipspro.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\compaq_cxx.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\greenhills.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\codegear.hpp \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\boost\config\compiler\clang.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\borland.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\metrowerks.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\sunpro_cc.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\hp_acc.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\mpw.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\xlcpp_zos.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\xlcpp.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\vacpp.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\pgi.hpp \
		$(BOOST_INCLDUE)\boost\config\detail\select_stdlib_config.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\stlport.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\libcomo.hpp \
		$(BOOST_INCLDUE)\boost\config\no_tr1\utility.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\roguewave.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\libcpp.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\libstdcpp3.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\sgi.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\msl.hpp \
		$(BOOST_INCLDUE)\boost\config\detail\posix_features.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\xlcpp_zos.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\vacpp.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\modena.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\dinkumware.hpp \
		$(BOOST_INCLDUE)\boost\config\detail\select_platform_config.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\linux.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\bsd.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\solaris.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\irix.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\hpux.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\cygwin.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\win32.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\beos.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\macos.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\zos.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\aix.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\amigaos.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\qnxnto.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\vxworks.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\symbian.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\cray.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\vms.hpp \
		$(BOOST_INCLDUE)\boost\config\detail\suffix.hpp \
		$(BOOST_INCLDUE)\boost\config\detail\cxx_composite.hpp \
		$(BOOST_INCLDUE)\boost\version.hpp \
		$(BOOST_INCLDUE)\boost\asio\associator.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\push_options.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\pop_options.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\functional.hpp \
		$(BOOST_INCLDUE)\boost\function.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\iterate.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\iteration\iterate.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\dec.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\config\config.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\config\limits.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\limits\dec_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\limits\dec_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\limits\dec_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\inc.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\limits\inc_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\limits\inc_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\limits\inc_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\array\elem.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\array\data.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\tuple\elem.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\cat.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\expand.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\overload.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\variadic\size.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\iif.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\check_empty.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\variadic\has_opt.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\variadic\detail\has_opt.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\is_empty_variadic.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\punctuation\is_begin_parens.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\punctuation\detail\is_begin_parens.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\empty.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\detail\is_empty.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\variadic\limits\size_64.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\variadic\limits\size_128.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\variadic\limits\size_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\tuple\rem.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\tuple\detail\is_single_return.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\is_1.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\is_empty.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\tuple\size.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\if.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\logical\bool.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\logical\limits\bool_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\logical\limits\bool_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\logical\limits\bool_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\variadic\elem.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\variadic\limits\elem_64.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\variadic\limits\elem_128.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\variadic\limits\elem_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\array\size.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\slot\slot.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\slot\detail\def.hpp \
		$(BOOST_INCLDUE)\boost\config\workaround.hpp \
		$(BOOST_INCLDUE)\boost\function\detail\prologue.hpp \
		$(BOOST_INCLDUE)\boost\config\no_tr1\functional.hpp \
		$(BOOST_INCLDUE)\boost\throw_exception.hpp \
		$(BOOST_INCLDUE)\boost\exception\exception.hpp \
		$(BOOST_INCLDUE)\boost\assert\source_location.hpp \
		$(BOOST_INCLDUE)\boost\current_function.hpp \
		$(BOOST_INCLDUE)\boost\cstdint.hpp \
		$(BOOST_INCLDUE)\boost\limits.hpp \
		$(BOOST_INCLDUE)\boost\function\function_base.hpp \
		$(BOOST_INCLDUE)\boost\assert.hpp \
		$(BOOST_INCLDUE)\boost\integer.hpp \
		$(BOOST_INCLDUE)\boost\integer_fwd.hpp \
		$(BOOST_INCLDUE)\boost\integer_traits.hpp \
		$(BOOST_INCLDUE)\boost\static_assert.hpp \
		$(BOOST_INCLDUE)\boost\detail\workaround.hpp \
		$(BOOST_INCLDUE)\boost\type_index.hpp \
		$(BOOST_INCLDUE)\boost\type_index\stl_type_index.hpp \
		$(BOOST_INCLDUE)\boost\type_index\type_index_facade.hpp \
		$(BOOST_INCLDUE)\boost\container_hash\hash_fwd.hpp \
		$(BOOST_INCLDUE)\boost\core\demangle.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\conditional.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_const.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\integral_constant.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_reference.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_lvalue_reference.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_rvalue_reference.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_rvalue_reference_msvc10_fix.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_volatile.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\remove_cv.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\remove_reference.hpp \
		$(BOOST_INCLDUE)\boost\container_hash\hash.hpp \
		$(BOOST_INCLDUE)\boost\container_hash\detail\hash_float.hpp \
		$(BOOST_INCLDUE)\boost\container_hash\detail\float_functions.hpp \
		$(BOOST_INCLDUE)\boost\config\no_tr1\cmath.hpp \
		$(BOOST_INCLDUE)\boost\container_hash\detail\limits.hpp \
		$(BOOST_INCLDUE)\boost\core\enable_if.hpp \
		$(BOOST_INCLDUE)\boost\integer\static_log2.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_enum.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\intrinsics.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\config.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_same.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_void.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\add_reference.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_arithmetic.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_integral.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_floating_point.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_convertible.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_complete.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\declval.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\add_rvalue_reference.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_function.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_function_cxx_11.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_function_cxx_03.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_function_ptr_helper.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_function_ptr_tester.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\yes_no_type.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_function_msvc10_fix.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_array.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_abstract.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_class.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_union.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_scalar.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_pointer.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_member_pointer.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_member_function_pointer.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_member_function_pointer_cxx_11.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_member_function_pointer_cxx_03.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_mem_fun_pointer_impl.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_mem_fun_pointer_tester.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_polymorphic.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\add_lvalue_reference.hpp \
		$(BOOST_INCLDUE)\boost\container_hash\extensions.hpp \
		$(BOOST_INCLDUE)\boost\detail\container_fwd.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_signed.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\make_signed.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_unsigned.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\add_const.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\add_volatile.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\type_identity.hpp \
		$(BOOST_INCLDUE)\boost\type_index\detail\stl_register_class.hpp \
		$(BOOST_INCLDUE)\boost\type_index\ctti_type_index.hpp \
		$(BOOST_INCLDUE)\boost\type_index\detail\compile_time_type_info.hpp \
		$(BOOST_INCLDUE)\boost\type_index\detail\ctti_register_class.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_trivial_copy.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_pod.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_copy_constructible.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_constructible.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_destructible.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_default_constructible.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_noncopyable.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_base_and_derived.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_trivial_destructor.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\composite_traits.hpp \
		$(BOOST_INCLDUE)\boost\ref.hpp \
		$(BOOST_INCLDUE)\boost\core\ref.hpp \
		$(BOOST_INCLDUE)\boost\core\addressof.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\alignment_of.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\enable_if.hpp \
		$(BOOST_INCLDUE)\boost\function_equal.hpp \
		$(BOOST_INCLDUE)\boost\function\function_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mem_fn.hpp \
		$(BOOST_INCLDUE)\boost\bind\mem_fn.hpp \
		$(BOOST_INCLDUE)\boost\get_pointer.hpp \
		$(BOOST_INCLDUE)\boost\config\no_tr1\memory.hpp \
		$(BOOST_INCLDUE)\boost\bind\mem_fn_template.hpp \
		$(BOOST_INCLDUE)\boost\bind\mem_fn_vw.hpp \
		$(BOOST_INCLDUE)\boost\bind\mem_fn_cc.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\enum.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\enum.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\debug\error.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\detail\auto_rec.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\detail\dmc\auto_rec.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\detail\limits\auto_rec_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\detail\limits\auto_rec_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\detail\limits\auto_rec_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\punctuation\comma_if.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\punctuation\comma.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\repeat.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\tuple\eat.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\limits\repeat_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\limits\repeat_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\limits\repeat_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\enum_params.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\enum_params.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repeat.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\inc.hpp \
		$(BOOST_INCLDUE)\boost\function\function0.hpp \
		$(BOOST_INCLDUE)\boost\function\detail\maybe_include.hpp \
		$(BOOST_INCLDUE)\boost\function\function_template.hpp \
		$(BOOST_INCLDUE)\boost\core\no_exceptions_support.hpp \
		$(BOOST_INCLDUE)\boost\function\function1.hpp \
		$(BOOST_INCLDUE)\boost\function\function2.hpp \
		$(BOOST_INCLDUE)\boost\function\function3.hpp \
		$(BOOST_INCLDUE)\boost\function\function4.hpp \
		$(BOOST_INCLDUE)\boost\function\function5.hpp \
		$(BOOST_INCLDUE)\boost\function\function6.hpp \
		$(BOOST_INCLDUE)\boost\function\function7.hpp \
		$(BOOST_INCLDUE)\boost\function\function8.hpp \
		$(BOOST_INCLDUE)\boost\function\function9.hpp \
		$(BOOST_INCLDUE)\boost\function\function10.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\type_traits.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\aligned_storage.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\type_with_alignment.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\decay.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\remove_bounds.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\remove_extent.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\add_pointer.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_nothrow_copy.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_nothrow_destructor.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_base_of.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_object.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\remove_pointer.hpp \
		$(BOOST_INCLDUE)\boost\utility\declval.hpp \
		$(BOOST_INCLDUE)\boost\utility\enable_if.hpp \
		$(BOOST_INCLDUE)\boost\utility\result_of.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\enum_trailing_params.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\enum_binary_params.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\enum_shifted_params.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\intercept.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\limits\intercept_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\limits\intercept_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\limits\intercept_1024.hpp \
		$(BOOST_INCLDUE)\boost\utility\detail\result_of_variadic.hpp \
		$(BOOST_INCLDUE)\boost\utility\detail\result_of_iterate.hpp \
		$(BOOST_INCLDUE)\boost\asio\associated_executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\execute.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\detail\as_invocable.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\atomic_count.hpp \
		$(BOOST_INCLDUE)\boost\detail\atomic_count.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\atomic_count.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_has_gcc_intrinsics.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_has_sync_intrinsics.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\atomic_count_nt.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\atomic_count_std_atomic.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\atomic_count_spin.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\spinlock_pool.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\spinlock.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\spinlock_std_atomic.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\yield_k.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_thread_pause.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_thread_sleep.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_win32_sleep.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_thread_yield.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\spinlock_pt.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\spinlock_gcc_atomic.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\spinlock_gcc_arm.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\spinlock_sync.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\spinlock_w32.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_interlocked.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\spinlock_nt.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\atomic_count_pt.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\atomic_count_gcc_atomic.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\atomic_count_sync.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\atomic_count_gcc_x86.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_obsolete.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\atomic_count_win32.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\atomic_count_gcc.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\memory.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\throw_exception.hpp \
		$(BOOST_INCLDUE)\boost\make_shared.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\make_shared.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\make_shared_object.hpp \
		$(BOOST_INCLDUE)\boost\move\core.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\config_begin.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\workaround.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\type_traits.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\meta_utils.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\meta_utils_core.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\addressof.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\config_end.hpp \
		$(BOOST_INCLDUE)\boost\move\utility_core.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\shared_ptr.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\shared_count.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\bad_weak_ptr.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_nt.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_typeinfo_.hpp \
		$(BOOST_INCLDUE)\boost\core\typeinfo.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_noexcept.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_std_atomic.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_spin.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_pt.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_gcc_atomic.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_sync.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_gcc_x86.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_snc_ps3.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_acc_ia64.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_gcc_ia64.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_vacpp_ppc.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_cw_ppc.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_gcc_ppc.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_gcc_mips.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_gcc_sparc.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_w32.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_aix.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_impl.hpp \
		$(BOOST_INCLDUE)\boost\checked_delete.hpp \
		$(BOOST_INCLDUE)\boost\core\checked_delete.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\quick_allocator.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\lightweight_mutex.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\lwm_std_mutex.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\lwm_win32_cs.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\lwm_pthreads.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_disable_deprecated.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_convertible.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_nullptr_t.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\operator_bool.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\local_sp_deleter.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\local_counted_base.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_forward.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\make_shared_array.hpp \
		$(BOOST_INCLDUE)\boost\core\default_allocator.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\allocate_shared_array.hpp \
		$(BOOST_INCLDUE)\boost\core\allocator_access.hpp \
		$(BOOST_INCLDUE)\boost\core\pointer_traits.hpp \
		$(BOOST_INCLDUE)\boost\core\alloc_construct.hpp \
		$(BOOST_INCLDUE)\boost\core\noinit_adaptor.hpp \
		$(BOOST_INCLDUE)\boost\core\first_scalar.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\extent.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_bounded_array.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_unbounded_array.hpp \
		$(BOOST_INCLDUE)\boost\shared_ptr.hpp \
		$(BOOST_INCLDUE)\boost\weak_ptr.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\weak_ptr.hpp \
		$(BOOST_INCLDUE)\boost\utility\addressof.hpp \
		$(BOOST_INCLDUE)\boost\align\aligned_alloc.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\aligned_alloc.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\is_alignment.hpp \
		$(BOOST_INCLDUE)\boost\align\align.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\align_cxx11.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\align.hpp \
		$(BOOST_INCLDUE)\boost\align\alignment_of.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\element_type.hpp \
		$(BOOST_INCLDUE)\boost\align\alignment_of_forward.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\alignment_of_cxx11.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\alignment_of_msvc.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\min_size.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\integral_constant.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\alignment_of.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\alignment_of_gcc.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\alignment_of_codegear.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\alignment_of_clang.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\aligned_alloc_new.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\aligned_alloc_msvc.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\aligned_alloc_mingw.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\aligned_alloc_posix.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\aligned_alloc_macos.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\aligned_alloc_android.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\aligned_alloc_sunos.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\receiver_invocation_error.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\impl\receiver_invocation_error.ipp \
		$(BOOST_INCLDUE)\boost\asio\execution\set_done.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\set_done_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\set_done_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\set_error.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\set_error_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\set_error_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\set_value.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\variadic_templates.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\set_value_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\set_value_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\detail\as_receiver.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\execute_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\execute_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\invocable_archetype.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\equality_comparable.hpp \
		$(BOOST_INCLDUE)\boost\asio\is_executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\is_executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\system_executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\allocator.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\scheduler.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\schedule.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\schedule_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\schedule_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\sender.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\detail\void_receiver.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\receiver.hpp \
		$(BOOST_INCLDUE)\boost\system\error_code.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\error_code.hpp \
		$(BOOST_INCLDUE)\boost\system\is_error_code_enum.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\error_category.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\config.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\error_condition.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\generic_category.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\generic_category_message.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\enable_if.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\is_same.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\errc.hpp \
		$(BOOST_INCLDUE)\boost\system\is_error_condition_enum.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\cerrno.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\append_int.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\snprintf.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\system_category.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\system_category_impl.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\system_category_message.hpp \
		$(BOOST_INCLDUE)\boost\system\api_config.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\system_category_message_win32.hpp \
		$(BOOST_INCLDUE)\boost\winapi\error_handling.hpp \
		$(BOOST_INCLDUE)\boost\winapi\basic_types.hpp \
		$(BOOST_INCLDUE)\boost\winapi\config.hpp \
		$(BOOST_INCLDUE)\boost\predef\version_number.h \
		$(BOOST_INCLDUE)\boost\predef\platform.h \
		$(BOOST_INCLDUE)\boost\predef\platform\android.h \
		$(BOOST_INCLDUE)\boost\predef\make.h \
		$(BOOST_INCLDUE)\boost\predef\detail\test.h \
		$(BOOST_INCLDUE)\boost\predef\detail\platform_detected.h \
		$(BOOST_INCLDUE)\boost\predef\platform\cloudabi.h \
		$(BOOST_INCLDUE)\boost\predef\platform\mingw.h \
		$(BOOST_INCLDUE)\boost\predef\platform\mingw32.h \
		$(BOOST_INCLDUE)\boost\predef\platform\mingw64.h \
		$(BOOST_INCLDUE)\boost\predef\platform\windows_uwp.h \
		$(BOOST_INCLDUE)\boost\predef\os\windows.h \
		$(BOOST_INCLDUE)\boost\predef\detail\os_detected.h \
		$(BOOST_INCLDUE)\boost\predef\platform\windows_desktop.h \
		$(BOOST_INCLDUE)\boost\predef\platform\windows_phone.h \
		$(BOOST_INCLDUE)\boost\predef\platform\windows_server.h \
		$(BOOST_INCLDUE)\boost\predef\platform\windows_store.h \
		$(BOOST_INCLDUE)\boost\predef\platform\windows_system.h \
		$(BOOST_INCLDUE)\boost\predef\platform\windows_runtime.h \
		$(BOOST_INCLDUE)\boost\predef\platform\ios.h \
		$(BOOST_INCLDUE)\boost\predef\os\ios.h \
		$(BOOST_INCLDUE)\boost\winapi\detail\header.hpp \
		$(BOOST_INCLDUE)\boost\winapi\detail\footer.hpp \
		$(BOOST_INCLDUE)\boost\winapi\get_last_error.hpp \
		$(BOOST_INCLDUE)\boost\winapi\character_code_conversion.hpp \
		$(BOOST_INCLDUE)\boost\winapi\local_memory.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\system_category_condition_win32.hpp \
		$(BOOST_INCLDUE)\boost\winapi\error_codes.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\interop_category.hpp \
		$(BOOST_INCLDUE)\boost\system\error_category.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\error_category_impl.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\std_category.hpp \
		$(BOOST_INCLDUE)\boost\system\error_condition.hpp \
		$(BOOST_INCLDUE)\boost\system\errc.hpp \
		$(BOOST_INCLDUE)\boost\system\generic_category.hpp \
		$(BOOST_INCLDUE)\boost\system\system_category.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\throws.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\connect.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\detail\as_operation.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\start_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\operation_state.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\start.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\start_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\connect_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\connect_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\is_applicable_property.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\query_static_constexpr_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\static_query.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\any_executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\assert.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\cstddef.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\executor_function.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\handler_alloc_helpers.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\noncopyable.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\recycling_allocator.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\thread_context.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\call_stack.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\tss_ptr.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\null_tss_ptr.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\keyword_tss_ptr.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_tss_ptr.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\socket_types.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\old_win_sdk_compat.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_tss_ptr.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\throw_error.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\throw_error.ipp \
		$(BOOST_INCLDUE)\boost\system\system_error.hpp \
		$(BOOST_INCLDUE)\boost\asio\error.hpp \
		$(BOOST_INCLDUE)\boost\cerrno.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\error.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\posix_tss_ptr.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\posix_tss_ptr.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\thread_context.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\thread_info_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\multiple_exceptions.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\multiple_exceptions.ipp \
		$(BOOST_INCLDUE)\boost\asio\handler_alloc_hook.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\handler_alloc_hook.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\handler_invoke_helpers.hpp \
		$(BOOST_INCLDUE)\boost\asio\handler_invoke_hook.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\non_const_lvalue.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\scoped_ptr.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\bad_executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\impl\bad_executor.ipp \
		$(BOOST_INCLDUE)\boost\asio\execution\blocking.hpp \
		$(BOOST_INCLDUE)\boost\asio\prefer.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\prefer_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\prefer_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\require_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\require_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\static_require.hpp \
		$(BOOST_INCLDUE)\boost\asio\query.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\query_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\query_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\require.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\blocking_adaptation.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\event.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\null_event.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\null_event.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_event.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_event.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\posix_event.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\posix_event.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\std_event.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\null_mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\scoped_lock.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_mutex.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\posix_mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\posix_mutex.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\std_mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\bulk_execute.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\bulk_guarantee.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\detail\bulk_sender.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\bulk_execute_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\bulk_execute_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\context.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\context_as.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\mapping.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\occupancy.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\outstanding_work.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\prefer_only.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\relationship.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\submit.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\detail\submit_receiver.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\submit_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\submit_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\system_executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\executor_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\fenced_block.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\null_fenced_block.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\std_fenced_block.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\macos_fenced_block.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\solaris_fenced_block.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\gcc_arm_fenced_block.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\gcc_hppa_fenced_block.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\gcc_x86_fenced_block.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\gcc_sync_fenced_block.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_fenced_block.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\scheduler_operation.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\handler_tracking.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\cstdint.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\static_mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\null_static_mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_static_mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_static_mutex.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\posix_static_mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\std_static_mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\handler_tracking.ipp \
		$(BOOST_INCLDUE)\boost\asio\time_traits.hpp \
		$(BOOST_INCLDUE)\boost\date_time\posix_time\posix_time_types.hpp \
		$(BOOST_INCLDUE)\boost\date_time\time_clock.hpp \
		$(BOOST_INCLDUE)\boost\date_time\c_time.hpp \
		$(BOOST_INCLDUE)\boost\date_time\compiler_config.hpp \
		$(BOOST_INCLDUE)\boost\date_time\locale_config.hpp \
		$(BOOST_INCLDUE)\boost\date_time\microsec_time_clock.hpp \
		$(BOOST_INCLDUE)\boost\winapi\time.hpp \
		$(BOOST_INCLDUE)\boost\date_time\posix_time\ptime.hpp \
		$(BOOST_INCLDUE)\boost\date_time\posix_time\posix_time_system.hpp \
		$(BOOST_INCLDUE)\boost\date_time\posix_time\posix_time_config.hpp \
		$(BOOST_INCLDUE)\boost\date_time\time_duration.hpp \
		$(BOOST_INCLDUE)\boost\date_time\special_defs.hpp \
		$(BOOST_INCLDUE)\boost\date_time\time_defs.hpp \
		$(BOOST_INCLDUE)\boost\operators.hpp \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\boost\operators_v1.hpp \
		$(BOOST_INCLDUE)\boost\date_time\time_resolution_traits.hpp \
		$(BOOST_INCLDUE)\boost\date_time\int_adapter.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\gregorian_types.hpp \
		$(BOOST_INCLDUE)\boost\date_time\date.hpp \
		$(BOOST_INCLDUE)\boost\date_time\year_month_day.hpp \
		$(BOOST_INCLDUE)\boost\date_time\period.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\greg_calendar.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\greg_weekday.hpp \
		$(BOOST_INCLDUE)\boost\date_time\constrained_value.hpp \
		$(BOOST_INCLDUE)\boost\date_time\date_defs.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\greg_day_of_year.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian_calendar.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian_calendar.ipp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\greg_ymd.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\greg_day.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\greg_year.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\greg_month.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\greg_duration.hpp \
		$(BOOST_INCLDUE)\boost\date_time\date_duration.hpp \
		$(BOOST_INCLDUE)\boost\date_time\date_duration_types.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\greg_duration_types.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\greg_date.hpp \
		$(BOOST_INCLDUE)\boost\date_time\adjust_functors.hpp \
		$(BOOST_INCLDUE)\boost\date_time\wrapping_int.hpp \
		$(BOOST_INCLDUE)\boost\date_time\date_generators.hpp \
		$(BOOST_INCLDUE)\boost\date_time\date_clock_device.hpp \
		$(BOOST_INCLDUE)\boost\date_time\date_iterator.hpp \
		$(BOOST_INCLDUE)\boost\date_time\time_system_split.hpp \
		$(BOOST_INCLDUE)\boost\date_time\time_system_counted.hpp \
		$(BOOST_INCLDUE)\boost\date_time\time.hpp \
		$(BOOST_INCLDUE)\boost\date_time\posix_time\date_duration_operators.hpp \
		$(BOOST_INCLDUE)\boost\date_time\posix_time\posix_time_duration.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\cast.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\old_numeric_cast.hpp \
		$(BOOST_INCLDUE)\boost\type.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\converter_policies.hpp \
		$(BOOST_INCLDUE)\boost\mpl\if.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\value_wknd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\static_cast.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\workaround.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\integral.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\msvc.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\eti.hpp \
		$(BOOST_INCLDUE)\boost\mpl\int.hpp \
		$(BOOST_INCLDUE)\boost\mpl\int_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\adl_barrier.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\adl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\intel.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\gcc.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\nttp_decl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\nttp.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\integral_wrapper.hpp \
		$(BOOST_INCLDUE)\boost\mpl\integral_c_tag.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\static_constant.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\na_spec.hpp \
		$(BOOST_INCLDUE)\boost\mpl\lambda_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\void_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\na.hpp \
		$(BOOST_INCLDUE)\boost\mpl\bool.hpp \
		$(BOOST_INCLDUE)\boost\mpl\bool_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\na_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\ctps.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\lambda.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\ttp.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\lambda_arity_param.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\template_arity_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\arity.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\dtp.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\params.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\preprocessor.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\comma_if.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\enum.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\def_params_tail.hpp \
		$(BOOST_INCLDUE)\boost\mpl\limits\arity.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\logical\and.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\logical\bitand.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\identity.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\identity.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\empty.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\filter_params.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\sub.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\tuple.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\sub.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\while.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\fold_left.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\edg\fold_left.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\expr_iif.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\adt.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\detail\is_binary.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\detail\check.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\logical\compl.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\edg\limits\fold_left_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\edg\limits\fold_left_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\edg\limits\fold_left_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\dmc\fold_left.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\fold_left.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\limits\fold_left_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\limits\fold_left_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\limits\fold_left_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\limits\fold_left_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\limits\fold_left_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\limits\fold_left_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\fold_right.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\edg\fold_right.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\edg\limits\fold_right_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\edg\limits\fold_right_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\edg\limits\fold_right_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\fold_right.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\reverse.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\limits\fold_right_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\limits\fold_right_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\limits\fold_right_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\detail\edg\while.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\detail\edg\limits\while_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\detail\edg\limits\while_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\detail\edg\limits\while_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\detail\msvc\while.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\detail\dmc\while.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\detail\while.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\detail\limits\while_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\detail\limits\while_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\detail\limits\while_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\limits\while_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\limits\while_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\limits\while_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\logical\bitor.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\detail\is_maximum_number.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\comparison\equal.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\comparison\not_equal.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\comparison\limits\not_equal_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\comparison\limits\not_equal_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\comparison\limits\not_equal_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\detail\maximum_number.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\detail\is_minimum_number.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\logical\not.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\add.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\overload_resolution.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\lambda_support.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\yes_no.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\arrays.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\tuple\to_list.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\tuple\limits\to_list_64.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\tuple\limits\to_list_128.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\tuple\limits\to_list_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\for_each_i.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\for.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\detail\edg\for.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\detail\edg\limits\for_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\detail\edg\limits\for_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\detail\edg\limits\for_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\detail\msvc\for.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\detail\dmc\for.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\detail\for.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\detail\limits\for_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\detail\limits\for_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\detail\limits\for_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\limits\for_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\limits\for_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\limits\for_1024.hpp \
		$(BOOST_INCLDUE)\boost\mpl\integral_c.hpp \
		$(BOOST_INCLDUE)\boost\mpl\integral_c_fwd.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\converter.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\conversion_traits.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\conversion_traits.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\meta.hpp \
		$(BOOST_INCLDUE)\boost\mpl\eval_if.hpp \
		$(BOOST_INCLDUE)\boost\mpl\equal_to.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\comparison_op.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\numeric_op.hpp \
		$(BOOST_INCLDUE)\boost\mpl\numeric_cast.hpp \
		$(BOOST_INCLDUE)\boost\mpl\apply_wrap.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\has_apply.hpp \
		$(BOOST_INCLDUE)\boost\mpl\has_xxx.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\type_wrapper.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\has_xxx.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\msvc_typename.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\has_apply.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\msvc_never_true.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\use_preprocessed.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\include_preprocessed.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\compiler.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\stringize.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\add.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\bcc.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\msvc_dtw.hpp \
		$(BOOST_INCLDUE)\boost\mpl\tag.hpp \
		$(BOOST_INCLDUE)\boost\mpl\void.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\has_tag.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\numeric_cast_utils.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\forwarding.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\msvc_eti_base.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\is_msvc_eti_arg.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\partial_spec_params.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\repeat.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\ext_params.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\dec.hpp \
		$(BOOST_INCLDUE)\boost\mpl\not.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\nested_type_wknd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\and.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\logical_op.hpp \
		$(BOOST_INCLDUE)\boost\mpl\identity.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\int_float_mixture.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\int_float_mixture_enum.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\sign_mixture.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\sign_mixture_enum.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\udt_builtin_mixture.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\udt_builtin_mixture_enum.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\is_subranged.hpp \
		$(BOOST_INCLDUE)\boost\mpl\multiplies.hpp \
		$(BOOST_INCLDUE)\boost\mpl\times.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\arithmetic_op.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\largest_int.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\default_params.hpp \
		$(BOOST_INCLDUE)\boost\mpl\less.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\converter.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\bounds.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\bounds.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\numeric_cast_traits.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\numeric_cast_traits.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\preprocessed\numeric_cast_traits_common.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\preprocessed\numeric_cast_traits_long_long.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\elem.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\elem_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\elem_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\elem_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\size.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\size_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\size_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\size_1024.hpp \
		$(BOOST_INCLDUE)\boost\date_time\posix_time\time_period.hpp \
		$(BOOST_INCLDUE)\boost\date_time\time_iterator.hpp \
		$(BOOST_INCLDUE)\boost\date_time\dst_rules.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\chrono.hpp \
		$(BOOST_INCLDUE)\boost\chrono\system_clocks.hpp \
		$(BOOST_INCLDUE)\boost\chrono\config.hpp \
		$(BOOST_INCLDUE)\boost\predef.h \
		$(BOOST_INCLDUE)\boost\predef\language.h \
		$(BOOST_INCLDUE)\boost\predef\language\stdc.h \
		$(BOOST_INCLDUE)\boost\predef\language\stdcpp.h \
		$(BOOST_INCLDUE)\boost\predef\language\objc.h \
		$(BOOST_INCLDUE)\boost\predef\language\cuda.h \
		$(BOOST_INCLDUE)\boost\predef\architecture.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\alpha.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\arm.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\blackfin.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\convex.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\e2k.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\ia64.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\loongarch.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\m68k.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\mips.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\parisc.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\ppc.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\ptx.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\pyramid.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\riscv.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\rs6k.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\sparc.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\superh.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\sys370.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\sys390.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\x86.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\x86\32.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\x86\64.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\z.h \
		$(BOOST_INCLDUE)\boost\predef\compiler.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\borland.h \
		$(BOOST_INCLDUE)\boost\predef\detail\comp_detected.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\clang.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\comeau.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\compaq.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\diab.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\digitalmars.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\dignus.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\edg.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\ekopath.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\gcc_xml.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\gcc.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\greenhills.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\hp_acc.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\iar.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\ibm.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\intel.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\kai.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\llvm.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\metaware.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\metrowerks.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\microtec.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\mpw.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\nvcc.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\palm.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\pgi.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\sgi_mipspro.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\sunpro.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\tendra.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\visualc.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\watcom.h \
		$(BOOST_INCLDUE)\boost\predef\library.h \
		$(BOOST_INCLDUE)\boost\predef\library\c.h \
		$(BOOST_INCLDUE)\boost\predef\library\c\_prefix.h \
		$(BOOST_INCLDUE)\boost\predef\detail\_cassert.h \
		$(BOOST_INCLDUE)\boost\predef\library\c\cloudabi.h \
		$(BOOST_INCLDUE)\boost\predef\library\c\gnu.h \
		$(BOOST_INCLDUE)\boost\predef\library\c\uc.h \
		$(BOOST_INCLDUE)\boost\predef\library\c\vms.h \
		$(BOOST_INCLDUE)\boost\predef\library\c\zos.h \
		$(BOOST_INCLDUE)\boost\predef\library\std.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\_prefix.h \
		$(BOOST_INCLDUE)\boost\predef\detail\_exception.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\cxx.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\dinkumware.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\libcomo.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\modena.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\msl.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\roguewave.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\sgi.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\stdcpp3.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\stlport.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\vacpp.h \
		$(BOOST_INCLDUE)\boost\predef\os.h \
		$(BOOST_INCLDUE)\boost\predef\os\aix.h \
		$(BOOST_INCLDUE)\boost\predef\os\amigaos.h \
		$(BOOST_INCLDUE)\boost\predef\os\beos.h \
		$(BOOST_INCLDUE)\boost\predef\os\bsd.h \
		$(BOOST_INCLDUE)\boost\predef\os\macos.h \
		$(BOOST_INCLDUE)\boost\predef\os\bsd\bsdi.h \
		$(BOOST_INCLDUE)\boost\predef\os\bsd\dragonfly.h \
		$(BOOST_INCLDUE)\boost\predef\os\bsd\free.h \
		$(BOOST_INCLDUE)\boost\predef\os\bsd\open.h \
		$(BOOST_INCLDUE)\boost\predef\os\bsd\net.h \
		$(BOOST_INCLDUE)\boost\predef\os\cygwin.h \
		$(BOOST_INCLDUE)\boost\predef\os\haiku.h \
		$(BOOST_INCLDUE)\boost\predef\os\hpux.h \
		$(BOOST_INCLDUE)\boost\predef\os\irix.h \
		$(BOOST_INCLDUE)\boost\predef\os\linux.h \
		$(BOOST_INCLDUE)\boost\predef\os\os400.h \
		$(BOOST_INCLDUE)\boost\predef\os\qnxnto.h \
		$(BOOST_INCLDUE)\boost\predef\os\solaris.h \
		$(BOOST_INCLDUE)\boost\predef\os\unix.h \
		$(BOOST_INCLDUE)\boost\predef\os\vms.h \
		$(BOOST_INCLDUE)\boost\predef\other.h \
		$(BOOST_INCLDUE)\boost\predef\other\endian.h \
		$(BOOST_INCLDUE)\boost\predef\other\wordsize.h \
		$(BOOST_INCLDUE)\boost\predef\other\workaround.h \
		$(BOOST_INCLDUE)\boost\predef\hardware.h \
		$(BOOST_INCLDUE)\boost\predef\hardware\simd.h \
		$(BOOST_INCLDUE)\boost\predef\hardware\simd\x86.h \
		$(BOOST_INCLDUE)\boost\predef\hardware\simd\x86\versions.h \
		$(BOOST_INCLDUE)\boost\predef\hardware\simd\x86_amd.h \
		$(BOOST_INCLDUE)\boost\predef\hardware\simd\x86_amd\versions.h \
		$(BOOST_INCLDUE)\boost\predef\hardware\simd\arm.h \
		$(BOOST_INCLDUE)\boost\predef\hardware\simd\arm\versions.h \
		$(BOOST_INCLDUE)\boost\predef\hardware\simd\ppc.h \
		$(BOOST_INCLDUE)\boost\predef\hardware\simd\ppc\versions.h \
		$(BOOST_INCLDUE)\boost\predef\version.h \
		$(BOOST_INCLDUE)\boost\config\auto_link.hpp \
		$(BOOST_INCLDUE)\boost\chrono\duration.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\static_assert.hpp \
		$(BOOST_INCLDUE)\boost\mpl\assert.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\gpu.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\pp_counter.hpp \
		$(BOOST_INCLDUE)\boost\mpl\logical.hpp \
		$(BOOST_INCLDUE)\boost\mpl\or.hpp \
		$(BOOST_INCLDUE)\boost\ratio\ratio.hpp \
		$(BOOST_INCLDUE)\boost\ratio\config.hpp \
		$(BOOST_INCLDUE)\boost\ratio\detail\mpl\abs.hpp \
		$(BOOST_INCLDUE)\boost\ratio\detail\mpl\sign.hpp \
		$(BOOST_INCLDUE)\boost\ratio\detail\mpl\gcd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\dependent_nttp.hpp \
		$(BOOST_INCLDUE)\boost\ratio\detail\mpl\lcm.hpp \
		$(BOOST_INCLDUE)\boost\ratio\ratio_fwd.hpp \
		$(BOOST_INCLDUE)\boost\ratio\detail\overflow_helpers.hpp \
		$(BOOST_INCLDUE)\boost\rational.hpp \
		$(BOOST_INCLDUE)\boost\call_traits.hpp \
		$(BOOST_INCLDUE)\boost\detail\call_traits.hpp \
		$(BOOST_INCLDUE)\boost\integer\common_factor_rt.hpp \
		$(BOOST_INCLDUE)\boost\ratio\mpl\rational_c_tag.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\common_type.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\common_type_impl.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\common_arithmetic_type.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\composite_pointer_type.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\copy_cv.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\composite_member_pointer_type.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\mp_defer.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\is_evenly_divisible_by.hpp \
		$(BOOST_INCLDUE)\boost\config\abi_prefix.hpp \
		$(BOOST_INCLDUE)\boost\config\abi_suffix.hpp \
		$(BOOST_INCLDUE)\boost\chrono\time_point.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\system.hpp \
		$(BOOST_INCLDUE)\boost\chrono\clock_string.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\inlined\chrono.hpp \
		$(BOOST_INCLDUE)\boost\chrono\chrono.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\inlined\win\chrono.hpp \
		$(BOOST_INCLDUE)\boost\winapi\timers.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\inlined\mac\chrono.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\inlined\posix\chrono.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\chrono_time_traits.hpp \
		$(BOOST_INCLDUE)\boost\asio\wait_traits.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\op_queue.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\global.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\null_global.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_global.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\posix_global.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\std_global.hpp \
		$(BOOST_INCLDUE)\boost\asio\system_context.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\scheduler.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution_context.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\execution_context.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\handler_type_requirements.hpp \
		$(BOOST_INCLDUE)\boost\asio\async_result.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\service_registry.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\service_registry.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\service_registry.ipp \
		$(BOOST_INCLDUE)\boost\asio\impl\execution_context.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\conditionally_enabled_event.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\conditionally_enabled_mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\scheduler_task.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\thread.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\null_thread.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\posix_thread.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\posix_thread.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\wince_thread.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\winapp_thread.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_thread.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_thread.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\std_thread.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\scheduler.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\concurrency_hint.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\limits.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\scheduler_thread_info.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\signal_blocker.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\null_signal_blocker.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\posix_signal_blocker.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\buffer_sequence_adapter.hpp \
		$(BOOST_INCLDUE)\boost\asio\buffer.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\array_fwd.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\string_view.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\is_buffer_sequence.hpp \
		$(BOOST_INCLDUE)\boost\asio\registered_buffer.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\buffer_sequence_adapter.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_operation.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\operation.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_operation.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\object_pool.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\null_reactor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\epoll_reactor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactor_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\select_interrupter.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\socket_select_interrupter.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\socket_select_interrupter.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\socket_holder.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\socket_ops.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\socket_ops.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\eventfd_select_interrupter.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\eventfd_select_interrupter.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\pipe_select_interrupter.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\pipe_select_interrupter.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\timer_queue_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\timer_queue_set.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\timer_queue_set.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\wait_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\epoll_reactor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\epoll_reactor.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\kqueue_reactor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\kqueue_reactor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\kqueue_reactor.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\dev_poll_reactor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\hash_map.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactor_op_queue.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\dev_poll_reactor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\dev_poll_reactor.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\select_reactor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\fd_set_adapter.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\posix_fd_set_adapter.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_fd_set_adapter.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\select_reactor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_io_context.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_thread_info.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_iocp_io_context.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\completion_handler.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\handler_work.hpp \
		$(BOOST_INCLDUE)\boost\asio\executor_work_guard.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_iocp_io_context.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\select_reactor.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\io_uring_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\io_uring_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\thread_group.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\system_context.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\system_context.ipp \
		$(BOOST_INCLDUE)\boost\asio\associated_cancellation_slot.hpp \
		$(BOOST_INCLDUE)\boost\asio\cancellation_signal.hpp \
		$(BOOST_INCLDUE)\boost\asio\cancellation_type.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\cancellation_signal.ipp \
		$(BOOST_INCLDUE)\boost\asio\awaitable.hpp \
		$(BOOST_INCLDUE)\boost\asio\any_io_executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\executor.ipp \
		$(BOOST_INCLDUE)\boost\asio\impl\any_io_executor.ipp \
		$(BOOST_INCLDUE)\boost\asio\impl\awaitable.hpp \
		$(BOOST_INCLDUE)\boost\asio\cancellation_state.hpp \
		$(BOOST_INCLDUE)\boost\asio\post.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\post.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\work_dispatcher.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\bind_handler.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\handler_cont_helpers.hpp \
		$(BOOST_INCLDUE)\boost\asio\handler_continuation_hook.hpp \
		$(BOOST_INCLDUE)\boost\asio\this_coro.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_datagram_socket.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_socket.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_object_impl.hpp \
		$(BOOST_INCLDUE)\boost\asio\io_context.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\wrapped_handler.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\winsock_init.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\winsock_init.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\signal_init.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\io_context.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\io_context.ipp \
		$(BOOST_INCLDUE)\boost\asio\io_context_strand.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\strand_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\strand_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\strand_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\socket_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_control.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\socket_option.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\null_socket_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_socket_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_null_buffers_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_socket_accept_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_socket_service_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_socket_connect_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_socket_send_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_socket_recv_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_socket_recvmsg_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_wait_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_iocp_socket_service_base.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_socket_recvfrom_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_socket_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_null_buffers_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_socket_accept_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_socket_connect_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_socket_recvfrom_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_socket_sendto_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_socket_service_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_socket_recv_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_socket_recvmsg_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_socket_send_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_wait_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\io_uring_socket_service_base.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_socket_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_null_buffers_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_socket_accept_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_socket_connect_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_socket_recvfrom_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_socket_sendto_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_socket_service_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_socket_recv_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_socket_recvmsg_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_socket_send_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_wait_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\reactive_socket_service_base.ipp \
		$(BOOST_INCLDUE)\boost\asio\basic_deadline_timer.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\deadline_timer_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\timer_queue.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\date_time_fwd.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\timer_queue_ptime.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\timer_queue_ptime.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\timer_scheduler.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\timer_scheduler_fwd.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\winrt_timer_scheduler.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\winrt_timer_scheduler.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\winrt_timer_scheduler.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\wait_handler.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_file.hpp \
		$(BOOST_INCLDUE)\boost\asio\file_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_file_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_handle_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_handle_read_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_handle_write_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_iocp_handle_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_iocp_file_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_file_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\descriptor_ops.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\descriptor_ops.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_descriptor_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_descriptor_read_at_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_descriptor_read_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_descriptor_write_at_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_descriptor_write_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\posix\descriptor_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\io_uring_descriptor_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\io_uring_file_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\basic_io_object.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_random_access_file.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_raw_socket.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_readable_pipe.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_descriptor_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\descriptor_read_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\descriptor_write_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\reactive_descriptor_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\basic_seq_packet_socket.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_serial_port.hpp \
		$(BOOST_INCLDUE)\boost\asio\serial_port_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\serial_port_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\serial_port_base.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_serial_port_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_iocp_serial_port_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\posix_serial_port_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\posix_serial_port_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\basic_signal_set.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\signal_set_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\signal_handler.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\signal_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\signal_set_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\basic_socket_acceptor.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_socket_iostream.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_socket_streambuf.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_stream_socket.hpp \
		$(BOOST_INCLDUE)\boost\asio\steady_timer.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_waitable_timer.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_stream_file.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_streambuf.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_streambuf_fwd.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_writable_pipe.hpp \
		$(BOOST_INCLDUE)\boost\asio\bind_allocator.hpp \
		$(BOOST_INCLDUE)\boost\asio\bind_cancellation_slot.hpp \
		$(BOOST_INCLDUE)\boost\asio\bind_executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\uses_executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\buffer_registration.hpp \
		$(BOOST_INCLDUE)\boost\asio\buffered_read_stream_fwd.hpp \
		$(BOOST_INCLDUE)\boost\asio\buffered_read_stream.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\buffer_resize_guard.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\buffered_stream_storage.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\buffered_read_stream.hpp \
		$(BOOST_INCLDUE)\boost\asio\buffered_stream_fwd.hpp \
		$(BOOST_INCLDUE)\boost\asio\buffered_stream.hpp \
		$(BOOST_INCLDUE)\boost\asio\buffered_write_stream.hpp \
		$(BOOST_INCLDUE)\boost\asio\buffered_write_stream_fwd.hpp \
		$(BOOST_INCLDUE)\boost\asio\completion_condition.hpp \
		$(BOOST_INCLDUE)\boost\asio\write.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\write.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\base_from_cancellation_state.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\base_from_completion_cond.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\consuming_buffers.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\dependent_type.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\buffered_write_stream.hpp \
		$(BOOST_INCLDUE)\boost\asio\buffers_iterator.hpp \
		$(BOOST_INCLDUE)\boost\asio\co_spawn.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\co_spawn.hpp \
		$(BOOST_INCLDUE)\boost\asio\dispatch.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\dispatch.hpp \
		$(BOOST_INCLDUE)\boost\asio\use_awaitable.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\source_location.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\use_awaitable.hpp \
		$(BOOST_INCLDUE)\boost\asio\compose.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\compose.hpp \
		$(BOOST_INCLDUE)\boost\asio\connect.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\connect.hpp \
		$(BOOST_INCLDUE)\boost\asio\connect_pipe.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\connect_pipe.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\connect_pipe.ipp \
		$(BOOST_INCLDUE)\boost\asio\coroutine.hpp \
		$(BOOST_INCLDUE)\boost\asio\deadline_timer.hpp \
		$(BOOST_INCLDUE)\boost\asio\defer.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\defer.hpp \
		$(BOOST_INCLDUE)\boost\asio\detached.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\detached.hpp \
		$(BOOST_INCLDUE)\boost\asio\generic\basic_endpoint.hpp \
		$(BOOST_INCLDUE)\boost\asio\generic\detail\endpoint.hpp \
		$(BOOST_INCLDUE)\boost\asio\generic\detail\impl\endpoint.ipp \
		$(BOOST_INCLDUE)\boost\asio\generic\datagram_protocol.hpp \
		$(BOOST_INCLDUE)\boost\asio\generic\raw_protocol.hpp \
		$(BOOST_INCLDUE)\boost\asio\generic\seq_packet_protocol.hpp \
		$(BOOST_INCLDUE)\boost\asio\generic\stream_protocol.hpp \
		$(BOOST_INCLDUE)\boost\asio\high_resolution_timer.hpp \
		$(BOOST_INCLDUE)\boost\asio\io_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\io_service_strand.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\address.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\address_v4.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\array.hpp \
		$(BOOST_INCLDUE)\boost\array.hpp \
		$(BOOST_INCLDUE)\boost\swap.hpp \
		$(BOOST_INCLDUE)\boost\core\swap.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\address_v4.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\address_v4.ipp \
		$(BOOST_INCLDUE)\boost\asio\ip\address_v6.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\address_v6.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\address_v6.ipp \
		$(BOOST_INCLDUE)\boost\asio\ip\bad_address_cast.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\address.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\address.ipp \
		$(BOOST_INCLDUE)\boost\asio\ip\address_v4_iterator.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\address_v4_range.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\address_v6_iterator.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\address_v6_range.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\network_v4.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\network_v4.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\network_v4.ipp \
		$(BOOST_INCLDUE)\boost\asio\ip\network_v6.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\network_v6.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\network_v6.ipp \
		$(BOOST_INCLDUE)\boost\asio\ip\basic_endpoint.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\detail\endpoint.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\detail\impl\endpoint.ipp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\basic_endpoint.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\basic_resolver.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\basic_resolver_iterator.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\basic_resolver_entry.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\winrt_utils.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\basic_resolver_query.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\resolver_query_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\resolver_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\basic_resolver_results.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\winrt_resolver_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\winrt_async_manager.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\winrt_async_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\winrt_resolve_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\resolver_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\resolve_endpoint_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\resolve_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\resolve_query_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\resolver_service_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\resolver_service_base.ipp \
		$(BOOST_INCLDUE)\boost\asio\ip\host_name.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\host_name.ipp \
		$(BOOST_INCLDUE)\boost\asio\ip\icmp.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\multicast.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\detail\socket_option.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\tcp.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\udp.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\unicast.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\v6_only.hpp \
		$(BOOST_INCLDUE)\boost\asio\is_read_buffered.hpp \
		$(BOOST_INCLDUE)\boost\asio\is_write_buffered.hpp \
		$(BOOST_INCLDUE)\boost\asio\local\basic_endpoint.hpp \
		$(BOOST_INCLDUE)\boost\asio\local\detail\endpoint.hpp \
		$(BOOST_INCLDUE)\boost\asio\local\detail\impl\endpoint.ipp \
		$(BOOST_INCLDUE)\boost\asio\local\connect_pair.hpp \
		$(BOOST_INCLDUE)\boost\asio\local\datagram_protocol.hpp \
		$(BOOST_INCLDUE)\boost\asio\local\stream_protocol.hpp \
		$(BOOST_INCLDUE)\boost\asio\packaged_task.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\future.hpp \
		$(BOOST_INCLDUE)\boost\asio\placeholders.hpp \
		$(BOOST_INCLDUE)\boost\bind\arg.hpp \
		$(BOOST_INCLDUE)\boost\is_placeholder.hpp \
		$(BOOST_INCLDUE)\boost\asio\posix\basic_descriptor.hpp \
		$(BOOST_INCLDUE)\boost\asio\posix\basic_stream_descriptor.hpp \
		$(BOOST_INCLDUE)\boost\asio\posix\descriptor.hpp \
		$(BOOST_INCLDUE)\boost\asio\posix\stream_descriptor.hpp \
		$(BOOST_INCLDUE)\boost\asio\random_access_file.hpp \
		$(BOOST_INCLDUE)\boost\asio\read.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\read.hpp \
		$(BOOST_INCLDUE)\boost\asio\read_at.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\read_at.hpp \
		$(BOOST_INCLDUE)\boost\asio\read_until.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\regex_fwd.hpp \
		$(BOOST_INCLDUE)\boost\regex_fwd.hpp \
		$(BOOST_INCLDUE)\boost\regex\config.hpp \
		$(BOOST_INCLDUE)\boost\regex\config\borland.hpp \
		$(BOOST_INCLDUE)\boost\regex\config\cwchar.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_fwd.hpp \
		$(BOOST_INCLDUE)\boost\regex.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_workaround.hpp \
		$(BOOST_INCLDUE)\boost\scoped_ptr.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\scoped_ptr.hpp \
		$(BOOST_INCLDUE)\boost\scoped_array.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\scoped_array.hpp \
		$(BOOST_INCLDUE)\boost\regex\regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\syntax_type.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\error_type.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_traits_defaults.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\make_unsigned.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\cpp_regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\pattern_except.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\pattern_except.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\pattern_except.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\error_type.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_traits_defaults.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\syntax_type.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_workaround.hpp \
		$(BOOST_INCLDUE)\boost\regex\pending\static_mutex.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\primary_transform.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\object_cache.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\c_regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\w32_regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\cpp_regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\primary_transform.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\object_cache.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\c_regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\w32_regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\match_flags.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_raw_buffer.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\char_regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\states.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regbase.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\iterator_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\basic_regex.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\basic_regex_creator.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\indexed_bit_flag.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\basic_regex_parser.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\sub_match.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_format.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\match_results.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\protected_call.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\perl_matcher.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\iterator_category.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\perl_matcher_recursive.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\perl_matcher_non_recursive.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\mem_block_cache.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\perl_matcher_common.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_match.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_search.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_iterator.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_token_iterator.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_grep.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_replace.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_merge.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_split.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\match_flags.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_raw_buffer.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\char_regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\states.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regbase.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\basic_regex.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\basic_regex_creator.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\basic_regex_parser.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\sub_match.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_format.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\match_results.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\perl_matcher.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\iterator_category.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\perl_matcher_non_recursive.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\mem_block_cache.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\perl_matcher_common.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_match.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_search.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_iterator.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_token_iterator.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_grep.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_replace.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_merge.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_split.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_fwd.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\read_until.hpp \
		$(BOOST_INCLDUE)\boost\asio\readable_pipe.hpp \
		$(BOOST_INCLDUE)\boost\asio\recycling_allocator.hpp \
		$(BOOST_INCLDUE)\boost\asio\redirect_error.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\redirect_error.hpp \
		$(BOOST_INCLDUE)\boost\asio\require_concept.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\require_concept_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\require_concept_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\static_require_concept.hpp \
		$(BOOST_INCLDUE)\boost\asio\serial_port.hpp \
		$(BOOST_INCLDUE)\boost\asio\signal_set.hpp \
		$(BOOST_INCLDUE)\boost\asio\static_thread_pool.hpp \
		$(BOOST_INCLDUE)\boost\asio\thread_pool.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\thread_pool.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\blocking_executor_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\bulk_executor_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\thread_pool.ipp \
		$(BOOST_INCLDUE)\boost\asio\strand.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\strand_executor_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\strand_executor_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\strand_executor_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\stream_file.hpp \
		$(BOOST_INCLDUE)\boost\asio\streambuf.hpp \
		$(BOOST_INCLDUE)\boost\asio\system_timer.hpp \
		$(BOOST_INCLDUE)\boost\asio\use_future.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\use_future.hpp \
		$(BOOST_INCLDUE)\boost\asio\version.hpp \
		$(BOOST_INCLDUE)\boost\asio\windows\basic_object_handle.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_object_handle_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_object_handle_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\windows\basic_overlapped_handle.hpp \
		$(BOOST_INCLDUE)\boost\asio\windows\basic_random_access_handle.hpp \
		$(BOOST_INCLDUE)\boost\asio\windows\basic_stream_handle.hpp \
		$(BOOST_INCLDUE)\boost\asio\windows\object_handle.hpp \
		$(BOOST_INCLDUE)\boost\asio\windows\overlapped_handle.hpp \
		$(BOOST_INCLDUE)\boost\asio\windows\overlapped_ptr.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_overlapped_ptr.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_overlapped_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\windows\random_access_handle.hpp \
		$(BOOST_INCLDUE)\boost\asio\windows\stream_handle.hpp \
		$(BOOST_INCLDUE)\boost\asio\writable_pipe.hpp \
		$(BOOST_INCLDUE)\boost\asio\write_at.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\write_at.hpp \
		..\ws_client\include\ws_client.h \
		..\arcirk\include\arcirk.h \
		$(BOOST_INCLDUE)\boost\variant.hpp \
		$(BOOST_INCLDUE)\boost\variant\variant.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\config.hpp \
		$(BOOST_INCLDUE)\boost\variant\variant_fwd.hpp \
		$(BOOST_INCLDUE)\boost\blank_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\arg.hpp \
		$(BOOST_INCLDUE)\boost\mpl\arg_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\na_assert.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\arity_spec.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\arg_typedef.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\enum_shifted_params.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\substitute_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\template_arity.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\has_rebind.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\msvc_is_class.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\range.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\subseq.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\first_n.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\detail\split.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\detail\limits\split_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\detail\limits\split_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\detail\limits\split_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\rest_n.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\detail\is_empty.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\fold_left.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\seq.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\fold_left_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\fold_left_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\fold_left_1024.hpp \
		$(BOOST_INCLDUE)\boost\mpl\limits\list.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\backup_holder.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\enable_recursive_fwd.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\forced_return.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\initializer.hpp \
		$(BOOST_INCLDUE)\boost\detail\reference_content.hpp \
		$(BOOST_INCLDUE)\boost\variant\recursive_wrapper_fwd.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_nothrow_move_constructible.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_trivial_move_constructor.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\remove_const.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\move.hpp \
		$(BOOST_INCLDUE)\boost\move\adl_move_swap.hpp \
		$(BOOST_INCLDUE)\boost\mpl\iter_fold.hpp \
		$(BOOST_INCLDUE)\boost\mpl\begin_end.hpp \
		$(BOOST_INCLDUE)\boost\mpl\begin_end_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\begin_end_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\sequence_tag_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\has_begin.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\traits_lambda_spec.hpp \
		$(BOOST_INCLDUE)\boost\mpl\sequence_tag.hpp \
		$(BOOST_INCLDUE)\boost\mpl\O1_size.hpp \
		$(BOOST_INCLDUE)\boost\mpl\O1_size_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\O1_size_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\long.hpp \
		$(BOOST_INCLDUE)\boost\mpl\long_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\has_size.hpp \
		$(BOOST_INCLDUE)\boost\mpl\lambda.hpp \
		$(BOOST_INCLDUE)\boost\mpl\bind.hpp \
		$(BOOST_INCLDUE)\boost\mpl\bind_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\bind.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\dmc_ambiguous_ctps.hpp \
		$(BOOST_INCLDUE)\boost\mpl\placeholders.hpp \
		$(BOOST_INCLDUE)\boost\mpl\next.hpp \
		$(BOOST_INCLDUE)\boost\mpl\next_prior.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\common_name_wknd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\protect.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\count_args.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\expr_if.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\expr_if.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\full_lambda.hpp \
		$(BOOST_INCLDUE)\boost\mpl\quote.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\has_type.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\lambda_no_ctps.hpp \
		$(BOOST_INCLDUE)\boost\mpl\is_placeholder.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\iter_fold_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\apply.hpp \
		$(BOOST_INCLDUE)\boost\mpl\apply_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\fold_impl_body.hpp \
		$(BOOST_INCLDUE)\boost\mpl\limits\unrolling.hpp \
		$(BOOST_INCLDUE)\boost\mpl\deref.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\msvc_type.hpp \
		$(BOOST_INCLDUE)\boost\mpl\pair.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\make_variant_list.hpp \
		$(BOOST_INCLDUE)\boost\mpl\list.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\sequence_wrapper.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\enum_params_with_a_default.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\enum_params_with_a_default.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\over_sequence.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\visitation_impl.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\cast_storage.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\hash_variant.hpp \
		$(BOOST_INCLDUE)\boost\variant\static_visitor.hpp \
		$(BOOST_INCLDUE)\boost\variant\apply_visitor.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\apply_visitor_unary.hpp \
		$(BOOST_INCLDUE)\boost\move\utility.hpp \
		$(BOOST_INCLDUE)\boost\move\traits.hpp \
		$(BOOST_INCLDUE)\boost\mpl\distance.hpp \
		$(BOOST_INCLDUE)\boost\mpl\distance_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\iterator_range.hpp \
		$(BOOST_INCLDUE)\boost\mpl\advance.hpp \
		$(BOOST_INCLDUE)\boost\mpl\advance_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\negate.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\advance_forward.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\advance_backward.hpp \
		$(BOOST_INCLDUE)\boost\mpl\prior.hpp \
		$(BOOST_INCLDUE)\boost\mpl\size.hpp \
		$(BOOST_INCLDUE)\boost\mpl\size_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\size_impl.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\copy_cv_ref.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\copy_reference.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\has_result_type.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\apply_visitor_binary.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\apply_visitor_delayed.hpp \
		$(BOOST_INCLDUE)\boost\functional\hash_fwd.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\std_hash.hpp \
		$(BOOST_INCLDUE)\boost\blank.hpp \
		$(BOOST_INCLDUE)\boost\detail\templated_streams.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_empty.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_stateless.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_trivial_constructor.hpp \
		$(BOOST_INCLDUE)\boost\integer\common_factor_ct.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_nothrow_constructor.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\remove_all_extents.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_nothrow_move_assignable.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_trivial_move_assign.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_assignable.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_trivial_assign.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_nothrow_assign.hpp \
		$(BOOST_INCLDUE)\boost\mpl\empty.hpp \
		$(BOOST_INCLDUE)\boost\mpl\empty_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\empty_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\find_if.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\find_if_pred.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\iter_apply.hpp \
		$(BOOST_INCLDUE)\boost\mpl\iter_fold_if.hpp \
		$(BOOST_INCLDUE)\boost\mpl\always.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\iter_fold_if_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\fold.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\fold_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\front.hpp \
		$(BOOST_INCLDUE)\boost\mpl\front_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\front_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\insert_range.hpp \
		$(BOOST_INCLDUE)\boost\mpl\insert_range_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\insert_range_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\insert.hpp \
		$(BOOST_INCLDUE)\boost\mpl\insert_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\insert_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\reverse_fold.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\reverse_fold_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\reverse_fold_impl_body.hpp \
		$(BOOST_INCLDUE)\boost\mpl\clear.hpp \
		$(BOOST_INCLDUE)\boost\mpl\clear_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\clear_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\push_front.hpp \
		$(BOOST_INCLDUE)\boost\mpl\push_front_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\push_front_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\joint_view.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\joint_iter.hpp \
		$(BOOST_INCLDUE)\boost\mpl\iterator_tags.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\lambda_spec.hpp \
		$(BOOST_INCLDUE)\boost\mpl\plus.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\iter_push_front.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\same_traits.hpp \
		$(BOOST_INCLDUE)\boost\mpl\is_sequence.hpp \
		$(BOOST_INCLDUE)\boost\mpl\max_element.hpp \
		$(BOOST_INCLDUE)\boost\mpl\same_as.hpp \
		$(BOOST_INCLDUE)\boost\mpl\size_t.hpp \
		$(BOOST_INCLDUE)\boost\mpl\size_t_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\sizeof.hpp \
		$(BOOST_INCLDUE)\boost\mpl\transform.hpp \
		$(BOOST_INCLDUE)\boost\mpl\pair_view.hpp \
		$(BOOST_INCLDUE)\boost\mpl\iterator_category.hpp \
		$(BOOST_INCLDUE)\boost\mpl\min_max.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\inserter_algorithm.hpp \
		$(BOOST_INCLDUE)\boost\mpl\back_inserter.hpp \
		$(BOOST_INCLDUE)\boost\mpl\push_back.hpp \
		$(BOOST_INCLDUE)\boost\mpl\push_back_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\push_back_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\inserter.hpp \
		$(BOOST_INCLDUE)\boost\mpl\front_inserter.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\variant_io.hpp \
		$(BOOST_INCLDUE)\boost\variant\recursive_variant.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\enable_recursive.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\substitute.hpp \
		$(BOOST_INCLDUE)\boost\variant\recursive_wrapper.hpp \
		$(BOOST_INCLDUE)\boost\mpl\equal.hpp \
		$(BOOST_INCLDUE)\boost\variant\get.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\element_index.hpp \
		$(BOOST_INCLDUE)\boost\variant\visitor_ptr.hpp \
		$(BOOST_INCLDUE)\boost\variant\bad_visit.hpp \
		$(BOOST_INCLDUE)\boost\exception\all.hpp \
		$(BOOST_INCLDUE)\boost\exception\diagnostic_information.hpp \
		$(BOOST_INCLDUE)\boost\exception\get_error_info.hpp \
		$(BOOST_INCLDUE)\boost\exception\detail\error_info_impl.hpp \
		$(BOOST_INCLDUE)\boost\exception\detail\type_info.hpp \
		$(BOOST_INCLDUE)\boost\exception\detail\shared_ptr.hpp \
		$(BOOST_INCLDUE)\boost\exception\info.hpp \
		$(BOOST_INCLDUE)\boost\exception\to_string_stub.hpp \
		$(BOOST_INCLDUE)\boost\exception\to_string.hpp \
		$(BOOST_INCLDUE)\boost\exception\detail\is_output_streamable.hpp \
		$(BOOST_INCLDUE)\boost\exception\detail\object_hex_dump.hpp \
		$(BOOST_INCLDUE)\boost\exception\current_exception_cast.hpp \
		$(BOOST_INCLDUE)\boost\exception\error_info.hpp \
		$(BOOST_INCLDUE)\boost\exception\info_tuple.hpp \
		$(BOOST_INCLDUE)\boost\tuple\tuple.hpp \
		$(BOOST_INCLDUE)\boost\tuple\detail\tuple_basic.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\cv_traits.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\add_cv.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\remove_volatile.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\function_traits.hpp \
		$(BOOST_INCLDUE)\boost\utility\swap.hpp \
		$(BOOST_INCLDUE)\boost\exception\errinfo_api_function.hpp \
		$(BOOST_INCLDUE)\boost\exception\errinfo_at_line.hpp \
		$(BOOST_INCLDUE)\boost\exception\errinfo_errno.hpp \
		$(BOOST_INCLDUE)\boost\exception\errinfo_file_handle.hpp \
		$(BOOST_INCLDUE)\boost\exception\errinfo_file_name.hpp \
		$(BOOST_INCLDUE)\boost\exception\errinfo_file_open_mode.hpp \
		$(BOOST_INCLDUE)\boost\exception\errinfo_type_info_name.hpp \
		$(BOOST_INCLDUE)\boost\exception\errinfo_nested_exception.hpp \
		$(BOOST_INCLDUE)\boost\exception_ptr.hpp \
		$(BOOST_INCLDUE)\boost\exception\detail\exception_ptr.hpp \
		$(BOOST_INCLDUE)\boost\exception\detail\clone_current_exception.hpp \
		$(BOOST_INCLDUE)\boost\uuid\uuid.hpp \
		$(BOOST_INCLDUE)\boost\uuid\detail\config.hpp \
		$(BOOST_INCLDUE)\boost\uuid\detail\uuid_x86.ipp \
		$(BOOST_INCLDUE)\boost\uuid\detail\uuid_generic.ipp \
		$(BOOST_INCLDUE)\boost\uuid\uuid_generators.hpp \
		$(BOOST_INCLDUE)\boost\uuid\nil_generator.hpp \
		$(BOOST_INCLDUE)\boost\uuid\string_generator.hpp \
		$(BOOST_INCLDUE)\boost\uuid\name_generator.hpp \
		$(BOOST_INCLDUE)\boost\uuid\name_generator_sha1.hpp \
		$(BOOST_INCLDUE)\boost\uuid\basic_name_generator.hpp \
		$(BOOST_INCLDUE)\boost\uuid\detail\sha1.hpp \
		$(BOOST_INCLDUE)\boost\uuid\random_generator.hpp \
		$(BOOST_INCLDUE)\boost\random\mersenne_twister.hpp \
		$(BOOST_INCLDUE)\boost\integer\integer_mask.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\config.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\ptr_helper.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\seed.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\seed_impl.hpp \
		$(BOOST_INCLDUE)\boost\random\traits.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\const_mod.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\large_arithmetic.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\integer_log2.hpp \
		$(BOOST_INCLDUE)\boost\integer\integer_log2.hpp \
		$(BOOST_INCLDUE)\boost\core\bit.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\disable_warnings.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\enable_warnings.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\signed_unsigned_tools.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\generator_bits.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\generator_seed_seq.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\polynomial.hpp \
		$(BOOST_INCLDUE)\boost\random\uniform_int.hpp \
		$(BOOST_INCLDUE)\boost\random\uniform_int_distribution.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\operators.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\uniform_int_float.hpp \
		$(BOOST_INCLDUE)\boost\random\variate_generator.hpp \
		$(BOOST_INCLDUE)\boost\tti\has_member_function.hpp \
		$(BOOST_INCLDUE)\boost\function_types\property_tags.hpp \
		$(BOOST_INCLDUE)\boost\mpl\bitxor.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\pp_tags\preprocessed.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\pp_loop.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\punctuation\paren.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\encoding\def.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\encoding\aliases_def.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\encoding\aliases_undef.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\encoding\undef.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector.hpp \
		$(BOOST_INCLDUE)\boost\mpl\limits\vector.hpp \
		$(BOOST_INCLDUE)\boost\tti\detail\ddeftype.hpp \
		$(BOOST_INCLDUE)\boost\tti\detail\dmem_fun.hpp \
		$(BOOST_INCLDUE)\boost\function_types\is_member_function_pointer.hpp \
		$(BOOST_INCLDUE)\boost\function_types\components.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\vector0.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\at.hpp \
		$(BOOST_INCLDUE)\boost\mpl\at_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\tag.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\typeof.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\front.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\push_front.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\item.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\pop_front.hpp \
		$(BOOST_INCLDUE)\boost\mpl\pop_front_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\push_back.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\pop_back.hpp \
		$(BOOST_INCLDUE)\boost\mpl\pop_back_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\back.hpp \
		$(BOOST_INCLDUE)\boost\mpl\back_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\clear.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\vector0.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\iterator.hpp \
		$(BOOST_INCLDUE)\boost\mpl\minus.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\O1_size.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\size.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\empty.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\begin_end.hpp \
		$(BOOST_INCLDUE)\boost\mpl\bitand.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\vector10.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\include_preprocessed.hpp \
		$(BOOST_INCLDUE)\boost\mpl\begin.hpp \
		$(BOOST_INCLDUE)\boost\mpl\copy.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\classifier.hpp \
		$(BOOST_INCLDUE)\boost\function_types\config\config.hpp \
		$(BOOST_INCLDUE)\boost\function_types\config\compiler.hpp \
		$(BOOST_INCLDUE)\boost\function_types\config\cc_names.hpp \
		$(BOOST_INCLDUE)\boost\mpl\remove.hpp \
		$(BOOST_INCLDUE)\boost\mpl\remove_if.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\vector20.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\vector30.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\vector40.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\vector50.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\class_transform.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\components_as_mpl_sequence.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\retag_default_cc.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\pp_retag_default_cc\master.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\iteration\self.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\pp_retag_default_cc\preprocessed.hpp \
		$(BOOST_INCLDUE)\boost\tti\detail\dcomp_mem_fun.hpp \
		$(BOOST_INCLDUE)\boost\tti\detail\dftclass.hpp \
		$(BOOST_INCLDUE)\boost\function_types\parameter_types.hpp \
		$(BOOST_INCLDUE)\boost\mpl\pop_front.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\pop_front_impl.hpp \
		$(BOOST_INCLDUE)\boost\function_types\is_callable_builtin.hpp \
		$(BOOST_INCLDUE)\boost\mpl\at.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\at_impl.hpp \
		$(BOOST_INCLDUE)\boost\tti\detail\dmacro_sunfix.hpp \
		$(BOOST_INCLDUE)\boost\tti\detail\dnullptr.hpp \
		$(BOOST_INCLDUE)\boost\tti\gen\namespace_gen.hpp \
		$(BOOST_INCLDUE)\boost\tti\detail\denclosing_type.hpp \
		$(BOOST_INCLDUE)\boost\tti\detail\dptmf.hpp \
		$(BOOST_INCLDUE)\boost\function_types\member_function_pointer.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\synthesize.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\cv_traits.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\to_sequence.hpp \
		$(BOOST_INCLDUE)\boost\tti\gen\has_member_function_gen.hpp \
		$(BOOST_INCLDUE)\boost\uuid\detail\random_provider.hpp \
		$(BOOST_INCLDUE)\boost\uuid\entropy_error.hpp \
		$(BOOST_INCLDUE)\boost\uuid\detail\random_provider_detect_platform.hpp \
		$(BOOST_INCLDUE)\boost\uuid\detail\random_provider_include_platform.hpp \
		$(BOOST_INCLDUE)\boost\uuid\detail\random_provider_arc4random.ipp \
		$(BOOST_INCLDUE)\boost\uuid\detail\random_provider_bcrypt.ipp \
		$(BOOST_INCLDUE)\boost\core\ignore_unused.hpp \
		$(BOOST_INCLDUE)\boost\winapi\bcrypt.hpp \
		$(BOOST_INCLDUE)\boost\uuid\detail\random_provider_getentropy.ipp \
		$(BOOST_INCLDUE)\boost\uuid\detail\random_provider_getrandom.ipp \
		$(BOOST_INCLDUE)\boost\uuid\detail\random_provider_posix.ipp \
		$(BOOST_INCLDUE)\boost\uuid\detail\random_provider_wincrypt.ipp \
		$(BOOST_INCLDUE)\boost\winapi\crypt.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast.hpp \
		$(BOOST_INCLDUE)\boost\range\iterator_range_core.hpp \
		$(BOOST_INCLDUE)\boost\iterator\iterator_traits.hpp \
		$(BOOST_INCLDUE)\boost\iterator\iterator_facade.hpp \
		$(BOOST_INCLDUE)\boost\iterator\interoperable.hpp \
		$(BOOST_INCLDUE)\boost\iterator\detail\config_def.hpp \
		$(BOOST_INCLDUE)\boost\iterator\detail\config_undef.hpp \
		$(BOOST_INCLDUE)\boost\iterator\iterator_categories.hpp \
		$(BOOST_INCLDUE)\boost\iterator\detail\facade_iterator_category.hpp \
		$(BOOST_INCLDUE)\boost\core\use_default.hpp \
		$(BOOST_INCLDUE)\boost\detail\indirect_traits.hpp \
		$(BOOST_INCLDUE)\boost\detail\select_type.hpp \
		$(BOOST_INCLDUE)\boost\iterator\detail\enable_if.hpp \
		$(BOOST_INCLDUE)\boost\range\functions.hpp \
		$(BOOST_INCLDUE)\boost\range\begin.hpp \
		$(BOOST_INCLDUE)\boost\range\config.hpp \
		$(BOOST_INCLDUE)\boost\range\iterator.hpp \
		$(BOOST_INCLDUE)\boost\range\range_fwd.hpp \
		$(BOOST_INCLDUE)\boost\range\mutable_iterator.hpp \
		$(BOOST_INCLDUE)\boost\range\detail\extract_optional_type.hpp \
		$(BOOST_INCLDUE)\boost\range\detail\msvc_has_iterator_workaround.hpp \
		$(BOOST_INCLDUE)\boost\range\const_iterator.hpp \
		$(BOOST_INCLDUE)\boost\range\end.hpp \
		$(BOOST_INCLDUE)\boost\range\detail\implementation_help.hpp \
		$(BOOST_INCLDUE)\boost\range\detail\common.hpp \
		$(BOOST_INCLDUE)\boost\range\detail\sfinae.hpp \
		$(BOOST_INCLDUE)\boost\range\size.hpp \
		$(BOOST_INCLDUE)\boost\range\size_type.hpp \
		$(BOOST_INCLDUE)\boost\range\difference_type.hpp \
		$(BOOST_INCLDUE)\boost\range\has_range_iterator.hpp \
		$(BOOST_INCLDUE)\boost\range\concepts.hpp \
		$(BOOST_INCLDUE)\boost\concept_check.hpp \
		$(BOOST_INCLDUE)\boost\concept\assert.hpp \
		$(BOOST_INCLDUE)\boost\concept\detail\msvc.hpp \
		$(BOOST_INCLDUE)\boost\concept\detail\backward_compatibility.hpp \
		$(BOOST_INCLDUE)\boost\concept\detail\has_constraints.hpp \
		$(BOOST_INCLDUE)\boost\concept\detail\borland.hpp \
		$(BOOST_INCLDUE)\boost\concept\detail\general.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\conversion_traits.hpp \
		$(BOOST_INCLDUE)\boost\concept\usage.hpp \
		$(BOOST_INCLDUE)\boost\concept\detail\concept_def.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\for_each_i.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\enum.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\enum_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\enum_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\enum_1024.hpp \
		$(BOOST_INCLDUE)\boost\concept\detail\concept_undef.hpp \
		$(BOOST_INCLDUE)\boost\iterator\iterator_concepts.hpp \
		$(BOOST_INCLDUE)\boost\range\value_type.hpp \
		$(BOOST_INCLDUE)\boost\range\detail\misc_concept.hpp \
		$(BOOST_INCLDUE)\boost\range\detail\has_member_size.hpp \
		$(BOOST_INCLDUE)\boost\utility.hpp \
		$(BOOST_INCLDUE)\boost\utility\base_from_member.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\repeat_from_to.hpp \
		$(BOOST_INCLDUE)\boost\utility\binary.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\deduce_d.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\cat.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\transform.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\mod.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\detail\div_base.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\comparison\less_equal.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\detail\is_1_number.hpp \
		$(BOOST_INCLDUE)\boost\utility\identity_type.hpp \
		$(BOOST_INCLDUE)\boost\core\noncopyable.hpp \
		$(BOOST_INCLDUE)\boost\range\distance.hpp \
		$(BOOST_INCLDUE)\boost\iterator\distance.hpp \
		$(BOOST_INCLDUE)\boost\range\empty.hpp \
		$(BOOST_INCLDUE)\boost\range\rbegin.hpp \
		$(BOOST_INCLDUE)\boost\range\reverse_iterator.hpp \
		$(BOOST_INCLDUE)\boost\iterator\reverse_iterator.hpp \
		$(BOOST_INCLDUE)\boost\iterator\iterator_adaptor.hpp \
		$(BOOST_INCLDUE)\boost\range\rend.hpp \
		$(BOOST_INCLDUE)\boost\range\algorithm\equal.hpp \
		$(BOOST_INCLDUE)\boost\range\detail\safe_bool.hpp \
		$(BOOST_INCLDUE)\boost\next_prior.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_plus.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\has_binary_operator.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\make_void.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_fundamental.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_likely_lambda.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_plus_assign.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_minus.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_minus_assign.hpp \
		$(BOOST_INCLDUE)\boost\iterator\advance.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast\bad_lexical_cast.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast\try_lexical_convert.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast\detail\is_character.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast\detail\converter_numeric.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_float.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast\detail\converter_lexical.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_left_shift.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_right_shift.hpp \
		$(BOOST_INCLDUE)\boost\detail\lcast_precision.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast\detail\widest_char.hpp \
		$(BOOST_INCLDUE)\boost\container\container_fwd.hpp \
		$(BOOST_INCLDUE)\boost\container\detail\std_fwd.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\std_ns_begin.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\std_ns_end.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast\detail\converter_lexical_streams.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast\detail\lcast_char_constants.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast\detail\lcast_unsigned_converters.hpp \
		$(BOOST_INCLDUE)\boost\noncopyable.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast\detail\inf_nan.hpp \
		$(BOOST_INCLDUE)\boost\core\cmath.hpp \
		$(BOOST_INCLDUE)\boost\detail\basic_pointerbuf.hpp \
		$(BOOST_INCLDUE)\boost\uuid\uuid_io.hpp \
		$(BOOST_INCLDUE)\boost\io\ios_state.hpp \
		$(BOOST_INCLDUE)\boost\io_fwd.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\std_containers_traits.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\std\string_traits.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\yes_no_type.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\sequence_traits.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\std\list_traits.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\std\slist_traits.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\config.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\trim.hpp \
		$(BOOST_INCLDUE)\boost\range\as_literal.hpp \
		$(BOOST_INCLDUE)\boost\range\iterator_range.hpp \
		$(BOOST_INCLDUE)\boost\range\iterator_range_io.hpp \
		$(BOOST_INCLDUE)\boost\range\detail\str_types.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\trim.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\classification.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\classification.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\predicate_facade.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\case_conv.hpp \
		$(BOOST_INCLDUE)\boost\iterator\transform_iterator.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\case_conv.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\predicate.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\compare.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\find.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\finder.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\constants.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\finder.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\predicate.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\split.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\iter_find.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\concept.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\find_iterator.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\find_iterator.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\util.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\join.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\sequence.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\replace.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\find_format.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\find_format.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\find_format_store.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\replace_storage.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\find_format_all.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\formatter.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\formatter.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\erase.hpp \
		$(BOOST_INCLDUE)\boost\archive\iterators\base64_from_binary.hpp \
		$(BOOST_INCLDUE)\boost\archive\iterators\dataflow_exception.hpp \
		$(BOOST_INCLDUE)\boost\archive\iterators\transform_width.hpp \
		$(BOOST_INCLDUE)\boost\archive\iterators\binary_from_base64.hpp \
		$(BOOST_INCLDUE)\boost\serialization\throw_exception.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\ptree.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\ptree_fwd.hpp \
		$(BOOST_INCLDUE)\boost\optional\optional_fwd.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\string_path.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\id_translator.hpp \
		$(BOOST_INCLDUE)\boost\optional.hpp \
		$(BOOST_INCLDUE)\boost\optional\optional.hpp \
		$(BOOST_INCLDUE)\boost\core\explicit_operator_bool.hpp \
		$(BOOST_INCLDUE)\boost\optional\bad_optional_access.hpp \
		$(BOOST_INCLDUE)\boost\none.hpp \
		$(BOOST_INCLDUE)\boost\none_t.hpp \
		$(BOOST_INCLDUE)\boost\utility\compare_pointees.hpp \
		$(BOOST_INCLDUE)\boost\optional\detail\optional_config.hpp \
		$(BOOST_INCLDUE)\boost\optional\detail\optional_factory_support.hpp \
		$(BOOST_INCLDUE)\boost\optional\detail\optional_aligned_storage.hpp \
		$(BOOST_INCLDUE)\boost\optional\detail\old_optional_implementation.hpp \
		$(BOOST_INCLDUE)\boost\optional\detail\optional_trivially_copyable_base.hpp \
		$(BOOST_INCLDUE)\boost\optional\detail\optional_reference_spec.hpp \
		$(BOOST_INCLDUE)\boost\optional\detail\optional_relops.hpp \
		$(BOOST_INCLDUE)\boost\optional\detail\optional_swap.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\exceptions.hpp \
		$(BOOST_INCLDUE)\boost\any.hpp \
		$(BOOST_INCLDUE)\boost\any\bad_any_cast.hpp \
		$(BOOST_INCLDUE)\boost\any\fwd.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\detail\exception_implementation.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\detail\ptree_utils.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\stream_translator.hpp \
		$(BOOST_INCLDUE)\boost\optional\optional_io.hpp \
		$(BOOST_INCLDUE)\boost\multi_index_container.hpp \
		$(BOOST_INCLDUE)\boost\mpl\contains.hpp \
		$(BOOST_INCLDUE)\boost\mpl\contains_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\contains_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\find.hpp \
		$(BOOST_INCLDUE)\boost\multi_index_container_fwd.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\identity.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\identity_fwd.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\indexed_by.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\ordered_index_fwd.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\ord_index_args.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\tag.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\no_duplicate_tags.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\set0.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\at_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\has_key_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\tag.hpp \
		$(BOOST_INCLDUE)\boost\mpl\has_key_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\overload_names.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\ptr_to_ref.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\operators.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\clear_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\set0.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\size_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\empty_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\insert_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\item.hpp \
		$(BOOST_INCLDUE)\boost\mpl\base.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\insert_range_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\erase_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\erase_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\erase_key_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\erase_key_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\key_type_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\key_type_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\value_type_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\value_type_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\begin_end_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\iterator.hpp \
		$(BOOST_INCLDUE)\boost\mpl\has_key.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\has_key_impl.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\ord_index_impl_fwd.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\access_specifier.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\adl_swap.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\allocator_traits.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\vartempl_support.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\base_type.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\index_base.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\copy_map.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\auto_space.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\raw_ptr.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\do_not_copy_elements_tag.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\index_access_sequence.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\node_handle.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\define_if_constexpr_macro.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\ignore_wstrict_aliasing.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\restore_wstrict_aliasing.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\undef_if_constexpr_macro.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\node_type.hpp \
		$(BOOST_INCLDUE)\boost\mpl\reverse_iter_fold.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\reverse_iter_fold_impl.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\header_holder.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\index_node_base.hpp \
		$(BOOST_INCLDUE)\boost\archive\archive_exception.hpp \
		$(BOOST_INCLDUE)\boost\archive\detail\decl.hpp \
		$(BOOST_INCLDUE)\boost\archive\detail\abi_prefix.hpp \
		$(BOOST_INCLDUE)\boost\archive\detail\abi_suffix.hpp \
		$(BOOST_INCLDUE)\boost\serialization\access.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\is_index_list.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\index_loader.hpp \
		$(BOOST_INCLDUE)\boost\serialization\nvp.hpp \
		$(BOOST_INCLDUE)\boost\core\nvp.hpp \
		$(BOOST_INCLDUE)\boost\serialization\level.hpp \
		$(BOOST_INCLDUE)\boost\serialization\level_enum.hpp \
		$(BOOST_INCLDUE)\boost\serialization\tracking.hpp \
		$(BOOST_INCLDUE)\boost\mpl\greater.hpp \
		$(BOOST_INCLDUE)\boost\serialization\tracking_enum.hpp \
		$(BOOST_INCLDUE)\boost\serialization\type_info_implementation.hpp \
		$(BOOST_INCLDUE)\boost\serialization\traits.hpp \
		$(BOOST_INCLDUE)\boost\serialization\split_free.hpp \
		$(BOOST_INCLDUE)\boost\serialization\serialization.hpp \
		$(BOOST_INCLDUE)\boost\serialization\strong_typedef.hpp \
		$(BOOST_INCLDUE)\boost\serialization\wrapper.hpp \
		$(BOOST_INCLDUE)\boost\serialization\base_object.hpp \
		$(BOOST_INCLDUE)\boost\serialization\force_include.hpp \
		$(BOOST_INCLDUE)\boost\serialization\void_cast_fwd.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\index_saver.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\index_matcher.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\converter.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\has_tag.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\invalidate_iterators.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\safe_mode.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\any_container_view.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\iter_adaptor.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\safe_mode_errors.hpp \
		$(BOOST_INCLDUE)\boost\serialization\split_member.hpp \
		$(BOOST_INCLDUE)\boost\serialization\version.hpp \
		$(BOOST_INCLDUE)\boost\mpl\comparison.hpp \
		$(BOOST_INCLDUE)\boost\mpl\not_equal_to.hpp \
		$(BOOST_INCLDUE)\boost\mpl\less_equal.hpp \
		$(BOOST_INCLDUE)\boost\mpl\greater_equal.hpp \
		$(BOOST_INCLDUE)\boost\detail\lightweight_mutex.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\scoped_bilock.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\scope_guard.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\archive_constructed.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\serialization_version.hpp \
		$(BOOST_INCLDUE)\boost\serialization\collection_size_type.hpp \
		$(BOOST_INCLDUE)\boost\serialization\is_bitwise_serializable.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\invariant_assert.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\sequenced_index.hpp \
		$(BOOST_INCLDUE)\boost\bind\bind.hpp \
		$(BOOST_INCLDUE)\boost\bind\detail\result_traits.hpp \
		$(BOOST_INCLDUE)\boost\bind\std_placeholders.hpp \
		$(BOOST_INCLDUE)\boost\visit_each.hpp \
		$(BOOST_INCLDUE)\boost\core\is_same.hpp \
		$(BOOST_INCLDUE)\boost\bind\storage.hpp \
		$(BOOST_INCLDUE)\boost\bind\bind_template.hpp \
		$(BOOST_INCLDUE)\boost\bind\bind_cc.hpp \
		$(BOOST_INCLDUE)\boost\bind\bind_mf_cc.hpp \
		$(BOOST_INCLDUE)\boost\bind\bind_mf2_cc.hpp \
		$(BOOST_INCLDUE)\boost\bind\placeholders.hpp \
		$(BOOST_INCLDUE)\boost\foreach_fwd.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\bidir_node_iterator.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\seq_index_node.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\seq_index_ops.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\sequenced_index_fwd.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\ordered_index.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\ord_index_impl.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\modify_key_adaptor.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\ord_index_node.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\uintptr_type.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\ord_index_ops.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\promotes_arg.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\is_transparent.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_final.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\unbounded.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\value_compare.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\duplicates_iterator.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\member.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\detail\ptree_implementation.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\json_parser.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\json_parser\error.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\detail\file_parser_error.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\json_parser\detail\read.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\json_parser\detail\parser.hpp \
		$(BOOST_INCLDUE)\boost\format.hpp \
		$(BOOST_INCLDUE)\boost\format\detail\compat_workarounds.hpp \
		$(BOOST_INCLDUE)\boost\format\detail\config_macros.hpp \
		$(BOOST_INCLDUE)\boost\format\detail\workarounds_gcc-2_95.hpp \
		$(BOOST_INCLDUE)\boost\format\detail\workarounds_stlport.hpp \
		$(BOOST_INCLDUE)\boost\format\format_fwd.hpp \
		$(BOOST_INCLDUE)\boost\format\internals_fwd.hpp \
		$(BOOST_INCLDUE)\boost\format\internals.hpp \
		$(BOOST_INCLDUE)\boost\format\alt_sstream.hpp \
		$(BOOST_INCLDUE)\boost\format\alt_sstream_impl.hpp \
		$(BOOST_INCLDUE)\boost\format\format_class.hpp \
		$(BOOST_INCLDUE)\boost\format\exceptions.hpp \
		$(BOOST_INCLDUE)\boost\format\format_implementation.hpp \
		$(BOOST_INCLDUE)\boost\format\group.hpp \
		$(BOOST_INCLDUE)\boost\format\feed_args.hpp \
		$(BOOST_INCLDUE)\boost\format\detail\msvc_disambiguater.hpp \
		$(BOOST_INCLDUE)\boost\format\parsing.hpp \
		$(BOOST_INCLDUE)\boost\format\free_funcs.hpp \
		$(BOOST_INCLDUE)\boost\format\detail\unset_macros.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\json_parser\detail\narrow_encoding.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\json_parser\detail\wide_encoding.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\json_parser\detail\standard_callbacks.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\json_parser\detail\write.hpp \
		$(BOOST_INCLDUE)\rapidjson\document.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\reader.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\allocators.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\rapidjson.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\msinttypes\stdint.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\msinttypes\inttypes.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\stream.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\encodings.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\encodedstream.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\memorystream.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\clzll.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\meta.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\stack.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\swap.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\strtod.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\ieee754.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\biginteger.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\diyfp.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\pow10.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\error\error.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\strfunc.h \
		$(BOOST_INCLDUE)\rapidjson\istreamwrapper.h \
		$(BOOST_INCLDUE)\rapidjson\writer.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\dtoa.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\itoa.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\stringbuffer.h \
		$(BOOST_INCLDUE)\rapidjson\stringbuffer.h \
		$(BOOST_INCLDUE)\rapidjson\ostreamwrapper.h \
		$(BOOST_INCLDUE)\rapidjson\filereadstream.h \
		$(BOOST_INCLDUE)\boost\smart_ptr.hpp \
		$(BOOST_INCLDUE)\boost\shared_array.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\shared_array.hpp \
		$(BOOST_INCLDUE)\boost\intrusive_ptr.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\intrusive_ptr.hpp \
		$(BOOST_INCLDUE)\boost\enable_shared_from_this.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\enable_shared_from_this.hpp \
		..\ws_client\include\ws_session.h \
		..\ws_client\include\beast.h \
		$(BOOST_INCLDUE)\boost\beast.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\config.hpp \
		$(BOOST_INCLDUE)\boost\beast\core.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\async_base.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\bind_handler.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\bind_handler.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\error.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\error.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\error.ipp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\tuple.hpp \
		$(BOOST_INCLDUE)\boost\mp11\integer_sequence.hpp \
		$(BOOST_INCLDUE)\boost\mp11\version.hpp \
		$(BOOST_INCLDUE)\boost\mp11\algorithm.hpp \
		$(BOOST_INCLDUE)\boost\mp11\list.hpp \
		$(BOOST_INCLDUE)\boost\mp11\integral.hpp \
		$(BOOST_INCLDUE)\boost\mp11\detail\mp_list.hpp \
		$(BOOST_INCLDUE)\boost\mp11\detail\mp_is_list.hpp \
		$(BOOST_INCLDUE)\boost\mp11\detail\mp_append.hpp \
		$(BOOST_INCLDUE)\boost\mp11\utility.hpp \
		$(BOOST_INCLDUE)\boost\mp11\detail\mp_fold.hpp \
		$(BOOST_INCLDUE)\boost\mp11\detail\config.hpp \
		$(BOOST_INCLDUE)\boost\mp11\detail\mp_front.hpp \
		$(BOOST_INCLDUE)\boost\mp11\detail\mp_rename.hpp \
		$(BOOST_INCLDUE)\boost\mp11\set.hpp \
		$(BOOST_INCLDUE)\boost\mp11\function.hpp \
		$(BOOST_INCLDUE)\boost\mp11\detail\mp_count.hpp \
		$(BOOST_INCLDUE)\boost\mp11\detail\mp_plus.hpp \
		$(BOOST_INCLDUE)\boost\mp11\detail\mp_min_element.hpp \
		$(BOOST_INCLDUE)\boost\mp11\detail\mp_void.hpp \
		$(BOOST_INCLDUE)\boost\mp11\detail\mp_copy_if.hpp \
		$(BOOST_INCLDUE)\boost\mp11\detail\mp_remove_if.hpp \
		$(BOOST_INCLDUE)\boost\mp11\detail\mp_map_find.hpp \
		$(BOOST_INCLDUE)\boost\mp11\detail\mp_with_index.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\allocator.hpp \
		$(BOOST_INCLDUE)\boost\container\allocator_traits.hpp \
		$(BOOST_INCLDUE)\boost\container\detail\config_begin.hpp \
		$(BOOST_INCLDUE)\boost\container\detail\workaround.hpp \
		$(BOOST_INCLDUE)\boost\container\detail\mpl.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\mpl.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\config_begin.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\config_end.hpp \
		$(BOOST_INCLDUE)\boost\container\detail\config_end.hpp \
		$(BOOST_INCLDUE)\boost\container\detail\type_traits.hpp \
		$(BOOST_INCLDUE)\boost\container\detail\placement_new.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\pointer_traits.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\workaround.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\pointer_rebind.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\pointer_element.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\fwd_macros.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\has_member_function_callable_with.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\async_base.hpp \
		$(BOOST_INCLDUE)\boost\core\exchange.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\work_guard.hpp \
		$(BOOST_INCLDUE)\boost\core\empty_value.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\async_base.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\basic_stream.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\stream_base.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\rate_policy.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\role.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\stream_traits.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\static_const.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\stream_traits.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\basic_stream.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\buffer_traits.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\buffer_traits.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\buffers_prefix.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\buffers_prefix.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\teardown.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\impl\teardown.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\bind_continuation.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\remap_post_to_defer.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\is_invocable.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\buffered_read_stream.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\multi_buffer.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\list.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\intrusive_fwd.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\link_mode.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\assert.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\list_hook.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\list_node.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\circular_list_algorithms.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\algo_type.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\options.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\pack_options.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\generic_hook.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\node_holder.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\get_value_traits.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\hook_traits.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\parent_from_member.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\to_raw_pointer.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\is_stateful_value_traits.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\function_detector.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\default_header_holder.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\reverse_iterator.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\reverse_iterator.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\iterator_traits.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\uncast.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\list_iterator.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\std_fwd.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\iiterator.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\iterator.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\array_initializer.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\placement_new.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\force_ptr.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\exception_disposer.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\equal_to_value.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\key_nodeptr_comp.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\ebo_functor_holder.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\tree_value_compare.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\simple_disposers.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\size_holder.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\algorithm.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\value_functors.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\multi_buffer.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\buffered_read_stream.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\read_size.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\read_size.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\buffers_adaptor.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\buffers_adaptor.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\buffers_cat.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\type_traits.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\buffers_cat.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\variant.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\buffers_range.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\buffers_range_adaptor.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\buffers_suffix.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\buffers_suffix.hpp \
		$(BOOST_INCLDUE)\boost\type_traits.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\conjunction.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\disjunction.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\floating_point_promotion.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_bit_and.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_bit_and_assign.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_bit_or.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_bit_or_assign.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_bit_xor.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_bit_xor_assign.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_complement.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\has_prefix_operator.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_dereference.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_divides.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_divides_assign.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_equal_to.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_greater.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_greater_equal.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_left_shift_assign.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_less.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_less_equal.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_logical_and.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_logical_not.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_logical_or.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_modulus.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_modulus_assign.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_multiplies.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_multiplies_assign.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_negate.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_new_operator.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_not_equal_to.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_post_decrement.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\has_postfix_operator.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_post_increment.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_pre_decrement.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_pre_increment.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_right_shift_assign.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_unary_minus.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_unary_plus.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_virtual_destructor.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_complex.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_compound.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_copy_assignable.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_list_constructible.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_member_object_pointer.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_nothrow_swappable.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_scoped_enum.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\negation.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_trivially_copyable.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_unscoped_enum.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_virtual_base_of.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\rank.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\remove_cv_ref.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\integral_promotion.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\promote.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\buffers_to_string.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detect_ssl.hpp \
		$(BOOST_INCLDUE)\boost\logic\tribool.hpp \
		$(BOOST_INCLDUE)\boost\logic\tribool_fwd.hpp \
		$(BOOST_INCLDUE)\boost\asio\yield.hpp \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\boost\asio\coroutine.hpp \
		$(BOOST_INCLDUE)\boost\asio\unyield.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\file.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\file_base.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\file_posix.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\file_posix.ipp \
		$(BOOST_INCLDUE)\boost\beast\core\file_stdio.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\file_stdio.ipp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\win32_unicode_path.hpp \
		$(BOOST_INCLDUE)\boost\winapi\file_management.hpp \
		$(BOOST_INCLDUE)\boost\winapi\limits.hpp \
		$(BOOST_INCLDUE)\boost\winapi\overlapped.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\file_win32.hpp \
		$(BOOST_INCLDUE)\boost\winapi\handles.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\file_win32.ipp \
		$(BOOST_INCLDUE)\boost\winapi\access_rights.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\flat_buffer.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\flat_buffer.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\flat_static_buffer.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\flat_static_buffer.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\flat_static_buffer.ipp \
		$(BOOST_INCLDUE)\boost\beast\core\flat_stream.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\flat_stream.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\flat_stream.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\static_buffer.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\buffers_pair.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\static_buffer.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\static_buffer.ipp \
		$(BOOST_INCLDUE)\boost\beast\core\make_printable.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\ostream.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\ostream.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\saved_handler.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\saved_handler.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\saved_handler.ipp \
		$(BOOST_INCLDUE)\boost\beast\core\span.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\static_string.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\string.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\string_type.hpp \
		$(BOOST_INCLDUE)\boost\utility\string_view.hpp \
		$(BOOST_INCLDUE)\boost\io\ostream_put.hpp \
		$(BOOST_INCLDUE)\boost\io\detail\buffer_fill.hpp \
		$(BOOST_INCLDUE)\boost\io\detail\ostream_guard.hpp \
		$(BOOST_INCLDUE)\boost\utility\string_view_fwd.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\string.ipp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\string.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\static_string.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\static_string.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\tcp_stream.hpp \
		$(BOOST_INCLDUE)\boost\beast\http.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\basic_dynamic_body.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\buffer.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\clamp.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\error.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\error.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\error.ipp \
		$(BOOST_INCLDUE)\boost\beast\http\message.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\fields.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\field.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\field.ipp \
		$(BOOST_INCLDUE)\boost\intrusive\set.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\rbtree.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\minimal_less_equal_header.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\minimal_pair_header.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\set_hook.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\rbtree_node.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\rbtree_algorithms.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\bstree_algorithms.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\bstree_algorithms_base.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\math.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\pointer_plus_bits.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\tree_node.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\bstree.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\bs_set_hook.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\tree_iterator.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\empty_node_checker.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\node_cloner_disposer.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\parent_from_member.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\fields.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\buffers_ref.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\temporary_buffer.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\impl\temporary_buffer.ipp \
		$(BOOST_INCLDUE)\boost\beast\http\verb.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\verb.ipp \
		$(BOOST_INCLDUE)\boost\beast\http\rfc7230.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\detail\rfc7230.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\detail\rfc7230.ipp \
		$(BOOST_INCLDUE)\boost\beast\http\detail\basic_parsed_list.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\rfc7230.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\rfc7230.ipp \
		$(BOOST_INCLDUE)\boost\beast\http\status.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\status.ipp \
		$(BOOST_INCLDUE)\boost\beast\http\chunk_encode.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\type_traits.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\detail\type_traits.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\detail\chunk_encode.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\chunk_encode.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\varint.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\fields.ipp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\message.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\basic_file_body.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\basic_parser.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\detail\basic_parser.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\char_buffer.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\detail\basic_parser.ipp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\basic_parser.hpp \
		$(BOOST_INCLDUE)\boost\make_unique.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\make_unique.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\basic_parser.ipp \
		$(BOOST_INCLDUE)\boost\beast\http\buffer_body.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\dynamic_body.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\empty_body.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\file_body.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\file_body_win32.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\write.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\serializer.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\serializer.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\write.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\parser.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\parser.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\read.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\read.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\read.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\impl\read.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\span_body.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\string_body.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\vector_body.hpp \
		$(BOOST_INCLDUE)\boost\beast\version.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\error.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\impl\error.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\impl\error.ipp \
		$(BOOST_INCLDUE)\boost\beast\websocket\option.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\rfc6455.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\impl\rfc6455.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\stream.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\stream_base.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\decorator.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\stream_fwd.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\hybi13.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\base64.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\base64.ipp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\hybi13.ipp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\sha1.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\sha1.ipp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\prng.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\prng.ipp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\chacha.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\pcg.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\impl_base.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\frame.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\utf8_checker.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\utf8_checker.ipp \
		$(BOOST_INCLDUE)\boost\endian\conversion.hpp \
		$(BOOST_INCLDUE)\boost\endian\detail\endian_reverse.hpp \
		$(BOOST_INCLDUE)\boost\endian\detail\integral_by_size.hpp \
		$(BOOST_INCLDUE)\boost\endian\detail\intrinsic.hpp \
		$(BOOST_INCLDUE)\boost\endian\detail\is_scoped_enum.hpp \
		$(BOOST_INCLDUE)\boost\endian\detail\endian_load.hpp \
		$(BOOST_INCLDUE)\boost\endian\detail\order.hpp \
		$(BOOST_INCLDUE)\boost\core\scoped_enum.hpp \
		$(BOOST_INCLDUE)\boost\endian\detail\is_trivially_copyable.hpp \
		$(BOOST_INCLDUE)\boost\endian\detail\endian_store.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\pmd_extension.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\pmd_extension.ipp \
		$(BOOST_INCLDUE)\boost\beast\zlib\deflate_stream.hpp \
		$(BOOST_INCLDUE)\boost\beast\zlib\error.hpp \
		$(BOOST_INCLDUE)\boost\beast\zlib\impl\error.hpp \
		$(BOOST_INCLDUE)\boost\beast\zlib\impl\error.ipp \
		$(BOOST_INCLDUE)\boost\beast\zlib\zlib.hpp \
		$(BOOST_INCLDUE)\boost\beast\zlib\detail\deflate_stream.hpp \
		$(BOOST_INCLDUE)\boost\beast\zlib\detail\ranges.hpp \
		$(BOOST_INCLDUE)\boost\beast\zlib\detail\deflate_stream.ipp \
		$(BOOST_INCLDUE)\boost\beast\zlib\inflate_stream.hpp \
		$(BOOST_INCLDUE)\boost\beast\zlib\detail\inflate_stream.hpp \
		$(BOOST_INCLDUE)\boost\beast\zlib\detail\bitstream.hpp \
		$(BOOST_INCLDUE)\boost\beast\zlib\detail\window.hpp \
		$(BOOST_INCLDUE)\boost\beast\zlib\detail\inflate_stream.ipp \
		$(BOOST_INCLDUE)\boost\beast\websocket\impl\stream_impl.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\mask.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\mask.ipp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\service.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\service_base.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\service.ipp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\soft_mutex.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\impl\accept.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\type_traits.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\impl\close.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\impl\handshake.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\impl\ping.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\impl\read.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\impl\stream.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\impl\write.hpp \
		$(BOOST_INCLDUE)\boost\beast\zlib.hpp \
		$(BOOST_INCLDUE)\boost\locale.hpp \
		$(BOOST_INCLDUE)\boost\locale\boundary.hpp \
		$(BOOST_INCLDUE)\boost\locale\boundary\types.hpp \
		$(BOOST_INCLDUE)\boost\locale\config.hpp \
		$(BOOST_INCLDUE)\boost\locale\definitions.hpp \
		$(BOOST_INCLDUE)\boost\locale\boundary\facets.hpp \
		$(BOOST_INCLDUE)\boost\locale\boundary\segment.hpp \
		$(BOOST_INCLDUE)\boost\locale\boundary\boundary_point.hpp \
		$(BOOST_INCLDUE)\boost\locale\boundary\index.hpp \
		$(BOOST_INCLDUE)\boost\locale\collator.hpp \
		$(BOOST_INCLDUE)\boost\locale\conversion.hpp \
		$(BOOST_INCLDUE)\boost\locale\date_time.hpp \
		$(BOOST_INCLDUE)\boost\locale\hold_ptr.hpp \
		$(BOOST_INCLDUE)\boost\locale\date_time_facet.hpp \
		$(BOOST_INCLDUE)\boost\locale\formatting.hpp \
		$(BOOST_INCLDUE)\boost\locale\time_zone.hpp \
		$(BOOST_INCLDUE)\boost\locale\encoding.hpp \
		$(BOOST_INCLDUE)\boost\locale\info.hpp \
		$(BOOST_INCLDUE)\boost\locale\encoding_errors.hpp \
		$(BOOST_INCLDUE)\boost\locale\encoding_utf.hpp \
		$(BOOST_INCLDUE)\boost\locale\utf.hpp \
		$(BOOST_INCLDUE)\boost\locale\format.hpp \
		$(BOOST_INCLDUE)\boost\locale\message.hpp \
		$(BOOST_INCLDUE)\boost\locale\generator.hpp \
		$(BOOST_INCLDUE)\boost\locale\gnu_gettext.hpp \
		$(BOOST_INCLDUE)\boost\locale\localization_backend.hpp \
		$(BOOST_INCLDUE)\boost\locale\util.hpp

debug\ws_session.obj: ..\ws_client\src\ws_session.cpp ..\ws_client\include\ws_session.h \
		..\ws_client\include\net.h \
		..\ws_drv\src\stdafx.h \
		$(BOOST_INCLDUE)\boost\asio.hpp \
		$(BOOST_INCLDUE)\boost\asio\associated_allocator.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\config.hpp \
		$(BOOST_INCLDUE)\boost\config.hpp \
		$(BOOST_INCLDUE)\boost\config\user.hpp \
		$(BOOST_INCLDUE)\boost\config\detail\select_compiler_config.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\nvcc.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\gcc_xml.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\cray.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\common_edg.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\comeau.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\pathscale.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\clang.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\clang_version.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\intel.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\visualc.hpp \
		$(BOOST_INCLDUE)\boost\config\pragma_message.hpp \
		$(BOOST_INCLDUE)\boost\config\helper_macros.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\gcc.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\digitalmars.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\kai.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\sgi_mipspro.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\compaq_cxx.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\greenhills.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\codegear.hpp \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\boost\config\compiler\clang.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\borland.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\metrowerks.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\sunpro_cc.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\hp_acc.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\mpw.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\xlcpp_zos.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\xlcpp.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\vacpp.hpp \
		$(BOOST_INCLDUE)\boost\config\compiler\pgi.hpp \
		$(BOOST_INCLDUE)\boost\config\detail\select_stdlib_config.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\stlport.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\libcomo.hpp \
		$(BOOST_INCLDUE)\boost\config\no_tr1\utility.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\roguewave.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\libcpp.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\libstdcpp3.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\sgi.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\msl.hpp \
		$(BOOST_INCLDUE)\boost\config\detail\posix_features.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\xlcpp_zos.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\vacpp.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\modena.hpp \
		$(BOOST_INCLDUE)\boost\config\stdlib\dinkumware.hpp \
		$(BOOST_INCLDUE)\boost\config\detail\select_platform_config.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\linux.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\bsd.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\solaris.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\irix.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\hpux.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\cygwin.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\win32.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\beos.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\macos.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\zos.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\aix.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\amigaos.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\qnxnto.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\vxworks.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\symbian.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\cray.hpp \
		$(BOOST_INCLDUE)\boost\config\platform\vms.hpp \
		$(BOOST_INCLDUE)\boost\config\detail\suffix.hpp \
		$(BOOST_INCLDUE)\boost\config\detail\cxx_composite.hpp \
		$(BOOST_INCLDUE)\boost\version.hpp \
		$(BOOST_INCLDUE)\boost\asio\associator.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\push_options.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\pop_options.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\functional.hpp \
		$(BOOST_INCLDUE)\boost\function.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\iterate.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\iteration\iterate.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\dec.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\config\config.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\config\limits.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\limits\dec_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\limits\dec_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\limits\dec_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\inc.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\limits\inc_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\limits\inc_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\limits\inc_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\array\elem.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\array\data.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\tuple\elem.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\cat.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\expand.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\overload.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\variadic\size.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\iif.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\check_empty.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\variadic\has_opt.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\variadic\detail\has_opt.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\is_empty_variadic.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\punctuation\is_begin_parens.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\punctuation\detail\is_begin_parens.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\empty.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\detail\is_empty.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\variadic\limits\size_64.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\variadic\limits\size_128.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\variadic\limits\size_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\tuple\rem.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\tuple\detail\is_single_return.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\is_1.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\is_empty.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\tuple\size.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\if.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\logical\bool.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\logical\limits\bool_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\logical\limits\bool_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\logical\limits\bool_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\variadic\elem.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\variadic\limits\elem_64.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\variadic\limits\elem_128.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\variadic\limits\elem_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\array\size.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\slot\slot.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\slot\detail\def.hpp \
		$(BOOST_INCLDUE)\boost\config\workaround.hpp \
		$(BOOST_INCLDUE)\boost\function\detail\prologue.hpp \
		$(BOOST_INCLDUE)\boost\config\no_tr1\functional.hpp \
		$(BOOST_INCLDUE)\boost\throw_exception.hpp \
		$(BOOST_INCLDUE)\boost\exception\exception.hpp \
		$(BOOST_INCLDUE)\boost\assert\source_location.hpp \
		$(BOOST_INCLDUE)\boost\current_function.hpp \
		$(BOOST_INCLDUE)\boost\cstdint.hpp \
		$(BOOST_INCLDUE)\boost\limits.hpp \
		$(BOOST_INCLDUE)\boost\function\function_base.hpp \
		$(BOOST_INCLDUE)\boost\assert.hpp \
		$(BOOST_INCLDUE)\boost\integer.hpp \
		$(BOOST_INCLDUE)\boost\integer_fwd.hpp \
		$(BOOST_INCLDUE)\boost\integer_traits.hpp \
		$(BOOST_INCLDUE)\boost\static_assert.hpp \
		$(BOOST_INCLDUE)\boost\detail\workaround.hpp \
		$(BOOST_INCLDUE)\boost\type_index.hpp \
		$(BOOST_INCLDUE)\boost\type_index\stl_type_index.hpp \
		$(BOOST_INCLDUE)\boost\type_index\type_index_facade.hpp \
		$(BOOST_INCLDUE)\boost\container_hash\hash_fwd.hpp \
		$(BOOST_INCLDUE)\boost\core\demangle.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\conditional.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_const.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\integral_constant.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_reference.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_lvalue_reference.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_rvalue_reference.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_rvalue_reference_msvc10_fix.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_volatile.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\remove_cv.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\remove_reference.hpp \
		$(BOOST_INCLDUE)\boost\container_hash\hash.hpp \
		$(BOOST_INCLDUE)\boost\container_hash\detail\hash_float.hpp \
		$(BOOST_INCLDUE)\boost\container_hash\detail\float_functions.hpp \
		$(BOOST_INCLDUE)\boost\config\no_tr1\cmath.hpp \
		$(BOOST_INCLDUE)\boost\container_hash\detail\limits.hpp \
		$(BOOST_INCLDUE)\boost\core\enable_if.hpp \
		$(BOOST_INCLDUE)\boost\integer\static_log2.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_enum.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\intrinsics.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\config.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_same.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_void.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\add_reference.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_arithmetic.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_integral.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_floating_point.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_convertible.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_complete.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\declval.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\add_rvalue_reference.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_function.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_function_cxx_11.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_function_cxx_03.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_function_ptr_helper.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_function_ptr_tester.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\yes_no_type.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_function_msvc10_fix.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_array.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_abstract.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_class.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_union.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_scalar.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_pointer.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_member_pointer.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_member_function_pointer.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_member_function_pointer_cxx_11.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_member_function_pointer_cxx_03.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_mem_fun_pointer_impl.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_mem_fun_pointer_tester.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_polymorphic.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\add_lvalue_reference.hpp \
		$(BOOST_INCLDUE)\boost\container_hash\extensions.hpp \
		$(BOOST_INCLDUE)\boost\detail\container_fwd.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_signed.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\make_signed.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_unsigned.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\add_const.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\add_volatile.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\type_identity.hpp \
		$(BOOST_INCLDUE)\boost\type_index\detail\stl_register_class.hpp \
		$(BOOST_INCLDUE)\boost\type_index\ctti_type_index.hpp \
		$(BOOST_INCLDUE)\boost\type_index\detail\compile_time_type_info.hpp \
		$(BOOST_INCLDUE)\boost\type_index\detail\ctti_register_class.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_trivial_copy.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_pod.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_copy_constructible.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_constructible.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_destructible.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_default_constructible.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_noncopyable.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_base_and_derived.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_trivial_destructor.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\composite_traits.hpp \
		$(BOOST_INCLDUE)\boost\ref.hpp \
		$(BOOST_INCLDUE)\boost\core\ref.hpp \
		$(BOOST_INCLDUE)\boost\core\addressof.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\alignment_of.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\enable_if.hpp \
		$(BOOST_INCLDUE)\boost\function_equal.hpp \
		$(BOOST_INCLDUE)\boost\function\function_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mem_fn.hpp \
		$(BOOST_INCLDUE)\boost\bind\mem_fn.hpp \
		$(BOOST_INCLDUE)\boost\get_pointer.hpp \
		$(BOOST_INCLDUE)\boost\config\no_tr1\memory.hpp \
		$(BOOST_INCLDUE)\boost\bind\mem_fn_template.hpp \
		$(BOOST_INCLDUE)\boost\bind\mem_fn_vw.hpp \
		$(BOOST_INCLDUE)\boost\bind\mem_fn_cc.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\enum.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\enum.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\debug\error.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\detail\auto_rec.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\detail\dmc\auto_rec.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\detail\limits\auto_rec_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\detail\limits\auto_rec_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\detail\limits\auto_rec_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\punctuation\comma_if.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\punctuation\comma.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\repeat.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\tuple\eat.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\limits\repeat_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\limits\repeat_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\limits\repeat_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\enum_params.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\enum_params.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repeat.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\inc.hpp \
		$(BOOST_INCLDUE)\boost\function\function0.hpp \
		$(BOOST_INCLDUE)\boost\function\detail\maybe_include.hpp \
		$(BOOST_INCLDUE)\boost\function\function_template.hpp \
		$(BOOST_INCLDUE)\boost\core\no_exceptions_support.hpp \
		$(BOOST_INCLDUE)\boost\function\function1.hpp \
		$(BOOST_INCLDUE)\boost\function\function2.hpp \
		$(BOOST_INCLDUE)\boost\function\function3.hpp \
		$(BOOST_INCLDUE)\boost\function\function4.hpp \
		$(BOOST_INCLDUE)\boost\function\function5.hpp \
		$(BOOST_INCLDUE)\boost\function\function6.hpp \
		$(BOOST_INCLDUE)\boost\function\function7.hpp \
		$(BOOST_INCLDUE)\boost\function\function8.hpp \
		$(BOOST_INCLDUE)\boost\function\function9.hpp \
		$(BOOST_INCLDUE)\boost\function\function10.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\type_traits.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\aligned_storage.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\type_with_alignment.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\decay.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\remove_bounds.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\remove_extent.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\add_pointer.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_nothrow_copy.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_nothrow_destructor.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_base_of.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_object.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\remove_pointer.hpp \
		$(BOOST_INCLDUE)\boost\utility\declval.hpp \
		$(BOOST_INCLDUE)\boost\utility\enable_if.hpp \
		$(BOOST_INCLDUE)\boost\utility\result_of.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\enum_trailing_params.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\enum_binary_params.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\enum_shifted_params.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\intercept.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\limits\intercept_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\limits\intercept_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\limits\intercept_1024.hpp \
		$(BOOST_INCLDUE)\boost\utility\detail\result_of_variadic.hpp \
		$(BOOST_INCLDUE)\boost\utility\detail\result_of_iterate.hpp \
		$(BOOST_INCLDUE)\boost\asio\associated_executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\execute.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\detail\as_invocable.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\atomic_count.hpp \
		$(BOOST_INCLDUE)\boost\detail\atomic_count.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\atomic_count.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_has_gcc_intrinsics.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_has_sync_intrinsics.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\atomic_count_nt.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\atomic_count_std_atomic.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\atomic_count_spin.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\spinlock_pool.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\spinlock.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\spinlock_std_atomic.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\yield_k.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_thread_pause.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_thread_sleep.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_win32_sleep.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_thread_yield.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\spinlock_pt.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\spinlock_gcc_atomic.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\spinlock_gcc_arm.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\spinlock_sync.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\spinlock_w32.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_interlocked.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\spinlock_nt.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\atomic_count_pt.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\atomic_count_gcc_atomic.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\atomic_count_sync.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\atomic_count_gcc_x86.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_obsolete.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\atomic_count_win32.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\atomic_count_gcc.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\memory.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\throw_exception.hpp \
		$(BOOST_INCLDUE)\boost\make_shared.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\make_shared.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\make_shared_object.hpp \
		$(BOOST_INCLDUE)\boost\move\core.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\config_begin.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\workaround.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\type_traits.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\meta_utils.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\meta_utils_core.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\addressof.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\config_end.hpp \
		$(BOOST_INCLDUE)\boost\move\utility_core.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\shared_ptr.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\shared_count.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\bad_weak_ptr.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_nt.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_typeinfo_.hpp \
		$(BOOST_INCLDUE)\boost\core\typeinfo.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_noexcept.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_std_atomic.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_spin.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_pt.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_gcc_atomic.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_sync.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_gcc_x86.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_snc_ps3.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_acc_ia64.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_gcc_ia64.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_vacpp_ppc.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_cw_ppc.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_gcc_ppc.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_gcc_mips.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_gcc_sparc.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_w32.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_base_aix.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_counted_impl.hpp \
		$(BOOST_INCLDUE)\boost\checked_delete.hpp \
		$(BOOST_INCLDUE)\boost\core\checked_delete.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\quick_allocator.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\lightweight_mutex.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\lwm_std_mutex.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\lwm_win32_cs.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\lwm_pthreads.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_disable_deprecated.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_convertible.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_nullptr_t.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\operator_bool.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\local_sp_deleter.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\local_counted_base.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\detail\sp_forward.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\make_shared_array.hpp \
		$(BOOST_INCLDUE)\boost\core\default_allocator.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\allocate_shared_array.hpp \
		$(BOOST_INCLDUE)\boost\core\allocator_access.hpp \
		$(BOOST_INCLDUE)\boost\core\pointer_traits.hpp \
		$(BOOST_INCLDUE)\boost\core\alloc_construct.hpp \
		$(BOOST_INCLDUE)\boost\core\noinit_adaptor.hpp \
		$(BOOST_INCLDUE)\boost\core\first_scalar.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\extent.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_bounded_array.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_unbounded_array.hpp \
		$(BOOST_INCLDUE)\boost\shared_ptr.hpp \
		$(BOOST_INCLDUE)\boost\weak_ptr.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\weak_ptr.hpp \
		$(BOOST_INCLDUE)\boost\utility\addressof.hpp \
		$(BOOST_INCLDUE)\boost\align\aligned_alloc.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\aligned_alloc.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\is_alignment.hpp \
		$(BOOST_INCLDUE)\boost\align\align.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\align_cxx11.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\align.hpp \
		$(BOOST_INCLDUE)\boost\align\alignment_of.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\element_type.hpp \
		$(BOOST_INCLDUE)\boost\align\alignment_of_forward.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\alignment_of_cxx11.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\alignment_of_msvc.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\min_size.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\integral_constant.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\alignment_of.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\alignment_of_gcc.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\alignment_of_codegear.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\alignment_of_clang.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\aligned_alloc_new.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\aligned_alloc_msvc.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\aligned_alloc_mingw.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\aligned_alloc_posix.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\aligned_alloc_macos.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\aligned_alloc_android.hpp \
		$(BOOST_INCLDUE)\boost\align\detail\aligned_alloc_sunos.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\receiver_invocation_error.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\impl\receiver_invocation_error.ipp \
		$(BOOST_INCLDUE)\boost\asio\execution\set_done.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\set_done_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\set_done_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\set_error.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\set_error_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\set_error_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\set_value.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\variadic_templates.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\set_value_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\set_value_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\detail\as_receiver.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\execute_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\execute_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\invocable_archetype.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\equality_comparable.hpp \
		$(BOOST_INCLDUE)\boost\asio\is_executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\is_executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\system_executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\allocator.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\scheduler.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\schedule.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\schedule_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\schedule_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\sender.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\detail\void_receiver.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\receiver.hpp \
		$(BOOST_INCLDUE)\boost\system\error_code.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\error_code.hpp \
		$(BOOST_INCLDUE)\boost\system\is_error_code_enum.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\error_category.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\config.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\error_condition.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\generic_category.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\generic_category_message.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\enable_if.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\is_same.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\errc.hpp \
		$(BOOST_INCLDUE)\boost\system\is_error_condition_enum.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\cerrno.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\append_int.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\snprintf.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\system_category.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\system_category_impl.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\system_category_message.hpp \
		$(BOOST_INCLDUE)\boost\system\api_config.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\system_category_message_win32.hpp \
		$(BOOST_INCLDUE)\boost\winapi\error_handling.hpp \
		$(BOOST_INCLDUE)\boost\winapi\basic_types.hpp \
		$(BOOST_INCLDUE)\boost\winapi\config.hpp \
		$(BOOST_INCLDUE)\boost\predef\version_number.h \
		$(BOOST_INCLDUE)\boost\predef\platform.h \
		$(BOOST_INCLDUE)\boost\predef\platform\android.h \
		$(BOOST_INCLDUE)\boost\predef\make.h \
		$(BOOST_INCLDUE)\boost\predef\detail\test.h \
		$(BOOST_INCLDUE)\boost\predef\detail\platform_detected.h \
		$(BOOST_INCLDUE)\boost\predef\platform\cloudabi.h \
		$(BOOST_INCLDUE)\boost\predef\platform\mingw.h \
		$(BOOST_INCLDUE)\boost\predef\platform\mingw32.h \
		$(BOOST_INCLDUE)\boost\predef\platform\mingw64.h \
		$(BOOST_INCLDUE)\boost\predef\platform\windows_uwp.h \
		$(BOOST_INCLDUE)\boost\predef\os\windows.h \
		$(BOOST_INCLDUE)\boost\predef\detail\os_detected.h \
		$(BOOST_INCLDUE)\boost\predef\platform\windows_desktop.h \
		$(BOOST_INCLDUE)\boost\predef\platform\windows_phone.h \
		$(BOOST_INCLDUE)\boost\predef\platform\windows_server.h \
		$(BOOST_INCLDUE)\boost\predef\platform\windows_store.h \
		$(BOOST_INCLDUE)\boost\predef\platform\windows_system.h \
		$(BOOST_INCLDUE)\boost\predef\platform\windows_runtime.h \
		$(BOOST_INCLDUE)\boost\predef\platform\ios.h \
		$(BOOST_INCLDUE)\boost\predef\os\ios.h \
		$(BOOST_INCLDUE)\boost\winapi\detail\header.hpp \
		$(BOOST_INCLDUE)\boost\winapi\detail\footer.hpp \
		$(BOOST_INCLDUE)\boost\winapi\get_last_error.hpp \
		$(BOOST_INCLDUE)\boost\winapi\character_code_conversion.hpp \
		$(BOOST_INCLDUE)\boost\winapi\local_memory.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\system_category_condition_win32.hpp \
		$(BOOST_INCLDUE)\boost\winapi\error_codes.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\interop_category.hpp \
		$(BOOST_INCLDUE)\boost\system\error_category.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\error_category_impl.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\std_category.hpp \
		$(BOOST_INCLDUE)\boost\system\error_condition.hpp \
		$(BOOST_INCLDUE)\boost\system\errc.hpp \
		$(BOOST_INCLDUE)\boost\system\generic_category.hpp \
		$(BOOST_INCLDUE)\boost\system\system_category.hpp \
		$(BOOST_INCLDUE)\boost\system\detail\throws.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\connect.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\detail\as_operation.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\start_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\operation_state.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\start.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\start_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\connect_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\connect_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\is_applicable_property.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\query_static_constexpr_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\static_query.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\any_executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\assert.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\cstddef.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\executor_function.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\handler_alloc_helpers.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\noncopyable.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\recycling_allocator.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\thread_context.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\call_stack.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\tss_ptr.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\null_tss_ptr.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\keyword_tss_ptr.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_tss_ptr.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\socket_types.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\old_win_sdk_compat.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_tss_ptr.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\throw_error.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\throw_error.ipp \
		$(BOOST_INCLDUE)\boost\system\system_error.hpp \
		$(BOOST_INCLDUE)\boost\asio\error.hpp \
		$(BOOST_INCLDUE)\boost\cerrno.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\error.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\posix_tss_ptr.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\posix_tss_ptr.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\thread_context.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\thread_info_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\multiple_exceptions.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\multiple_exceptions.ipp \
		$(BOOST_INCLDUE)\boost\asio\handler_alloc_hook.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\handler_alloc_hook.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\handler_invoke_helpers.hpp \
		$(BOOST_INCLDUE)\boost\asio\handler_invoke_hook.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\non_const_lvalue.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\scoped_ptr.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\bad_executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\impl\bad_executor.ipp \
		$(BOOST_INCLDUE)\boost\asio\execution\blocking.hpp \
		$(BOOST_INCLDUE)\boost\asio\prefer.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\prefer_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\prefer_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\require_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\require_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\static_require.hpp \
		$(BOOST_INCLDUE)\boost\asio\query.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\query_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\query_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\require.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\blocking_adaptation.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\event.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\null_event.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\null_event.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_event.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_event.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\posix_event.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\posix_event.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\std_event.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\null_mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\scoped_lock.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_mutex.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\posix_mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\posix_mutex.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\std_mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\bulk_execute.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\bulk_guarantee.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\detail\bulk_sender.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\bulk_execute_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\bulk_execute_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\context.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\context_as.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\mapping.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\occupancy.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\outstanding_work.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\prefer_only.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\relationship.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\submit.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution\detail\submit_receiver.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\submit_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\submit_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\system_executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\executor_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\fenced_block.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\null_fenced_block.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\std_fenced_block.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\macos_fenced_block.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\solaris_fenced_block.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\gcc_arm_fenced_block.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\gcc_hppa_fenced_block.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\gcc_x86_fenced_block.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\gcc_sync_fenced_block.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_fenced_block.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\scheduler_operation.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\handler_tracking.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\cstdint.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\static_mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\null_static_mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_static_mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_static_mutex.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\posix_static_mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\std_static_mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\handler_tracking.ipp \
		$(BOOST_INCLDUE)\boost\asio\time_traits.hpp \
		$(BOOST_INCLDUE)\boost\date_time\posix_time\posix_time_types.hpp \
		$(BOOST_INCLDUE)\boost\date_time\time_clock.hpp \
		$(BOOST_INCLDUE)\boost\date_time\c_time.hpp \
		$(BOOST_INCLDUE)\boost\date_time\compiler_config.hpp \
		$(BOOST_INCLDUE)\boost\date_time\locale_config.hpp \
		$(BOOST_INCLDUE)\boost\date_time\microsec_time_clock.hpp \
		$(BOOST_INCLDUE)\boost\winapi\time.hpp \
		$(BOOST_INCLDUE)\boost\date_time\posix_time\ptime.hpp \
		$(BOOST_INCLDUE)\boost\date_time\posix_time\posix_time_system.hpp \
		$(BOOST_INCLDUE)\boost\date_time\posix_time\posix_time_config.hpp \
		$(BOOST_INCLDUE)\boost\date_time\time_duration.hpp \
		$(BOOST_INCLDUE)\boost\date_time\special_defs.hpp \
		$(BOOST_INCLDUE)\boost\date_time\time_defs.hpp \
		$(BOOST_INCLDUE)\boost\operators.hpp \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\boost\operators_v1.hpp \
		$(BOOST_INCLDUE)\boost\date_time\time_resolution_traits.hpp \
		$(BOOST_INCLDUE)\boost\date_time\int_adapter.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\gregorian_types.hpp \
		$(BOOST_INCLDUE)\boost\date_time\date.hpp \
		$(BOOST_INCLDUE)\boost\date_time\year_month_day.hpp \
		$(BOOST_INCLDUE)\boost\date_time\period.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\greg_calendar.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\greg_weekday.hpp \
		$(BOOST_INCLDUE)\boost\date_time\constrained_value.hpp \
		$(BOOST_INCLDUE)\boost\date_time\date_defs.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\greg_day_of_year.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian_calendar.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian_calendar.ipp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\greg_ymd.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\greg_day.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\greg_year.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\greg_month.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\greg_duration.hpp \
		$(BOOST_INCLDUE)\boost\date_time\date_duration.hpp \
		$(BOOST_INCLDUE)\boost\date_time\date_duration_types.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\greg_duration_types.hpp \
		$(BOOST_INCLDUE)\boost\date_time\gregorian\greg_date.hpp \
		$(BOOST_INCLDUE)\boost\date_time\adjust_functors.hpp \
		$(BOOST_INCLDUE)\boost\date_time\wrapping_int.hpp \
		$(BOOST_INCLDUE)\boost\date_time\date_generators.hpp \
		$(BOOST_INCLDUE)\boost\date_time\date_clock_device.hpp \
		$(BOOST_INCLDUE)\boost\date_time\date_iterator.hpp \
		$(BOOST_INCLDUE)\boost\date_time\time_system_split.hpp \
		$(BOOST_INCLDUE)\boost\date_time\time_system_counted.hpp \
		$(BOOST_INCLDUE)\boost\date_time\time.hpp \
		$(BOOST_INCLDUE)\boost\date_time\posix_time\date_duration_operators.hpp \
		$(BOOST_INCLDUE)\boost\date_time\posix_time\posix_time_duration.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\cast.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\old_numeric_cast.hpp \
		$(BOOST_INCLDUE)\boost\type.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\converter_policies.hpp \
		$(BOOST_INCLDUE)\boost\mpl\if.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\value_wknd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\static_cast.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\workaround.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\integral.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\msvc.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\eti.hpp \
		$(BOOST_INCLDUE)\boost\mpl\int.hpp \
		$(BOOST_INCLDUE)\boost\mpl\int_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\adl_barrier.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\adl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\intel.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\gcc.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\nttp_decl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\nttp.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\integral_wrapper.hpp \
		$(BOOST_INCLDUE)\boost\mpl\integral_c_tag.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\static_constant.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\na_spec.hpp \
		$(BOOST_INCLDUE)\boost\mpl\lambda_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\void_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\na.hpp \
		$(BOOST_INCLDUE)\boost\mpl\bool.hpp \
		$(BOOST_INCLDUE)\boost\mpl\bool_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\na_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\ctps.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\lambda.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\ttp.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\lambda_arity_param.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\template_arity_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\arity.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\dtp.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\params.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\preprocessor.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\comma_if.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\enum.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\def_params_tail.hpp \
		$(BOOST_INCLDUE)\boost\mpl\limits\arity.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\logical\and.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\logical\bitand.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\identity.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\facilities\identity.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\empty.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\filter_params.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\sub.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\tuple.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\sub.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\while.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\fold_left.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\edg\fold_left.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\expr_iif.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\adt.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\detail\is_binary.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\detail\check.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\logical\compl.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\edg\limits\fold_left_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\edg\limits\fold_left_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\edg\limits\fold_left_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\dmc\fold_left.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\fold_left.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\limits\fold_left_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\limits\fold_left_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\limits\fold_left_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\limits\fold_left_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\limits\fold_left_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\limits\fold_left_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\fold_right.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\edg\fold_right.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\edg\limits\fold_right_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\edg\limits\fold_right_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\edg\limits\fold_right_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\fold_right.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\reverse.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\limits\fold_right_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\limits\fold_right_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\detail\limits\fold_right_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\detail\edg\while.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\detail\edg\limits\while_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\detail\edg\limits\while_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\detail\edg\limits\while_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\detail\msvc\while.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\detail\dmc\while.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\detail\while.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\detail\limits\while_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\detail\limits\while_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\detail\limits\while_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\limits\while_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\limits\while_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\limits\while_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\logical\bitor.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\detail\is_maximum_number.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\comparison\equal.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\comparison\not_equal.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\comparison\limits\not_equal_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\comparison\limits\not_equal_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\comparison\limits\not_equal_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\detail\maximum_number.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\detail\is_minimum_number.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\logical\not.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\add.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\overload_resolution.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\lambda_support.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\yes_no.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\arrays.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\tuple\to_list.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\tuple\limits\to_list_64.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\tuple\limits\to_list_128.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\tuple\limits\to_list_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\list\for_each_i.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\for.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\detail\edg\for.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\detail\edg\limits\for_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\detail\edg\limits\for_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\detail\edg\limits\for_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\detail\msvc\for.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\detail\dmc\for.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\detail\for.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\detail\limits\for_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\detail\limits\for_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\detail\limits\for_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\limits\for_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\limits\for_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\limits\for_1024.hpp \
		$(BOOST_INCLDUE)\boost\mpl\integral_c.hpp \
		$(BOOST_INCLDUE)\boost\mpl\integral_c_fwd.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\converter.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\conversion_traits.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\conversion_traits.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\meta.hpp \
		$(BOOST_INCLDUE)\boost\mpl\eval_if.hpp \
		$(BOOST_INCLDUE)\boost\mpl\equal_to.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\comparison_op.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\numeric_op.hpp \
		$(BOOST_INCLDUE)\boost\mpl\numeric_cast.hpp \
		$(BOOST_INCLDUE)\boost\mpl\apply_wrap.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\has_apply.hpp \
		$(BOOST_INCLDUE)\boost\mpl\has_xxx.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\type_wrapper.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\has_xxx.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\msvc_typename.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\has_apply.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\msvc_never_true.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\use_preprocessed.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\include_preprocessed.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\compiler.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\stringize.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\add.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\bcc.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\msvc_dtw.hpp \
		$(BOOST_INCLDUE)\boost\mpl\tag.hpp \
		$(BOOST_INCLDUE)\boost\mpl\void.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\has_tag.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\numeric_cast_utils.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\forwarding.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\msvc_eti_base.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\is_msvc_eti_arg.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\partial_spec_params.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\repeat.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\ext_params.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\dec.hpp \
		$(BOOST_INCLDUE)\boost\mpl\not.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\nested_type_wknd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\and.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\logical_op.hpp \
		$(BOOST_INCLDUE)\boost\mpl\identity.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\int_float_mixture.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\int_float_mixture_enum.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\sign_mixture.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\sign_mixture_enum.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\udt_builtin_mixture.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\udt_builtin_mixture_enum.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\is_subranged.hpp \
		$(BOOST_INCLDUE)\boost\mpl\multiplies.hpp \
		$(BOOST_INCLDUE)\boost\mpl\times.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\arithmetic_op.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\largest_int.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\default_params.hpp \
		$(BOOST_INCLDUE)\boost\mpl\less.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\converter.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\bounds.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\bounds.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\numeric_cast_traits.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\numeric_cast_traits.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\preprocessed\numeric_cast_traits_common.hpp \
		$(BOOST_INCLDUE)\boost\numeric\conversion\detail\preprocessed\numeric_cast_traits_long_long.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\elem.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\elem_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\elem_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\elem_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\size.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\size_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\size_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\size_1024.hpp \
		$(BOOST_INCLDUE)\boost\date_time\posix_time\time_period.hpp \
		$(BOOST_INCLDUE)\boost\date_time\time_iterator.hpp \
		$(BOOST_INCLDUE)\boost\date_time\dst_rules.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\chrono.hpp \
		$(BOOST_INCLDUE)\boost\chrono\system_clocks.hpp \
		$(BOOST_INCLDUE)\boost\chrono\config.hpp \
		$(BOOST_INCLDUE)\boost\predef.h \
		$(BOOST_INCLDUE)\boost\predef\language.h \
		$(BOOST_INCLDUE)\boost\predef\language\stdc.h \
		$(BOOST_INCLDUE)\boost\predef\language\stdcpp.h \
		$(BOOST_INCLDUE)\boost\predef\language\objc.h \
		$(BOOST_INCLDUE)\boost\predef\language\cuda.h \
		$(BOOST_INCLDUE)\boost\predef\architecture.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\alpha.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\arm.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\blackfin.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\convex.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\e2k.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\ia64.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\loongarch.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\m68k.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\mips.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\parisc.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\ppc.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\ptx.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\pyramid.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\riscv.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\rs6k.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\sparc.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\superh.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\sys370.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\sys390.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\x86.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\x86\32.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\x86\64.h \
		$(BOOST_INCLDUE)\boost\predef\architecture\z.h \
		$(BOOST_INCLDUE)\boost\predef\compiler.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\borland.h \
		$(BOOST_INCLDUE)\boost\predef\detail\comp_detected.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\clang.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\comeau.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\compaq.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\diab.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\digitalmars.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\dignus.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\edg.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\ekopath.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\gcc_xml.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\gcc.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\greenhills.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\hp_acc.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\iar.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\ibm.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\intel.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\kai.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\llvm.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\metaware.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\metrowerks.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\microtec.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\mpw.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\nvcc.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\palm.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\pgi.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\sgi_mipspro.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\sunpro.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\tendra.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\visualc.h \
		$(BOOST_INCLDUE)\boost\predef\compiler\watcom.h \
		$(BOOST_INCLDUE)\boost\predef\library.h \
		$(BOOST_INCLDUE)\boost\predef\library\c.h \
		$(BOOST_INCLDUE)\boost\predef\library\c\_prefix.h \
		$(BOOST_INCLDUE)\boost\predef\detail\_cassert.h \
		$(BOOST_INCLDUE)\boost\predef\library\c\cloudabi.h \
		$(BOOST_INCLDUE)\boost\predef\library\c\gnu.h \
		$(BOOST_INCLDUE)\boost\predef\library\c\uc.h \
		$(BOOST_INCLDUE)\boost\predef\library\c\vms.h \
		$(BOOST_INCLDUE)\boost\predef\library\c\zos.h \
		$(BOOST_INCLDUE)\boost\predef\library\std.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\_prefix.h \
		$(BOOST_INCLDUE)\boost\predef\detail\_exception.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\cxx.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\dinkumware.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\libcomo.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\modena.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\msl.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\roguewave.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\sgi.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\stdcpp3.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\stlport.h \
		$(BOOST_INCLDUE)\boost\predef\library\std\vacpp.h \
		$(BOOST_INCLDUE)\boost\predef\os.h \
		$(BOOST_INCLDUE)\boost\predef\os\aix.h \
		$(BOOST_INCLDUE)\boost\predef\os\amigaos.h \
		$(BOOST_INCLDUE)\boost\predef\os\beos.h \
		$(BOOST_INCLDUE)\boost\predef\os\bsd.h \
		$(BOOST_INCLDUE)\boost\predef\os\macos.h \
		$(BOOST_INCLDUE)\boost\predef\os\bsd\bsdi.h \
		$(BOOST_INCLDUE)\boost\predef\os\bsd\dragonfly.h \
		$(BOOST_INCLDUE)\boost\predef\os\bsd\free.h \
		$(BOOST_INCLDUE)\boost\predef\os\bsd\open.h \
		$(BOOST_INCLDUE)\boost\predef\os\bsd\net.h \
		$(BOOST_INCLDUE)\boost\predef\os\cygwin.h \
		$(BOOST_INCLDUE)\boost\predef\os\haiku.h \
		$(BOOST_INCLDUE)\boost\predef\os\hpux.h \
		$(BOOST_INCLDUE)\boost\predef\os\irix.h \
		$(BOOST_INCLDUE)\boost\predef\os\linux.h \
		$(BOOST_INCLDUE)\boost\predef\os\os400.h \
		$(BOOST_INCLDUE)\boost\predef\os\qnxnto.h \
		$(BOOST_INCLDUE)\boost\predef\os\solaris.h \
		$(BOOST_INCLDUE)\boost\predef\os\unix.h \
		$(BOOST_INCLDUE)\boost\predef\os\vms.h \
		$(BOOST_INCLDUE)\boost\predef\other.h \
		$(BOOST_INCLDUE)\boost\predef\other\endian.h \
		$(BOOST_INCLDUE)\boost\predef\other\wordsize.h \
		$(BOOST_INCLDUE)\boost\predef\other\workaround.h \
		$(BOOST_INCLDUE)\boost\predef\hardware.h \
		$(BOOST_INCLDUE)\boost\predef\hardware\simd.h \
		$(BOOST_INCLDUE)\boost\predef\hardware\simd\x86.h \
		$(BOOST_INCLDUE)\boost\predef\hardware\simd\x86\versions.h \
		$(BOOST_INCLDUE)\boost\predef\hardware\simd\x86_amd.h \
		$(BOOST_INCLDUE)\boost\predef\hardware\simd\x86_amd\versions.h \
		$(BOOST_INCLDUE)\boost\predef\hardware\simd\arm.h \
		$(BOOST_INCLDUE)\boost\predef\hardware\simd\arm\versions.h \
		$(BOOST_INCLDUE)\boost\predef\hardware\simd\ppc.h \
		$(BOOST_INCLDUE)\boost\predef\hardware\simd\ppc\versions.h \
		$(BOOST_INCLDUE)\boost\predef\version.h \
		$(BOOST_INCLDUE)\boost\config\auto_link.hpp \
		$(BOOST_INCLDUE)\boost\chrono\duration.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\static_assert.hpp \
		$(BOOST_INCLDUE)\boost\mpl\assert.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\gpu.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\pp_counter.hpp \
		$(BOOST_INCLDUE)\boost\mpl\logical.hpp \
		$(BOOST_INCLDUE)\boost\mpl\or.hpp \
		$(BOOST_INCLDUE)\boost\ratio\ratio.hpp \
		$(BOOST_INCLDUE)\boost\ratio\config.hpp \
		$(BOOST_INCLDUE)\boost\ratio\detail\mpl\abs.hpp \
		$(BOOST_INCLDUE)\boost\ratio\detail\mpl\sign.hpp \
		$(BOOST_INCLDUE)\boost\ratio\detail\mpl\gcd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\dependent_nttp.hpp \
		$(BOOST_INCLDUE)\boost\ratio\detail\mpl\lcm.hpp \
		$(BOOST_INCLDUE)\boost\ratio\ratio_fwd.hpp \
		$(BOOST_INCLDUE)\boost\ratio\detail\overflow_helpers.hpp \
		$(BOOST_INCLDUE)\boost\rational.hpp \
		$(BOOST_INCLDUE)\boost\call_traits.hpp \
		$(BOOST_INCLDUE)\boost\detail\call_traits.hpp \
		$(BOOST_INCLDUE)\boost\integer\common_factor_rt.hpp \
		$(BOOST_INCLDUE)\boost\ratio\mpl\rational_c_tag.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\common_type.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\common_type_impl.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\common_arithmetic_type.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\composite_pointer_type.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\copy_cv.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\composite_member_pointer_type.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\mp_defer.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\is_evenly_divisible_by.hpp \
		$(BOOST_INCLDUE)\boost\config\abi_prefix.hpp \
		$(BOOST_INCLDUE)\boost\config\abi_suffix.hpp \
		$(BOOST_INCLDUE)\boost\chrono\time_point.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\system.hpp \
		$(BOOST_INCLDUE)\boost\chrono\clock_string.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\inlined\chrono.hpp \
		$(BOOST_INCLDUE)\boost\chrono\chrono.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\inlined\win\chrono.hpp \
		$(BOOST_INCLDUE)\boost\winapi\timers.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\inlined\mac\chrono.hpp \
		$(BOOST_INCLDUE)\boost\chrono\detail\inlined\posix\chrono.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\chrono_time_traits.hpp \
		$(BOOST_INCLDUE)\boost\asio\wait_traits.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\op_queue.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\global.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\null_global.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_global.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\posix_global.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\std_global.hpp \
		$(BOOST_INCLDUE)\boost\asio\system_context.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\scheduler.hpp \
		$(BOOST_INCLDUE)\boost\asio\execution_context.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\execution_context.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\handler_type_requirements.hpp \
		$(BOOST_INCLDUE)\boost\asio\async_result.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\service_registry.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\service_registry.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\service_registry.ipp \
		$(BOOST_INCLDUE)\boost\asio\impl\execution_context.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\conditionally_enabled_event.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\conditionally_enabled_mutex.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\scheduler_task.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\thread.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\null_thread.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\posix_thread.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\posix_thread.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\wince_thread.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\winapp_thread.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_thread.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_thread.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\std_thread.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\scheduler.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\concurrency_hint.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\limits.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\scheduler_thread_info.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\signal_blocker.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\null_signal_blocker.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\posix_signal_blocker.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\buffer_sequence_adapter.hpp \
		$(BOOST_INCLDUE)\boost\asio\buffer.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\array_fwd.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\string_view.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\is_buffer_sequence.hpp \
		$(BOOST_INCLDUE)\boost\asio\registered_buffer.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\buffer_sequence_adapter.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_operation.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\operation.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_operation.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\object_pool.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\null_reactor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\epoll_reactor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactor_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\select_interrupter.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\socket_select_interrupter.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\socket_select_interrupter.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\socket_holder.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\socket_ops.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\socket_ops.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\eventfd_select_interrupter.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\eventfd_select_interrupter.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\pipe_select_interrupter.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\pipe_select_interrupter.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\timer_queue_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\timer_queue_set.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\timer_queue_set.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\wait_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\epoll_reactor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\epoll_reactor.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\kqueue_reactor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\kqueue_reactor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\kqueue_reactor.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\dev_poll_reactor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\hash_map.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactor_op_queue.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\dev_poll_reactor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\dev_poll_reactor.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\select_reactor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\fd_set_adapter.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\posix_fd_set_adapter.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_fd_set_adapter.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\select_reactor.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_io_context.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_thread_info.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_iocp_io_context.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\completion_handler.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\handler_work.hpp \
		$(BOOST_INCLDUE)\boost\asio\executor_work_guard.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_iocp_io_context.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\select_reactor.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\io_uring_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\io_uring_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\thread_group.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\system_context.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\system_context.ipp \
		$(BOOST_INCLDUE)\boost\asio\associated_cancellation_slot.hpp \
		$(BOOST_INCLDUE)\boost\asio\cancellation_signal.hpp \
		$(BOOST_INCLDUE)\boost\asio\cancellation_type.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\cancellation_signal.ipp \
		$(BOOST_INCLDUE)\boost\asio\awaitable.hpp \
		$(BOOST_INCLDUE)\boost\asio\any_io_executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\executor.ipp \
		$(BOOST_INCLDUE)\boost\asio\impl\any_io_executor.ipp \
		$(BOOST_INCLDUE)\boost\asio\impl\awaitable.hpp \
		$(BOOST_INCLDUE)\boost\asio\cancellation_state.hpp \
		$(BOOST_INCLDUE)\boost\asio\post.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\post.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\work_dispatcher.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\bind_handler.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\handler_cont_helpers.hpp \
		$(BOOST_INCLDUE)\boost\asio\handler_continuation_hook.hpp \
		$(BOOST_INCLDUE)\boost\asio\this_coro.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_datagram_socket.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_socket.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_object_impl.hpp \
		$(BOOST_INCLDUE)\boost\asio\io_context.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\wrapped_handler.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\winsock_init.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\winsock_init.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\signal_init.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\io_context.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\io_context.ipp \
		$(BOOST_INCLDUE)\boost\asio\io_context_strand.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\strand_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\strand_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\strand_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\socket_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_control.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\socket_option.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\null_socket_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_socket_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_null_buffers_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_socket_accept_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_socket_service_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_socket_connect_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_socket_send_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_socket_recv_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_socket_recvmsg_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_wait_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_iocp_socket_service_base.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_socket_recvfrom_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_socket_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_null_buffers_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_socket_accept_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_socket_connect_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_socket_recvfrom_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_socket_sendto_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_socket_service_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_socket_recv_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_socket_recvmsg_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_socket_send_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_wait_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\io_uring_socket_service_base.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_socket_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_null_buffers_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_socket_accept_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_socket_connect_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_socket_recvfrom_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_socket_sendto_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_socket_service_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_socket_recv_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_socket_recvmsg_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_socket_send_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_wait_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\reactive_socket_service_base.ipp \
		$(BOOST_INCLDUE)\boost\asio\basic_deadline_timer.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\deadline_timer_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\timer_queue.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\date_time_fwd.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\timer_queue_ptime.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\timer_queue_ptime.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\timer_scheduler.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\timer_scheduler_fwd.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\winrt_timer_scheduler.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\winrt_timer_scheduler.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\winrt_timer_scheduler.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\wait_handler.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_file.hpp \
		$(BOOST_INCLDUE)\boost\asio\file_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_file_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_handle_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_handle_read_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_handle_write_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_iocp_handle_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_iocp_file_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_file_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\descriptor_ops.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\descriptor_ops.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_descriptor_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_descriptor_read_at_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_descriptor_read_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_descriptor_write_at_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\io_uring_descriptor_write_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\posix\descriptor_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\io_uring_descriptor_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\io_uring_file_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\basic_io_object.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_random_access_file.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_raw_socket.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_readable_pipe.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\reactive_descriptor_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\descriptor_read_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\descriptor_write_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\reactive_descriptor_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\basic_seq_packet_socket.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_serial_port.hpp \
		$(BOOST_INCLDUE)\boost\asio\serial_port_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\serial_port_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\serial_port_base.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_serial_port_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_iocp_serial_port_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\detail\posix_serial_port_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\posix_serial_port_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\basic_signal_set.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\signal_set_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\signal_handler.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\signal_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\signal_set_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\basic_socket_acceptor.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_socket_iostream.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_socket_streambuf.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_stream_socket.hpp \
		$(BOOST_INCLDUE)\boost\asio\steady_timer.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_waitable_timer.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_stream_file.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_streambuf.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_streambuf_fwd.hpp \
		$(BOOST_INCLDUE)\boost\asio\basic_writable_pipe.hpp \
		$(BOOST_INCLDUE)\boost\asio\bind_allocator.hpp \
		$(BOOST_INCLDUE)\boost\asio\bind_cancellation_slot.hpp \
		$(BOOST_INCLDUE)\boost\asio\bind_executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\uses_executor.hpp \
		$(BOOST_INCLDUE)\boost\asio\buffer_registration.hpp \
		$(BOOST_INCLDUE)\boost\asio\buffered_read_stream_fwd.hpp \
		$(BOOST_INCLDUE)\boost\asio\buffered_read_stream.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\buffer_resize_guard.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\buffered_stream_storage.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\buffered_read_stream.hpp \
		$(BOOST_INCLDUE)\boost\asio\buffered_stream_fwd.hpp \
		$(BOOST_INCLDUE)\boost\asio\buffered_stream.hpp \
		$(BOOST_INCLDUE)\boost\asio\buffered_write_stream.hpp \
		$(BOOST_INCLDUE)\boost\asio\buffered_write_stream_fwd.hpp \
		$(BOOST_INCLDUE)\boost\asio\completion_condition.hpp \
		$(BOOST_INCLDUE)\boost\asio\write.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\write.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\base_from_cancellation_state.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\base_from_completion_cond.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\consuming_buffers.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\dependent_type.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\buffered_write_stream.hpp \
		$(BOOST_INCLDUE)\boost\asio\buffers_iterator.hpp \
		$(BOOST_INCLDUE)\boost\asio\co_spawn.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\co_spawn.hpp \
		$(BOOST_INCLDUE)\boost\asio\dispatch.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\dispatch.hpp \
		$(BOOST_INCLDUE)\boost\asio\use_awaitable.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\source_location.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\use_awaitable.hpp \
		$(BOOST_INCLDUE)\boost\asio\compose.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\compose.hpp \
		$(BOOST_INCLDUE)\boost\asio\connect.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\connect.hpp \
		$(BOOST_INCLDUE)\boost\asio\connect_pipe.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\connect_pipe.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\connect_pipe.ipp \
		$(BOOST_INCLDUE)\boost\asio\coroutine.hpp \
		$(BOOST_INCLDUE)\boost\asio\deadline_timer.hpp \
		$(BOOST_INCLDUE)\boost\asio\defer.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\defer.hpp \
		$(BOOST_INCLDUE)\boost\asio\detached.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\detached.hpp \
		$(BOOST_INCLDUE)\boost\asio\generic\basic_endpoint.hpp \
		$(BOOST_INCLDUE)\boost\asio\generic\detail\endpoint.hpp \
		$(BOOST_INCLDUE)\boost\asio\generic\detail\impl\endpoint.ipp \
		$(BOOST_INCLDUE)\boost\asio\generic\datagram_protocol.hpp \
		$(BOOST_INCLDUE)\boost\asio\generic\raw_protocol.hpp \
		$(BOOST_INCLDUE)\boost\asio\generic\seq_packet_protocol.hpp \
		$(BOOST_INCLDUE)\boost\asio\generic\stream_protocol.hpp \
		$(BOOST_INCLDUE)\boost\asio\high_resolution_timer.hpp \
		$(BOOST_INCLDUE)\boost\asio\io_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\io_service_strand.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\address.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\address_v4.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\array.hpp \
		$(BOOST_INCLDUE)\boost\array.hpp \
		$(BOOST_INCLDUE)\boost\swap.hpp \
		$(BOOST_INCLDUE)\boost\core\swap.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\address_v4.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\address_v4.ipp \
		$(BOOST_INCLDUE)\boost\asio\ip\address_v6.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\address_v6.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\address_v6.ipp \
		$(BOOST_INCLDUE)\boost\asio\ip\bad_address_cast.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\address.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\address.ipp \
		$(BOOST_INCLDUE)\boost\asio\ip\address_v4_iterator.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\address_v4_range.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\address_v6_iterator.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\address_v6_range.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\network_v4.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\network_v4.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\network_v4.ipp \
		$(BOOST_INCLDUE)\boost\asio\ip\network_v6.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\network_v6.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\network_v6.ipp \
		$(BOOST_INCLDUE)\boost\asio\ip\basic_endpoint.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\detail\endpoint.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\detail\impl\endpoint.ipp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\basic_endpoint.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\basic_resolver.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\basic_resolver_iterator.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\basic_resolver_entry.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\winrt_utils.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\basic_resolver_query.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\resolver_query_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\resolver_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\basic_resolver_results.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\winrt_resolver_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\winrt_async_manager.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\winrt_async_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\winrt_resolve_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\resolver_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\resolve_endpoint_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\resolve_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\resolve_query_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\resolver_service_base.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\resolver_service_base.ipp \
		$(BOOST_INCLDUE)\boost\asio\ip\host_name.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\impl\host_name.ipp \
		$(BOOST_INCLDUE)\boost\asio\ip\icmp.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\multicast.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\detail\socket_option.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\tcp.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\udp.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\unicast.hpp \
		$(BOOST_INCLDUE)\boost\asio\ip\v6_only.hpp \
		$(BOOST_INCLDUE)\boost\asio\is_read_buffered.hpp \
		$(BOOST_INCLDUE)\boost\asio\is_write_buffered.hpp \
		$(BOOST_INCLDUE)\boost\asio\local\basic_endpoint.hpp \
		$(BOOST_INCLDUE)\boost\asio\local\detail\endpoint.hpp \
		$(BOOST_INCLDUE)\boost\asio\local\detail\impl\endpoint.ipp \
		$(BOOST_INCLDUE)\boost\asio\local\connect_pair.hpp \
		$(BOOST_INCLDUE)\boost\asio\local\datagram_protocol.hpp \
		$(BOOST_INCLDUE)\boost\asio\local\stream_protocol.hpp \
		$(BOOST_INCLDUE)\boost\asio\packaged_task.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\future.hpp \
		$(BOOST_INCLDUE)\boost\asio\placeholders.hpp \
		$(BOOST_INCLDUE)\boost\bind\arg.hpp \
		$(BOOST_INCLDUE)\boost\is_placeholder.hpp \
		$(BOOST_INCLDUE)\boost\asio\posix\basic_descriptor.hpp \
		$(BOOST_INCLDUE)\boost\asio\posix\basic_stream_descriptor.hpp \
		$(BOOST_INCLDUE)\boost\asio\posix\descriptor.hpp \
		$(BOOST_INCLDUE)\boost\asio\posix\stream_descriptor.hpp \
		$(BOOST_INCLDUE)\boost\asio\random_access_file.hpp \
		$(BOOST_INCLDUE)\boost\asio\read.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\read.hpp \
		$(BOOST_INCLDUE)\boost\asio\read_at.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\read_at.hpp \
		$(BOOST_INCLDUE)\boost\asio\read_until.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\regex_fwd.hpp \
		$(BOOST_INCLDUE)\boost\regex_fwd.hpp \
		$(BOOST_INCLDUE)\boost\regex\config.hpp \
		$(BOOST_INCLDUE)\boost\regex\config\borland.hpp \
		$(BOOST_INCLDUE)\boost\regex\config\cwchar.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_fwd.hpp \
		$(BOOST_INCLDUE)\boost\regex.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_workaround.hpp \
		$(BOOST_INCLDUE)\boost\scoped_ptr.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\scoped_ptr.hpp \
		$(BOOST_INCLDUE)\boost\scoped_array.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\scoped_array.hpp \
		$(BOOST_INCLDUE)\boost\regex\regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\syntax_type.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\error_type.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_traits_defaults.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\make_unsigned.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\cpp_regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\pattern_except.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\pattern_except.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\pattern_except.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\error_type.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_traits_defaults.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\syntax_type.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_workaround.hpp \
		$(BOOST_INCLDUE)\boost\regex\pending\static_mutex.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\primary_transform.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\object_cache.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\c_regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\w32_regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\cpp_regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\primary_transform.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\object_cache.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\c_regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\w32_regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\match_flags.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_raw_buffer.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\char_regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\states.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regbase.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\iterator_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\basic_regex.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\basic_regex_creator.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\indexed_bit_flag.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\basic_regex_parser.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\sub_match.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_format.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\match_results.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\protected_call.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\perl_matcher.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\iterator_category.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\perl_matcher_recursive.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\perl_matcher_non_recursive.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\mem_block_cache.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\perl_matcher_common.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_match.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_search.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_iterator.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_token_iterator.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_grep.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_replace.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_merge.hpp \
		$(BOOST_INCLDUE)\boost\regex\v4\regex_split.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\match_flags.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_raw_buffer.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\char_regex_traits.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\states.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regbase.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\basic_regex.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\basic_regex_creator.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\basic_regex_parser.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\sub_match.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_format.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\match_results.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\perl_matcher.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\iterator_category.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\perl_matcher_non_recursive.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\mem_block_cache.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\perl_matcher_common.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_match.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_search.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_iterator.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_token_iterator.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_grep.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_replace.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_merge.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_split.hpp \
		$(BOOST_INCLDUE)\boost\regex\v5\regex_fwd.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\read_until.hpp \
		$(BOOST_INCLDUE)\boost\asio\readable_pipe.hpp \
		$(BOOST_INCLDUE)\boost\asio\recycling_allocator.hpp \
		$(BOOST_INCLDUE)\boost\asio\redirect_error.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\redirect_error.hpp \
		$(BOOST_INCLDUE)\boost\asio\require_concept.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\require_concept_member.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\require_concept_free.hpp \
		$(BOOST_INCLDUE)\boost\asio\traits\static_require_concept.hpp \
		$(BOOST_INCLDUE)\boost\asio\serial_port.hpp \
		$(BOOST_INCLDUE)\boost\asio\signal_set.hpp \
		$(BOOST_INCLDUE)\boost\asio\static_thread_pool.hpp \
		$(BOOST_INCLDUE)\boost\asio\thread_pool.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\thread_pool.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\blocking_executor_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\bulk_executor_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\thread_pool.ipp \
		$(BOOST_INCLDUE)\boost\asio\strand.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\strand_executor_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\strand_executor_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\strand_executor_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\stream_file.hpp \
		$(BOOST_INCLDUE)\boost\asio\streambuf.hpp \
		$(BOOST_INCLDUE)\boost\asio\system_timer.hpp \
		$(BOOST_INCLDUE)\boost\asio\use_future.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\use_future.hpp \
		$(BOOST_INCLDUE)\boost\asio\version.hpp \
		$(BOOST_INCLDUE)\boost\asio\windows\basic_object_handle.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_object_handle_service.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\impl\win_object_handle_service.ipp \
		$(BOOST_INCLDUE)\boost\asio\windows\basic_overlapped_handle.hpp \
		$(BOOST_INCLDUE)\boost\asio\windows\basic_random_access_handle.hpp \
		$(BOOST_INCLDUE)\boost\asio\windows\basic_stream_handle.hpp \
		$(BOOST_INCLDUE)\boost\asio\windows\object_handle.hpp \
		$(BOOST_INCLDUE)\boost\asio\windows\overlapped_handle.hpp \
		$(BOOST_INCLDUE)\boost\asio\windows\overlapped_ptr.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_overlapped_ptr.hpp \
		$(BOOST_INCLDUE)\boost\asio\detail\win_iocp_overlapped_op.hpp \
		$(BOOST_INCLDUE)\boost\asio\windows\random_access_handle.hpp \
		$(BOOST_INCLDUE)\boost\asio\windows\stream_handle.hpp \
		$(BOOST_INCLDUE)\boost\asio\writable_pipe.hpp \
		$(BOOST_INCLDUE)\boost\asio\write_at.hpp \
		$(BOOST_INCLDUE)\boost\asio\impl\write_at.hpp \
		..\ws_client\include\beast.h \
		$(BOOST_INCLDUE)\boost\beast.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\config.hpp \
		$(BOOST_INCLDUE)\boost\core\ignore_unused.hpp \
		$(BOOST_INCLDUE)\boost\beast\core.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\async_base.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\bind_handler.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\bind_handler.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\error.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\error.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\error.ipp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\tuple.hpp \
		$(BOOST_INCLDUE)\boost\mp11\integer_sequence.hpp \
		$(BOOST_INCLDUE)\boost\mp11\version.hpp \
		$(BOOST_INCLDUE)\boost\mp11\algorithm.hpp \
		$(BOOST_INCLDUE)\boost\mp11\list.hpp \
		$(BOOST_INCLDUE)\boost\mp11\integral.hpp \
		$(BOOST_INCLDUE)\boost\mp11\detail\mp_list.hpp \
		$(BOOST_INCLDUE)\boost\mp11\detail\mp_is_list.hpp \
		$(BOOST_INCLDUE)\boost\mp11\detail\mp_append.hpp \
		$(BOOST_INCLDUE)\boost\mp11\utility.hpp \
		$(BOOST_INCLDUE)\boost\mp11\detail\mp_fold.hpp \
		$(BOOST_INCLDUE)\boost\mp11\detail\config.hpp \
		$(BOOST_INCLDUE)\boost\mp11\detail\mp_front.hpp \
		$(BOOST_INCLDUE)\boost\mp11\detail\mp_rename.hpp \
		$(BOOST_INCLDUE)\boost\mp11\set.hpp \
		$(BOOST_INCLDUE)\boost\mp11\function.hpp \
		$(BOOST_INCLDUE)\boost\mp11\detail\mp_count.hpp \
		$(BOOST_INCLDUE)\boost\mp11\detail\mp_plus.hpp \
		$(BOOST_INCLDUE)\boost\mp11\detail\mp_min_element.hpp \
		$(BOOST_INCLDUE)\boost\mp11\detail\mp_void.hpp \
		$(BOOST_INCLDUE)\boost\mp11\detail\mp_copy_if.hpp \
		$(BOOST_INCLDUE)\boost\mp11\detail\mp_remove_if.hpp \
		$(BOOST_INCLDUE)\boost\mp11\detail\mp_map_find.hpp \
		$(BOOST_INCLDUE)\boost\mp11\detail\mp_with_index.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\allocator.hpp \
		$(BOOST_INCLDUE)\boost\container\allocator_traits.hpp \
		$(BOOST_INCLDUE)\boost\container\detail\config_begin.hpp \
		$(BOOST_INCLDUE)\boost\container\detail\workaround.hpp \
		$(BOOST_INCLDUE)\boost\container\container_fwd.hpp \
		$(BOOST_INCLDUE)\boost\container\detail\std_fwd.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\std_ns_begin.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\std_ns_end.hpp \
		$(BOOST_INCLDUE)\boost\container\detail\mpl.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\mpl.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\config_begin.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\config_end.hpp \
		$(BOOST_INCLDUE)\boost\container\detail\config_end.hpp \
		$(BOOST_INCLDUE)\boost\container\detail\type_traits.hpp \
		$(BOOST_INCLDUE)\boost\container\detail\placement_new.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\pointer_traits.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\workaround.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\pointer_rebind.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\pointer_element.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\fwd_macros.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\has_member_function_callable_with.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\async_base.hpp \
		$(BOOST_INCLDUE)\boost\core\exchange.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\work_guard.hpp \
		$(BOOST_INCLDUE)\boost\optional.hpp \
		$(BOOST_INCLDUE)\boost\optional\optional.hpp \
		$(BOOST_INCLDUE)\boost\core\explicit_operator_bool.hpp \
		$(BOOST_INCLDUE)\boost\optional\bad_optional_access.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_nothrow_constructor.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_trivial_constructor.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\remove_all_extents.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\remove_const.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_nothrow_move_assignable.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_trivial_move_assign.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_assignable.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_trivial_assign.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_nothrow_assign.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_nothrow_move_constructible.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_trivial_move_constructor.hpp \
		$(BOOST_INCLDUE)\boost\move\utility.hpp \
		$(BOOST_INCLDUE)\boost\move\traits.hpp \
		$(BOOST_INCLDUE)\boost\none.hpp \
		$(BOOST_INCLDUE)\boost\none_t.hpp \
		$(BOOST_INCLDUE)\boost\utility\compare_pointees.hpp \
		$(BOOST_INCLDUE)\boost\optional\optional_fwd.hpp \
		$(BOOST_INCLDUE)\boost\optional\detail\optional_config.hpp \
		$(BOOST_INCLDUE)\boost\optional\detail\optional_factory_support.hpp \
		$(BOOST_INCLDUE)\boost\optional\detail\optional_aligned_storage.hpp \
		$(BOOST_INCLDUE)\boost\optional\detail\old_optional_implementation.hpp \
		$(BOOST_INCLDUE)\boost\detail\reference_content.hpp \
		$(BOOST_INCLDUE)\boost\optional\detail\optional_trivially_copyable_base.hpp \
		$(BOOST_INCLDUE)\boost\optional\detail\optional_reference_spec.hpp \
		$(BOOST_INCLDUE)\boost\optional\detail\optional_relops.hpp \
		$(BOOST_INCLDUE)\boost\optional\detail\optional_swap.hpp \
		$(BOOST_INCLDUE)\boost\core\empty_value.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\async_base.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\basic_stream.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\stream_base.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\rate_policy.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\role.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\stream_traits.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\static_const.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\stream_traits.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\make_void.hpp \
		$(BOOST_INCLDUE)\boost\enable_shared_from_this.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\enable_shared_from_this.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\basic_stream.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\buffer_traits.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\buffer_traits.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\buffers_prefix.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\buffers_prefix.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\teardown.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\impl\teardown.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\bind_continuation.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\remap_post_to_defer.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\is_invocable.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\buffered_read_stream.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\multi_buffer.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\list.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\intrusive_fwd.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\link_mode.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\assert.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\list_hook.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\list_node.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\circular_list_algorithms.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\algo_type.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\options.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\pack_options.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\generic_hook.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\node_holder.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\get_value_traits.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\hook_traits.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\parent_from_member.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\to_raw_pointer.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\is_stateful_value_traits.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\function_detector.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\default_header_holder.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\reverse_iterator.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\reverse_iterator.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\iterator_traits.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\uncast.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\list_iterator.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\std_fwd.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\iiterator.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\iterator.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\array_initializer.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\placement_new.hpp \
		$(BOOST_INCLDUE)\boost\move\detail\force_ptr.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\exception_disposer.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\equal_to_value.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\key_nodeptr_comp.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\ebo_functor_holder.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\tree_value_compare.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\simple_disposers.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\size_holder.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\algorithm.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\value_functors.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\multi_buffer.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\buffered_read_stream.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\read_size.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\read_size.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\buffers_adaptor.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\buffers_adaptor.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\buffers_cat.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\type_traits.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\buffers_cat.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\variant.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\buffers_range.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\buffers_range_adaptor.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\buffers_suffix.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\buffers_suffix.hpp \
		$(BOOST_INCLDUE)\boost\type_traits.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\add_cv.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\conjunction.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\copy_cv_ref.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\copy_reference.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\disjunction.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\floating_point_promotion.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\function_traits.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_bit_and.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\has_binary_operator.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_fundamental.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\is_likely_lambda.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_bit_and_assign.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_bit_or.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_bit_or_assign.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_bit_xor.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_bit_xor_assign.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_complement.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\has_prefix_operator.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_dereference.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_divides.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_divides_assign.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_equal_to.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_greater.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_greater_equal.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_left_shift.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_left_shift_assign.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_less.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_less_equal.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_logical_and.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_logical_not.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_logical_or.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_minus.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_minus_assign.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_modulus.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_modulus_assign.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_multiplies.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_multiplies_assign.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_negate.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_new_operator.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_not_equal_to.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_plus.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_plus_assign.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_post_decrement.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\detail\has_postfix_operator.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_post_increment.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_pre_decrement.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_pre_increment.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_right_shift.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_right_shift_assign.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_unary_minus.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_unary_plus.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\has_virtual_destructor.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_complex.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_compound.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_copy_assignable.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_empty.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_final.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_float.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_list_constructible.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_member_object_pointer.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_nothrow_swappable.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_scoped_enum.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\negation.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_stateless.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_trivially_copyable.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_unscoped_enum.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\is_virtual_base_of.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\rank.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\remove_cv_ref.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\remove_volatile.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\integral_promotion.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\promote.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\buffers_to_string.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detect_ssl.hpp \
		$(BOOST_INCLDUE)\boost\logic\tribool.hpp \
		$(BOOST_INCLDUE)\boost\logic\tribool_fwd.hpp \
		$(BOOST_INCLDUE)\boost\asio\yield.hpp \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\boost\asio\coroutine.hpp \
		$(BOOST_INCLDUE)\boost\asio\unyield.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\file.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\file_base.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\file_posix.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\file_posix.ipp \
		$(BOOST_INCLDUE)\boost\beast\core\file_stdio.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\file_stdio.ipp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\win32_unicode_path.hpp \
		$(BOOST_INCLDUE)\boost\winapi\file_management.hpp \
		$(BOOST_INCLDUE)\boost\winapi\limits.hpp \
		$(BOOST_INCLDUE)\boost\winapi\overlapped.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\file_win32.hpp \
		$(BOOST_INCLDUE)\boost\winapi\handles.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\file_win32.ipp \
		$(BOOST_INCLDUE)\boost\winapi\access_rights.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\flat_buffer.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\flat_buffer.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\flat_static_buffer.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\flat_static_buffer.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\flat_static_buffer.ipp \
		$(BOOST_INCLDUE)\boost\beast\core\flat_stream.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\flat_stream.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\flat_stream.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\static_buffer.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\buffers_pair.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\static_buffer.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\static_buffer.ipp \
		$(BOOST_INCLDUE)\boost\beast\core\make_printable.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\ostream.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\ostream.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\saved_handler.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\saved_handler.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\saved_handler.ipp \
		$(BOOST_INCLDUE)\boost\beast\core\span.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\static_string.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\string.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\string_type.hpp \
		$(BOOST_INCLDUE)\boost\utility\string_view.hpp \
		$(BOOST_INCLDUE)\boost\io\ostream_put.hpp \
		$(BOOST_INCLDUE)\boost\io\detail\buffer_fill.hpp \
		$(BOOST_INCLDUE)\boost\io\detail\ostream_guard.hpp \
		$(BOOST_INCLDUE)\boost\utility\string_view_fwd.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\string.ipp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\string.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\static_string.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\impl\static_string.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\tcp_stream.hpp \
		$(BOOST_INCLDUE)\boost\beast\http.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\basic_dynamic_body.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\buffer.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\clamp.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\error.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\error.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\error.ipp \
		$(BOOST_INCLDUE)\boost\beast\http\message.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\fields.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\field.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\field.ipp \
		$(BOOST_INCLDUE)\boost\intrusive\set.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\rbtree.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\minimal_less_equal_header.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\minimal_pair_header.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\set_hook.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\rbtree_node.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\rbtree_algorithms.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\bstree_algorithms.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\bstree_algorithms_base.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\math.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\pointer_plus_bits.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\tree_node.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\bstree.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\bs_set_hook.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\tree_iterator.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\empty_node_checker.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\detail\node_cloner_disposer.hpp \
		$(BOOST_INCLDUE)\boost\intrusive\parent_from_member.hpp \
		$(BOOST_INCLDUE)\boost\move\adl_move_swap.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\fields.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\buffers_ref.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\temporary_buffer.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\impl\temporary_buffer.ipp \
		$(BOOST_INCLDUE)\boost\beast\http\verb.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\verb.ipp \
		$(BOOST_INCLDUE)\boost\beast\http\rfc7230.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\detail\rfc7230.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\detail\rfc7230.ipp \
		$(BOOST_INCLDUE)\boost\beast\http\detail\basic_parsed_list.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\rfc7230.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\rfc7230.ipp \
		$(BOOST_INCLDUE)\boost\beast\http\status.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\status.ipp \
		$(BOOST_INCLDUE)\boost\beast\http\chunk_encode.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\type_traits.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\detail\type_traits.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\detail\chunk_encode.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\chunk_encode.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\varint.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\fields.ipp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\message.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\basic_file_body.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\basic_parser.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\detail\basic_parser.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\char_buffer.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\detail\basic_parser.ipp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\basic_parser.hpp \
		$(BOOST_INCLDUE)\boost\make_unique.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\make_unique.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\basic_parser.ipp \
		$(BOOST_INCLDUE)\boost\beast\http\buffer_body.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\dynamic_body.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\empty_body.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\file_body.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\file_body_win32.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\write.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\serializer.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\serializer.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\write.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\parser.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\parser.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\read.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\impl\read.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\read.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\impl\read.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\span_body.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\string_body.hpp \
		$(BOOST_INCLDUE)\boost\beast\http\vector_body.hpp \
		$(BOOST_INCLDUE)\boost\beast\version.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\error.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\impl\error.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\impl\error.ipp \
		$(BOOST_INCLDUE)\boost\beast\websocket\option.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\rfc6455.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\impl\rfc6455.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\stream.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\stream_base.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\decorator.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\stream_fwd.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\hybi13.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\base64.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\base64.ipp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\hybi13.ipp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\sha1.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\sha1.ipp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\prng.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\prng.ipp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\chacha.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\pcg.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\impl_base.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\frame.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\utf8_checker.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\utf8_checker.ipp \
		$(BOOST_INCLDUE)\boost\endian\conversion.hpp \
		$(BOOST_INCLDUE)\boost\endian\detail\endian_reverse.hpp \
		$(BOOST_INCLDUE)\boost\endian\detail\integral_by_size.hpp \
		$(BOOST_INCLDUE)\boost\endian\detail\intrinsic.hpp \
		$(BOOST_INCLDUE)\boost\endian\detail\is_scoped_enum.hpp \
		$(BOOST_INCLDUE)\boost\endian\detail\endian_load.hpp \
		$(BOOST_INCLDUE)\boost\endian\detail\order.hpp \
		$(BOOST_INCLDUE)\boost\core\scoped_enum.hpp \
		$(BOOST_INCLDUE)\boost\endian\detail\is_trivially_copyable.hpp \
		$(BOOST_INCLDUE)\boost\endian\detail\endian_store.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\pmd_extension.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\pmd_extension.ipp \
		$(BOOST_INCLDUE)\boost\beast\zlib\deflate_stream.hpp \
		$(BOOST_INCLDUE)\boost\beast\zlib\error.hpp \
		$(BOOST_INCLDUE)\boost\beast\zlib\impl\error.hpp \
		$(BOOST_INCLDUE)\boost\beast\zlib\impl\error.ipp \
		$(BOOST_INCLDUE)\boost\beast\zlib\zlib.hpp \
		$(BOOST_INCLDUE)\boost\beast\zlib\detail\deflate_stream.hpp \
		$(BOOST_INCLDUE)\boost\beast\zlib\detail\ranges.hpp \
		$(BOOST_INCLDUE)\boost\beast\zlib\detail\deflate_stream.ipp \
		$(BOOST_INCLDUE)\boost\beast\zlib\inflate_stream.hpp \
		$(BOOST_INCLDUE)\boost\beast\zlib\detail\inflate_stream.hpp \
		$(BOOST_INCLDUE)\boost\beast\zlib\detail\bitstream.hpp \
		$(BOOST_INCLDUE)\boost\beast\zlib\detail\window.hpp \
		$(BOOST_INCLDUE)\boost\beast\zlib\detail\inflate_stream.ipp \
		$(BOOST_INCLDUE)\boost\beast\websocket\impl\stream_impl.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\mask.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\mask.ipp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\service.hpp \
		$(BOOST_INCLDUE)\boost\beast\core\detail\service_base.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\service.ipp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\soft_mutex.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\impl\accept.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\detail\type_traits.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\impl\close.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\impl\handshake.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\impl\ping.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\impl\read.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\impl\stream.hpp \
		$(BOOST_INCLDUE)\boost\beast\websocket\impl\write.hpp \
		$(BOOST_INCLDUE)\boost\beast\zlib.hpp \
		..\ws_client\include\ws_client.h \
		..\arcirk\include\arcirk.h \
		$(BOOST_INCLDUE)\boost\variant.hpp \
		$(BOOST_INCLDUE)\boost\variant\variant.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\config.hpp \
		$(BOOST_INCLDUE)\boost\variant\variant_fwd.hpp \
		$(BOOST_INCLDUE)\boost\blank_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\arg.hpp \
		$(BOOST_INCLDUE)\boost\mpl\arg_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\na_assert.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\arity_spec.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\arg_typedef.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\enum_shifted_params.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\substitute_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\template_arity.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\has_rebind.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\msvc_is_class.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\preprocessor\range.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\subseq.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\first_n.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\detail\split.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\detail\limits\split_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\detail\limits\split_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\detail\limits\split_1024.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\rest_n.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\detail\is_empty.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\fold_left.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\seq.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\fold_left_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\fold_left_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\fold_left_1024.hpp \
		$(BOOST_INCLDUE)\boost\mpl\limits\list.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\backup_holder.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\enable_recursive_fwd.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\forced_return.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\initializer.hpp \
		$(BOOST_INCLDUE)\boost\variant\recursive_wrapper_fwd.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\move.hpp \
		$(BOOST_INCLDUE)\boost\mpl\iter_fold.hpp \
		$(BOOST_INCLDUE)\boost\mpl\begin_end.hpp \
		$(BOOST_INCLDUE)\boost\mpl\begin_end_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\begin_end_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\sequence_tag_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\has_begin.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\traits_lambda_spec.hpp \
		$(BOOST_INCLDUE)\boost\mpl\sequence_tag.hpp \
		$(BOOST_INCLDUE)\boost\mpl\O1_size.hpp \
		$(BOOST_INCLDUE)\boost\mpl\O1_size_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\O1_size_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\long.hpp \
		$(BOOST_INCLDUE)\boost\mpl\long_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\has_size.hpp \
		$(BOOST_INCLDUE)\boost\mpl\lambda.hpp \
		$(BOOST_INCLDUE)\boost\mpl\bind.hpp \
		$(BOOST_INCLDUE)\boost\mpl\bind_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\bind.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\dmc_ambiguous_ctps.hpp \
		$(BOOST_INCLDUE)\boost\mpl\placeholders.hpp \
		$(BOOST_INCLDUE)\boost\mpl\next.hpp \
		$(BOOST_INCLDUE)\boost\mpl\next_prior.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\common_name_wknd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\protect.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\count_args.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\expr_if.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\expr_if.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\full_lambda.hpp \
		$(BOOST_INCLDUE)\boost\mpl\quote.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\has_type.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\lambda_no_ctps.hpp \
		$(BOOST_INCLDUE)\boost\mpl\is_placeholder.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\iter_fold_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\apply.hpp \
		$(BOOST_INCLDUE)\boost\mpl\apply_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\fold_impl_body.hpp \
		$(BOOST_INCLDUE)\boost\mpl\limits\unrolling.hpp \
		$(BOOST_INCLDUE)\boost\mpl\deref.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\msvc_type.hpp \
		$(BOOST_INCLDUE)\boost\mpl\pair.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\make_variant_list.hpp \
		$(BOOST_INCLDUE)\boost\mpl\list.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\sequence_wrapper.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\enum_params_with_a_default.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\enum_params_with_a_default.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\over_sequence.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\visitation_impl.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\cast_storage.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\hash_variant.hpp \
		$(BOOST_INCLDUE)\boost\variant\static_visitor.hpp \
		$(BOOST_INCLDUE)\boost\variant\apply_visitor.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\apply_visitor_unary.hpp \
		$(BOOST_INCLDUE)\boost\mpl\distance.hpp \
		$(BOOST_INCLDUE)\boost\mpl\distance_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\iterator_range.hpp \
		$(BOOST_INCLDUE)\boost\mpl\advance.hpp \
		$(BOOST_INCLDUE)\boost\mpl\advance_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\negate.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\advance_forward.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\advance_backward.hpp \
		$(BOOST_INCLDUE)\boost\mpl\prior.hpp \
		$(BOOST_INCLDUE)\boost\mpl\size.hpp \
		$(BOOST_INCLDUE)\boost\mpl\size_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\size_impl.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\has_result_type.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\apply_visitor_binary.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\apply_visitor_delayed.hpp \
		$(BOOST_INCLDUE)\boost\functional\hash_fwd.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\std_hash.hpp \
		$(BOOST_INCLDUE)\boost\blank.hpp \
		$(BOOST_INCLDUE)\boost\detail\templated_streams.hpp \
		$(BOOST_INCLDUE)\boost\integer\common_factor_ct.hpp \
		$(BOOST_INCLDUE)\boost\mpl\empty.hpp \
		$(BOOST_INCLDUE)\boost\mpl\empty_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\empty_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\find_if.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\find_if_pred.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\iter_apply.hpp \
		$(BOOST_INCLDUE)\boost\mpl\iter_fold_if.hpp \
		$(BOOST_INCLDUE)\boost\mpl\always.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\iter_fold_if_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\fold.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\fold_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\front.hpp \
		$(BOOST_INCLDUE)\boost\mpl\front_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\front_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\insert_range.hpp \
		$(BOOST_INCLDUE)\boost\mpl\insert_range_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\insert_range_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\insert.hpp \
		$(BOOST_INCLDUE)\boost\mpl\insert_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\insert_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\reverse_fold.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\reverse_fold_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\reverse_fold_impl_body.hpp \
		$(BOOST_INCLDUE)\boost\mpl\clear.hpp \
		$(BOOST_INCLDUE)\boost\mpl\clear_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\clear_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\push_front.hpp \
		$(BOOST_INCLDUE)\boost\mpl\push_front_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\push_front_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\joint_view.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\joint_iter.hpp \
		$(BOOST_INCLDUE)\boost\mpl\iterator_tags.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\lambda_spec.hpp \
		$(BOOST_INCLDUE)\boost\mpl\plus.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\iter_push_front.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\same_traits.hpp \
		$(BOOST_INCLDUE)\boost\mpl\is_sequence.hpp \
		$(BOOST_INCLDUE)\boost\mpl\max_element.hpp \
		$(BOOST_INCLDUE)\boost\mpl\same_as.hpp \
		$(BOOST_INCLDUE)\boost\mpl\size_t.hpp \
		$(BOOST_INCLDUE)\boost\mpl\size_t_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\sizeof.hpp \
		$(BOOST_INCLDUE)\boost\mpl\transform.hpp \
		$(BOOST_INCLDUE)\boost\mpl\pair_view.hpp \
		$(BOOST_INCLDUE)\boost\mpl\iterator_category.hpp \
		$(BOOST_INCLDUE)\boost\mpl\min_max.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\inserter_algorithm.hpp \
		$(BOOST_INCLDUE)\boost\mpl\back_inserter.hpp \
		$(BOOST_INCLDUE)\boost\mpl\push_back.hpp \
		$(BOOST_INCLDUE)\boost\mpl\push_back_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\push_back_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\inserter.hpp \
		$(BOOST_INCLDUE)\boost\mpl\front_inserter.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\variant_io.hpp \
		$(BOOST_INCLDUE)\boost\variant\recursive_variant.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\enable_recursive.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\substitute.hpp \
		$(BOOST_INCLDUE)\boost\variant\recursive_wrapper.hpp \
		$(BOOST_INCLDUE)\boost\mpl\equal.hpp \
		$(BOOST_INCLDUE)\boost\variant\get.hpp \
		$(BOOST_INCLDUE)\boost\variant\detail\element_index.hpp \
		$(BOOST_INCLDUE)\boost\variant\visitor_ptr.hpp \
		$(BOOST_INCLDUE)\boost\variant\bad_visit.hpp \
		$(BOOST_INCLDUE)\boost\exception\all.hpp \
		$(BOOST_INCLDUE)\boost\exception\diagnostic_information.hpp \
		$(BOOST_INCLDUE)\boost\exception\get_error_info.hpp \
		$(BOOST_INCLDUE)\boost\exception\detail\error_info_impl.hpp \
		$(BOOST_INCLDUE)\boost\exception\detail\type_info.hpp \
		$(BOOST_INCLDUE)\boost\exception\detail\shared_ptr.hpp \
		$(BOOST_INCLDUE)\boost\exception\info.hpp \
		$(BOOST_INCLDUE)\boost\exception\to_string_stub.hpp \
		$(BOOST_INCLDUE)\boost\exception\to_string.hpp \
		$(BOOST_INCLDUE)\boost\exception\detail\is_output_streamable.hpp \
		$(BOOST_INCLDUE)\boost\exception\detail\object_hex_dump.hpp \
		$(BOOST_INCLDUE)\boost\exception\current_exception_cast.hpp \
		$(BOOST_INCLDUE)\boost\exception\error_info.hpp \
		$(BOOST_INCLDUE)\boost\exception\info_tuple.hpp \
		$(BOOST_INCLDUE)\boost\tuple\tuple.hpp \
		$(BOOST_INCLDUE)\boost\tuple\detail\tuple_basic.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\cv_traits.hpp \
		$(BOOST_INCLDUE)\boost\utility\swap.hpp \
		$(BOOST_INCLDUE)\boost\exception\errinfo_api_function.hpp \
		$(BOOST_INCLDUE)\boost\exception\errinfo_at_line.hpp \
		$(BOOST_INCLDUE)\boost\exception\errinfo_errno.hpp \
		$(BOOST_INCLDUE)\boost\exception\errinfo_file_handle.hpp \
		$(BOOST_INCLDUE)\boost\exception\errinfo_file_name.hpp \
		$(BOOST_INCLDUE)\boost\exception\errinfo_file_open_mode.hpp \
		$(BOOST_INCLDUE)\boost\exception\errinfo_type_info_name.hpp \
		$(BOOST_INCLDUE)\boost\exception\errinfo_nested_exception.hpp \
		$(BOOST_INCLDUE)\boost\exception_ptr.hpp \
		$(BOOST_INCLDUE)\boost\exception\detail\exception_ptr.hpp \
		$(BOOST_INCLDUE)\boost\exception\detail\clone_current_exception.hpp \
		$(BOOST_INCLDUE)\boost\uuid\uuid.hpp \
		$(BOOST_INCLDUE)\boost\uuid\detail\config.hpp \
		$(BOOST_INCLDUE)\boost\uuid\detail\uuid_x86.ipp \
		$(BOOST_INCLDUE)\boost\uuid\detail\uuid_generic.ipp \
		$(BOOST_INCLDUE)\boost\uuid\uuid_generators.hpp \
		$(BOOST_INCLDUE)\boost\uuid\nil_generator.hpp \
		$(BOOST_INCLDUE)\boost\uuid\string_generator.hpp \
		$(BOOST_INCLDUE)\boost\uuid\name_generator.hpp \
		$(BOOST_INCLDUE)\boost\uuid\name_generator_sha1.hpp \
		$(BOOST_INCLDUE)\boost\uuid\basic_name_generator.hpp \
		$(BOOST_INCLDUE)\boost\uuid\detail\sha1.hpp \
		$(BOOST_INCLDUE)\boost\uuid\random_generator.hpp \
		$(BOOST_INCLDUE)\boost\random\mersenne_twister.hpp \
		$(BOOST_INCLDUE)\boost\integer\integer_mask.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\config.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\ptr_helper.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\seed.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\seed_impl.hpp \
		$(BOOST_INCLDUE)\boost\random\traits.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\const_mod.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\large_arithmetic.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\integer_log2.hpp \
		$(BOOST_INCLDUE)\boost\integer\integer_log2.hpp \
		$(BOOST_INCLDUE)\boost\core\bit.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\disable_warnings.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\enable_warnings.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\signed_unsigned_tools.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\generator_bits.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\generator_seed_seq.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\polynomial.hpp \
		$(BOOST_INCLDUE)\boost\random\uniform_int.hpp \
		$(BOOST_INCLDUE)\boost\random\uniform_int_distribution.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\operators.hpp \
		$(BOOST_INCLDUE)\boost\random\detail\uniform_int_float.hpp \
		$(BOOST_INCLDUE)\boost\random\variate_generator.hpp \
		$(BOOST_INCLDUE)\boost\tti\has_member_function.hpp \
		$(BOOST_INCLDUE)\boost\function_types\property_tags.hpp \
		$(BOOST_INCLDUE)\boost\mpl\bitxor.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\pp_tags\preprocessed.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\pp_loop.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\punctuation\paren.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\encoding\def.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\encoding\aliases_def.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\encoding\aliases_undef.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\encoding\undef.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector.hpp \
		$(BOOST_INCLDUE)\boost\mpl\limits\vector.hpp \
		$(BOOST_INCLDUE)\boost\tti\detail\ddeftype.hpp \
		$(BOOST_INCLDUE)\boost\tti\detail\dmem_fun.hpp \
		$(BOOST_INCLDUE)\boost\function_types\is_member_function_pointer.hpp \
		$(BOOST_INCLDUE)\boost\function_types\components.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\vector0.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\at.hpp \
		$(BOOST_INCLDUE)\boost\mpl\at_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\tag.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\typeof.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\front.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\push_front.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\item.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\pop_front.hpp \
		$(BOOST_INCLDUE)\boost\mpl\pop_front_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\push_back.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\pop_back.hpp \
		$(BOOST_INCLDUE)\boost\mpl\pop_back_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\back.hpp \
		$(BOOST_INCLDUE)\boost\mpl\back_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\clear.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\vector0.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\iterator.hpp \
		$(BOOST_INCLDUE)\boost\mpl\minus.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\O1_size.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\size.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\empty.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\begin_end.hpp \
		$(BOOST_INCLDUE)\boost\mpl\bitand.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\vector10.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\aux_\include_preprocessed.hpp \
		$(BOOST_INCLDUE)\boost\mpl\begin.hpp \
		$(BOOST_INCLDUE)\boost\mpl\copy.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\classifier.hpp \
		$(BOOST_INCLDUE)\boost\function_types\config\config.hpp \
		$(BOOST_INCLDUE)\boost\function_types\config\compiler.hpp \
		$(BOOST_INCLDUE)\boost\function_types\config\cc_names.hpp \
		$(BOOST_INCLDUE)\boost\mpl\remove.hpp \
		$(BOOST_INCLDUE)\boost\mpl\remove_if.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\vector20.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\vector30.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\vector40.hpp \
		$(BOOST_INCLDUE)\boost\mpl\vector\vector50.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\class_transform.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\components_as_mpl_sequence.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\retag_default_cc.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\pp_retag_default_cc\master.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\iteration\self.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\pp_retag_default_cc\preprocessed.hpp \
		$(BOOST_INCLDUE)\boost\tti\detail\dcomp_mem_fun.hpp \
		$(BOOST_INCLDUE)\boost\tti\detail\dftclass.hpp \
		$(BOOST_INCLDUE)\boost\function_types\parameter_types.hpp \
		$(BOOST_INCLDUE)\boost\mpl\pop_front.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\pop_front_impl.hpp \
		$(BOOST_INCLDUE)\boost\function_types\is_callable_builtin.hpp \
		$(BOOST_INCLDUE)\boost\mpl\at.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\at_impl.hpp \
		$(BOOST_INCLDUE)\boost\tti\detail\dmacro_sunfix.hpp \
		$(BOOST_INCLDUE)\boost\tti\detail\dnullptr.hpp \
		$(BOOST_INCLDUE)\boost\tti\gen\namespace_gen.hpp \
		$(BOOST_INCLDUE)\boost\tti\detail\denclosing_type.hpp \
		$(BOOST_INCLDUE)\boost\tti\detail\dptmf.hpp \
		$(BOOST_INCLDUE)\boost\function_types\member_function_pointer.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\synthesize.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\cv_traits.hpp \
		$(BOOST_INCLDUE)\boost\function_types\detail\to_sequence.hpp \
		$(BOOST_INCLDUE)\boost\tti\gen\has_member_function_gen.hpp \
		$(BOOST_INCLDUE)\boost\uuid\detail\random_provider.hpp \
		$(BOOST_INCLDUE)\boost\uuid\entropy_error.hpp \
		$(BOOST_INCLDUE)\boost\uuid\detail\random_provider_detect_platform.hpp \
		$(BOOST_INCLDUE)\boost\uuid\detail\random_provider_include_platform.hpp \
		$(BOOST_INCLDUE)\boost\uuid\detail\random_provider_arc4random.ipp \
		$(BOOST_INCLDUE)\boost\uuid\detail\random_provider_bcrypt.ipp \
		$(BOOST_INCLDUE)\boost\winapi\bcrypt.hpp \
		$(BOOST_INCLDUE)\boost\uuid\detail\random_provider_getentropy.ipp \
		$(BOOST_INCLDUE)\boost\uuid\detail\random_provider_getrandom.ipp \
		$(BOOST_INCLDUE)\boost\uuid\detail\random_provider_posix.ipp \
		$(BOOST_INCLDUE)\boost\uuid\detail\random_provider_wincrypt.ipp \
		$(BOOST_INCLDUE)\boost\winapi\crypt.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast.hpp \
		$(BOOST_INCLDUE)\boost\range\iterator_range_core.hpp \
		$(BOOST_INCLDUE)\boost\iterator\iterator_traits.hpp \
		$(BOOST_INCLDUE)\boost\iterator\iterator_facade.hpp \
		$(BOOST_INCLDUE)\boost\iterator\interoperable.hpp \
		$(BOOST_INCLDUE)\boost\iterator\detail\config_def.hpp \
		$(BOOST_INCLDUE)\boost\iterator\detail\config_undef.hpp \
		$(BOOST_INCLDUE)\boost\iterator\iterator_categories.hpp \
		$(BOOST_INCLDUE)\boost\iterator\detail\facade_iterator_category.hpp \
		$(BOOST_INCLDUE)\boost\core\use_default.hpp \
		$(BOOST_INCLDUE)\boost\detail\indirect_traits.hpp \
		$(BOOST_INCLDUE)\boost\detail\select_type.hpp \
		$(BOOST_INCLDUE)\boost\iterator\detail\enable_if.hpp \
		$(BOOST_INCLDUE)\boost\range\functions.hpp \
		$(BOOST_INCLDUE)\boost\range\begin.hpp \
		$(BOOST_INCLDUE)\boost\range\config.hpp \
		$(BOOST_INCLDUE)\boost\range\iterator.hpp \
		$(BOOST_INCLDUE)\boost\range\range_fwd.hpp \
		$(BOOST_INCLDUE)\boost\range\mutable_iterator.hpp \
		$(BOOST_INCLDUE)\boost\range\detail\extract_optional_type.hpp \
		$(BOOST_INCLDUE)\boost\range\detail\msvc_has_iterator_workaround.hpp \
		$(BOOST_INCLDUE)\boost\range\const_iterator.hpp \
		$(BOOST_INCLDUE)\boost\range\end.hpp \
		$(BOOST_INCLDUE)\boost\range\detail\implementation_help.hpp \
		$(BOOST_INCLDUE)\boost\range\detail\common.hpp \
		$(BOOST_INCLDUE)\boost\range\detail\sfinae.hpp \
		$(BOOST_INCLDUE)\boost\range\size.hpp \
		$(BOOST_INCLDUE)\boost\range\size_type.hpp \
		$(BOOST_INCLDUE)\boost\range\difference_type.hpp \
		$(BOOST_INCLDUE)\boost\range\has_range_iterator.hpp \
		$(BOOST_INCLDUE)\boost\range\concepts.hpp \
		$(BOOST_INCLDUE)\boost\concept_check.hpp \
		$(BOOST_INCLDUE)\boost\concept\assert.hpp \
		$(BOOST_INCLDUE)\boost\concept\detail\msvc.hpp \
		$(BOOST_INCLDUE)\boost\concept\detail\backward_compatibility.hpp \
		$(BOOST_INCLDUE)\boost\concept\detail\has_constraints.hpp \
		$(BOOST_INCLDUE)\boost\concept\detail\borland.hpp \
		$(BOOST_INCLDUE)\boost\concept\detail\general.hpp \
		$(BOOST_INCLDUE)\boost\type_traits\conversion_traits.hpp \
		$(BOOST_INCLDUE)\boost\concept\usage.hpp \
		$(BOOST_INCLDUE)\boost\concept\detail\concept_def.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\for_each_i.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\enum.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\enum_256.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\enum_512.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\limits\enum_1024.hpp \
		$(BOOST_INCLDUE)\boost\concept\detail\concept_undef.hpp \
		$(BOOST_INCLDUE)\boost\iterator\iterator_concepts.hpp \
		$(BOOST_INCLDUE)\boost\range\value_type.hpp \
		$(BOOST_INCLDUE)\boost\range\detail\misc_concept.hpp \
		$(BOOST_INCLDUE)\boost\range\detail\has_member_size.hpp \
		$(BOOST_INCLDUE)\boost\utility.hpp \
		$(BOOST_INCLDUE)\boost\utility\base_from_member.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\repetition\repeat_from_to.hpp \
		$(BOOST_INCLDUE)\boost\utility\binary.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\control\deduce_d.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\cat.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\seq\transform.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\mod.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\detail\div_base.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\comparison\less_equal.hpp \
		$(BOOST_INCLDUE)\boost\preprocessor\arithmetic\detail\is_1_number.hpp \
		$(BOOST_INCLDUE)\boost\utility\identity_type.hpp \
		$(BOOST_INCLDUE)\boost\core\noncopyable.hpp \
		$(BOOST_INCLDUE)\boost\range\distance.hpp \
		$(BOOST_INCLDUE)\boost\iterator\distance.hpp \
		$(BOOST_INCLDUE)\boost\range\empty.hpp \
		$(BOOST_INCLDUE)\boost\range\rbegin.hpp \
		$(BOOST_INCLDUE)\boost\range\reverse_iterator.hpp \
		$(BOOST_INCLDUE)\boost\iterator\reverse_iterator.hpp \
		$(BOOST_INCLDUE)\boost\iterator\iterator_adaptor.hpp \
		$(BOOST_INCLDUE)\boost\range\rend.hpp \
		$(BOOST_INCLDUE)\boost\range\algorithm\equal.hpp \
		$(BOOST_INCLDUE)\boost\range\detail\safe_bool.hpp \
		$(BOOST_INCLDUE)\boost\next_prior.hpp \
		$(BOOST_INCLDUE)\boost\iterator\advance.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast\bad_lexical_cast.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast\try_lexical_convert.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast\detail\is_character.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast\detail\converter_numeric.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast\detail\converter_lexical.hpp \
		$(BOOST_INCLDUE)\boost\detail\lcast_precision.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast\detail\widest_char.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast\detail\converter_lexical_streams.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast\detail\lcast_char_constants.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast\detail\lcast_unsigned_converters.hpp \
		$(BOOST_INCLDUE)\boost\noncopyable.hpp \
		$(BOOST_INCLDUE)\boost\lexical_cast\detail\inf_nan.hpp \
		$(BOOST_INCLDUE)\boost\core\cmath.hpp \
		$(BOOST_INCLDUE)\boost\detail\basic_pointerbuf.hpp \
		$(BOOST_INCLDUE)\boost\uuid\uuid_io.hpp \
		$(BOOST_INCLDUE)\boost\io\ios_state.hpp \
		$(BOOST_INCLDUE)\boost\io_fwd.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\std_containers_traits.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\std\string_traits.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\yes_no_type.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\sequence_traits.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\std\list_traits.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\std\slist_traits.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\config.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\trim.hpp \
		$(BOOST_INCLDUE)\boost\range\as_literal.hpp \
		$(BOOST_INCLDUE)\boost\range\iterator_range.hpp \
		$(BOOST_INCLDUE)\boost\range\iterator_range_io.hpp \
		$(BOOST_INCLDUE)\boost\range\detail\str_types.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\trim.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\classification.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\classification.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\predicate_facade.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\case_conv.hpp \
		$(BOOST_INCLDUE)\boost\iterator\transform_iterator.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\case_conv.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\predicate.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\compare.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\find.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\finder.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\constants.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\finder.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\predicate.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\split.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\iter_find.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\concept.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\find_iterator.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\find_iterator.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\util.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\join.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\sequence.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\replace.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\find_format.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\find_format.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\find_format_store.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\replace_storage.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\find_format_all.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\formatter.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\detail\formatter.hpp \
		$(BOOST_INCLDUE)\boost\algorithm\string\erase.hpp \
		$(BOOST_INCLDUE)\boost\archive\iterators\base64_from_binary.hpp \
		$(BOOST_INCLDUE)\boost\archive\iterators\dataflow_exception.hpp \
		$(BOOST_INCLDUE)\boost\archive\iterators\transform_width.hpp \
		$(BOOST_INCLDUE)\boost\archive\iterators\binary_from_base64.hpp \
		$(BOOST_INCLDUE)\boost\serialization\throw_exception.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\ptree.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\ptree_fwd.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\string_path.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\id_translator.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\exceptions.hpp \
		$(BOOST_INCLDUE)\boost\any.hpp \
		$(BOOST_INCLDUE)\boost\any\bad_any_cast.hpp \
		$(BOOST_INCLDUE)\boost\any\fwd.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\detail\exception_implementation.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\detail\ptree_utils.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\stream_translator.hpp \
		$(BOOST_INCLDUE)\boost\optional\optional_io.hpp \
		$(BOOST_INCLDUE)\boost\multi_index_container.hpp \
		$(BOOST_INCLDUE)\boost\mpl\contains.hpp \
		$(BOOST_INCLDUE)\boost\mpl\contains_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\contains_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\find.hpp \
		$(BOOST_INCLDUE)\boost\multi_index_container_fwd.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\identity.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\identity_fwd.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\indexed_by.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\ordered_index_fwd.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\ord_index_args.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\tag.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\no_duplicate_tags.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\set0.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\at_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\has_key_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\tag.hpp \
		$(BOOST_INCLDUE)\boost\mpl\has_key_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\overload_names.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\ptr_to_ref.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\config\operators.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\clear_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\set0.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\size_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\empty_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\insert_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\item.hpp \
		$(BOOST_INCLDUE)\boost\mpl\base.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\insert_range_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\erase_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\erase_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\erase_key_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\erase_key_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\key_type_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\key_type_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\value_type_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\value_type_fwd.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\begin_end_impl.hpp \
		$(BOOST_INCLDUE)\boost\mpl\set\aux_\iterator.hpp \
		$(BOOST_INCLDUE)\boost\mpl\has_key.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\has_key_impl.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\ord_index_impl_fwd.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\access_specifier.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\adl_swap.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\allocator_traits.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\vartempl_support.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\base_type.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\index_base.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\copy_map.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\auto_space.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\raw_ptr.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\do_not_copy_elements_tag.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\index_access_sequence.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\node_handle.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\define_if_constexpr_macro.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\ignore_wstrict_aliasing.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\restore_wstrict_aliasing.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\undef_if_constexpr_macro.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\node_type.hpp \
		$(BOOST_INCLDUE)\boost\mpl\reverse_iter_fold.hpp \
		$(BOOST_INCLDUE)\boost\mpl\aux_\reverse_iter_fold_impl.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\header_holder.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\index_node_base.hpp \
		$(BOOST_INCLDUE)\boost\archive\archive_exception.hpp \
		$(BOOST_INCLDUE)\boost\archive\detail\decl.hpp \
		$(BOOST_INCLDUE)\boost\archive\detail\abi_prefix.hpp \
		$(BOOST_INCLDUE)\boost\archive\detail\abi_suffix.hpp \
		$(BOOST_INCLDUE)\boost\serialization\access.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\is_index_list.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\index_loader.hpp \
		$(BOOST_INCLDUE)\boost\serialization\nvp.hpp \
		$(BOOST_INCLDUE)\boost\core\nvp.hpp \
		$(BOOST_INCLDUE)\boost\serialization\level.hpp \
		$(BOOST_INCLDUE)\boost\serialization\level_enum.hpp \
		$(BOOST_INCLDUE)\boost\serialization\tracking.hpp \
		$(BOOST_INCLDUE)\boost\mpl\greater.hpp \
		$(BOOST_INCLDUE)\boost\serialization\tracking_enum.hpp \
		$(BOOST_INCLDUE)\boost\serialization\type_info_implementation.hpp \
		$(BOOST_INCLDUE)\boost\serialization\traits.hpp \
		$(BOOST_INCLDUE)\boost\serialization\split_free.hpp \
		$(BOOST_INCLDUE)\boost\serialization\serialization.hpp \
		$(BOOST_INCLDUE)\boost\serialization\strong_typedef.hpp \
		$(BOOST_INCLDUE)\boost\serialization\wrapper.hpp \
		$(BOOST_INCLDUE)\boost\serialization\base_object.hpp \
		$(BOOST_INCLDUE)\boost\serialization\force_include.hpp \
		$(BOOST_INCLDUE)\boost\serialization\void_cast_fwd.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\index_saver.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\index_matcher.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\converter.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\has_tag.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\invalidate_iterators.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\safe_mode.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\any_container_view.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\iter_adaptor.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\safe_mode_errors.hpp \
		$(BOOST_INCLDUE)\boost\serialization\split_member.hpp \
		$(BOOST_INCLDUE)\boost\serialization\version.hpp \
		$(BOOST_INCLDUE)\boost\mpl\comparison.hpp \
		$(BOOST_INCLDUE)\boost\mpl\not_equal_to.hpp \
		$(BOOST_INCLDUE)\boost\mpl\less_equal.hpp \
		$(BOOST_INCLDUE)\boost\mpl\greater_equal.hpp \
		$(BOOST_INCLDUE)\boost\detail\lightweight_mutex.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\scoped_bilock.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\scope_guard.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\archive_constructed.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\serialization_version.hpp \
		$(BOOST_INCLDUE)\boost\serialization\collection_size_type.hpp \
		$(BOOST_INCLDUE)\boost\serialization\is_bitwise_serializable.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\invariant_assert.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\sequenced_index.hpp \
		$(BOOST_INCLDUE)\boost\bind\bind.hpp \
		$(BOOST_INCLDUE)\boost\bind\detail\result_traits.hpp \
		$(BOOST_INCLDUE)\boost\bind\std_placeholders.hpp \
		$(BOOST_INCLDUE)\boost\visit_each.hpp \
		$(BOOST_INCLDUE)\boost\core\is_same.hpp \
		$(BOOST_INCLDUE)\boost\bind\storage.hpp \
		$(BOOST_INCLDUE)\boost\bind\bind_template.hpp \
		$(BOOST_INCLDUE)\boost\bind\bind_cc.hpp \
		$(BOOST_INCLDUE)\boost\bind\bind_mf_cc.hpp \
		$(BOOST_INCLDUE)\boost\bind\bind_mf2_cc.hpp \
		$(BOOST_INCLDUE)\boost\bind\placeholders.hpp \
		$(BOOST_INCLDUE)\boost\foreach_fwd.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\bidir_node_iterator.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\seq_index_node.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\seq_index_ops.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\sequenced_index_fwd.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\ordered_index.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\ord_index_impl.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\modify_key_adaptor.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\ord_index_node.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\uintptr_type.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\ord_index_ops.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\promotes_arg.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\is_transparent.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\unbounded.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\value_compare.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\detail\duplicates_iterator.hpp \
		$(BOOST_INCLDUE)\boost\multi_index\member.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\detail\ptree_implementation.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\json_parser.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\json_parser\error.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\detail\file_parser_error.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\json_parser\detail\read.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\json_parser\detail\parser.hpp \
		$(BOOST_INCLDUE)\boost\format.hpp \
		$(BOOST_INCLDUE)\boost\format\detail\compat_workarounds.hpp \
		$(BOOST_INCLDUE)\boost\format\detail\config_macros.hpp \
		$(BOOST_INCLDUE)\boost\format\detail\workarounds_gcc-2_95.hpp \
		$(BOOST_INCLDUE)\boost\format\detail\workarounds_stlport.hpp \
		$(BOOST_INCLDUE)\boost\format\format_fwd.hpp \
		$(BOOST_INCLDUE)\boost\format\internals_fwd.hpp \
		$(BOOST_INCLDUE)\boost\format\internals.hpp \
		$(BOOST_INCLDUE)\boost\format\alt_sstream.hpp \
		$(BOOST_INCLDUE)\boost\format\alt_sstream_impl.hpp \
		$(BOOST_INCLDUE)\boost\format\format_class.hpp \
		$(BOOST_INCLDUE)\boost\format\exceptions.hpp \
		$(BOOST_INCLDUE)\boost\format\format_implementation.hpp \
		$(BOOST_INCLDUE)\boost\format\group.hpp \
		$(BOOST_INCLDUE)\boost\format\feed_args.hpp \
		$(BOOST_INCLDUE)\boost\format\detail\msvc_disambiguater.hpp \
		$(BOOST_INCLDUE)\boost\format\parsing.hpp \
		$(BOOST_INCLDUE)\boost\format\free_funcs.hpp \
		$(BOOST_INCLDUE)\boost\format\detail\unset_macros.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\json_parser\detail\narrow_encoding.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\json_parser\detail\wide_encoding.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\json_parser\detail\standard_callbacks.hpp \
		$(BOOST_INCLDUE)\boost\property_tree\json_parser\detail\write.hpp \
		$(BOOST_INCLDUE)\rapidjson\document.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\reader.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\allocators.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\rapidjson.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\msinttypes\stdint.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\msinttypes\inttypes.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\stream.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\encodings.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\encodedstream.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\memorystream.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\clzll.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\meta.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\stack.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\swap.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\strtod.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\ieee754.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\biginteger.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\diyfp.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\pow10.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\error\error.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\strfunc.h \
		$(BOOST_INCLDUE)\rapidjson\istreamwrapper.h \
		$(BOOST_INCLDUE)\rapidjson\writer.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\dtoa.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\internal\itoa.h \
		..\..\..\..\lib\vcpkg\installed\x64-windows-static\include\rapidjson\stringbuffer.h \
		$(BOOST_INCLDUE)\rapidjson\stringbuffer.h \
		$(BOOST_INCLDUE)\rapidjson\ostreamwrapper.h \
		$(BOOST_INCLDUE)\rapidjson\filereadstream.h \
		$(BOOST_INCLDUE)\boost\smart_ptr.hpp \
		$(BOOST_INCLDUE)\boost\shared_array.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\shared_array.hpp \
		$(BOOST_INCLDUE)\boost\intrusive_ptr.hpp \
		$(BOOST_INCLDUE)\boost\smart_ptr\intrusive_ptr.hpp

####### Install

install:  FORCE

uninstall:  FORCE

FORCE:

