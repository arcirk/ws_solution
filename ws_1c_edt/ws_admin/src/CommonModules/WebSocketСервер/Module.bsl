
Процедура УстановитьПараметрыСеанса() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПараметрыСеанса.ИдетификаторСеанса = Новый УникальныйИдентификатор();

	НастройкиСервера = Константы.НастройкаWebSockets.Получить();	
	
	Если СокрЛП(НастройкиСервера) = "" Тогда          
		КаталогОтладки = Новый Структура();
		КаталогОтладки.Вставить("win32", Новый Структура);
		КаталогОтладки.win32.Вставить("x64", "..\..\ws_solution\vc\ws_app\x64\Debug");
		КаталогОтладки.win32.Вставить("x86", "..\..\ws_solution\vc\ws_app\Debug");
		КаталогОтладки.Вставить("unix", "./ws_solution/ws_drv/cmake-build-debug");
		
		Настройка = Новый Структура;
		Настройка.Вставить("РежимОтладки", Истина);
		Настройка.Вставить("КаталогОтладки", КаталогОтладки);
		Настройка.Вставить("Сервер", "0.0.0.0");
		Настройка.Вставить("Порт", 8080);		       
		Запись = Новый ЗаписьJSON();
		Запись.УстановитьСтроку();
		ЗаписатьJSON(Запись, Настройка);
		НастройкиСервера = Запись.Закрыть();		
		Константы.НастройкаWebSockets.Установить(НастройкиСервера);
	КонецЕсли;
	
	ПараметрыСеанса.НастройкаWebSockets = НастройкиСервера;
	ПараметрыСеанса.РазрешитьИспользованиеWebSockets = Константы.РазрешитьИспользованиеWebSocketsService.Получить();
	ПараметрыСеанса.WebSocketsДрайверЗагружен = Ложь;

КонецПроцедуры

Функция ПолучитьНастройки() Экспорт	
	Попытка                  
		Настройки = ПараметрыСеанса.НастройкаWebSockets;
		Чтение = Новый ЧтениеJSON();
		Чтение.УстановитьСтроку(Настройки);
		Возврат ПрочитатьJSON(Чтение);
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции

Функция РазрешитьИспользование() Экспорт
	Возврат ПараметрыСеанса.РазрешитьИспользованиеWebSockets;
КонецФункции

Функция ПолучитьМестоположение(_ЭтоЛинкус) Экспорт
	
	Настройки = ПолучитьНастройки();
	
	Если Настройки = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СистемнаяИнф = Новый СистемнаяИнформация;
	
	Если Настройки.РежимОтладки Тогда
		Разделитель = ?(_ЭтоЛинкус, "/", "\"); 
		Если СистемнаяИнф.ТипПлатформы = ТипПлатформы.Windows_x86_64 ТОгда
			КаталогОтладки = ?(_ЭтоЛинкус, Настройки.КаталогОтладки.unix, ?(СистемнаяИнф.ТипПлатформы = ТипПлатформы.Windows_x86_64, Настройки.КаталогОтладки.win32.x64, Настройки.КаталогОтладки.win32.x86));   
		Иначе
			КаталогОтладки = ?(_ЭтоЛинкус, Настройки.КаталогОтладки.unix, Настройки.КаталогОтладки.win32.x86);
		КонецЕсли;
		ИмяКомпоненты = ?(_ЭтоЛинкус, "libws_drv.so", "ws_drv.dll");
		Возврат КаталогОтладки + Разделитель + ИмяКомпоненты;
	Иначе
		Возврат "ОбщийМакет.ws_client";
	КонецЕсли
	
КонецФункции

Функция ПолучитьИдентификаторОбъекта() Экспорт
	Возврат "WebSocketClient";
КонецФункции
                                                                                                 
Функция ПолучитьСообщение(jsonТекст) Экспорт
	Попытка	
		Чтение = Новый ЧтениеJSON();
		Чтение.УстановитьСтроку(jsonТекст);
		Значение = ПрочитатьJSON(Чтение);
		
		Результат = "";
		
		Если Значение.Свойство("name") Тогда
			Результат = Значение.name + ": 
			|";
		КонецЕсли;
		
		Если Значение.Свойство("message") ТОгда
			Результат = Результат + Значение.message;
		КонецЕсли;
		Возврат Результат;	
	Исключение
		Возврат jsonТекст;
	КонецПопытки;
КонецФункции

Функция ПолучитьСтруктуруСообщения(jsonТекст) Экспорт
	Попытка	
		Чтение = Новый ЧтениеJSON();
		Чтение.УстановитьСтроку(jsonТекст);
		Значение = ПрочитатьJSON(Чтение);
		Возврат Значение;
	Исключение
		Возврат Новый Структура();
	КонецПопытки;
КонецФункции        

Процедура УстановитьПараметрСеанса(Наименование, Значение) Экспорт
	ПараметрыСеанса[Наименование] = Значение;
КонецПроцедуры

Функция ДрайверЗагружен() Экспорт
	Возврат ПараметрыСеанса.WebSocketsДрайверЗагружен;
КонецФункции

Функция ИдетификаторСеанса() Экспорт

	Идентфикатор = Неопределено;
	
	Попытка
		Идентфикатор = ПараметрыСеанса.ИдетификаторСеанса;
	Исключение
		УстановитьПараметрСеанса("ИдетификаторСеанса", Новый УникальныйИдентификатор());
		Идентфикатор = ПараметрыСеанса.ИдетификаторСеанса;
	КонецПопытки;
	
	Возврат Идентфикатор;
	
КонецФункции

Процедура ЗаписатьВЖурнал(Описание) Экспорт
	ЗаписьЖурналаРегистрации("WebSocketService", УровеньЖурналаРегистрации.Информация, ,, Описание); 
КонецПроцедуры
