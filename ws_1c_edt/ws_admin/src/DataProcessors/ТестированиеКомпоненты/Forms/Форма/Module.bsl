&НаКлиенте
Перем wsКлиент, _ОчередьСообщений, ГлобальныйСчетчик;

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	wsКлиент = Новый Соответствие();
	
	_ОчередьСообщений = Новый Массив();
	
	Попытка
		_wsКлиент = WebSocketКлиент.ПолучитьОбъект();
	Исключение
	КонецПопытки;
	
	Если _wsКлиент = Неопределено Тогда
		СостояниеКомпоненты = "Не подключена";
	Иначе
		СостояниеКомпоненты = "Подключена";
	КонецЕсли;
		
	ГлобальныйСчетчик = 0;
	
	СоздатьКоманды();
		
КонецПроцедуры


&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Для Каждого ТекОбъект Из wsКлиент Цикл
		Если ТекОбъект.Значение.Клиент <> Неопределено Тогда
			ТекОбъект.Значение.Клиент.Закрыть();		
		КонецЕсли;
	КонецЦикла;
	
	wsКлиент = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключится(СтруктураПодключения)
	
	
КонецПроцедуры

&НаКлиенте
Процедура Подключится1(Команда)

	СтруктураПодключения = Новый Структура("UUID, ИмяПользователя", Строка(УникальныйИдентификатор), "admin");
	СтруктураКлиента = wsКлиент.Получить(Строка(УникальныйИдентификатор));	
	Если СтруктураКлиента <> Неопределено ТОгда
		Клиент = СтруктураКлиента.Клиент;
		Если Клиент <> Неопределено Тогда
			Клиент.Закрыть();
			Клиент = Неопределено;
		КонецЕсли;
	КонецЕсли;	
	Клиент = WebSocketКлиент.ПолучитьОбъект();
	Клиент.Сервер = Сервер;
	Клиент.Порт = Порт;
	Клиент.ОткрытьКак(СтруктураПодключения.UUID, СтруктураПодключения.ИмяПользователя);
	wsКлиент.Вставить(Строка(УникальныйИдентификатор), Новый Структура("Клиент,ПутьКДанным", Клиент, "Клиент0"));
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Текст = WebSocketКлиент.Base64ВСтроку(Данные); 

	СтруктураСообщения = WebSocketСервер.ПолучитьСтруктуруСообщения(Текст);

	_ОчередьСообщений.Вставить(0, СтруктураСообщения);
	Если _ОчередьСообщений.Количество() = 1 ТОгда
		ОбработатьОчередьСообщений();	
	КонецЕсли;
	
	ГлобальныйСчетчик = ГлобальныйСчетчик + 1;
	
	Сообщить(Строка(ГлобальныйСчетчик) + ": " + СтруктураСообщения.name + ": " + СтруктураСообщения.message + " : " + СтруктураСообщения.uuid + " : " + СтруктураСообщения.uuid_channel);
		
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлемент(ПутьКДанным, Значение, Автор)
	ЭтотОбъект[ПутьКДанным] = ЭтотОбъект[ПутьКДанным] + Автор + ":
	|" + Значение + "
	|";
КонецПроцедуры


&НаКлиенте
Асинх Процедура ОбработатьОчередьСообщений()
	
	Пока _ОчередьСообщений.Количество() > 0 Цикл
		
		СтруктураСообщения = _ОчередьСообщений.Получить(0);
		
		СтруктураКлиента = wsКлиент.Получить(СтруктураСообщения.uuid);
		
		Клиент = Неопределено;
		ПутьКДанным = Неопределено;
				
		Если СтруктураКлиента <> Неопределено Тогда
			Клиент = СтруктураКлиента.Клиент;
			ПутьКДанным = СтруктураКлиента.ПутьКДанным;
		КонецЕсли;
		
		Если Клиент <> Неопределено Тогда
			
		КонецЕсли;
		
		Если ПутьКДанным <> Неопределено Тогда
			ОбновитьЭлемент(ПутьКДанным, СтруктураСообщения.message, СтруктураСообщения.name);
		КонецЕсли;
				
		Если СтруктураСообщения.Свойство("uuid_channel") Тогда
			Если НЕ ЭтоПустойUUID(СтруктураСообщения.uuid_channel) Тогда
			
			Иначе
			
			КонецЕсли;
		КонецЕсли;
		
		_ОчередьСообщений.Удалить(0);	
			
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Функция ЭтоПустойUUID(uuid)
	Возврат uuid = "00000000-0000-0000-0000-000000000000";	
КонецФункции

&НаКлиенте
Процедура ТекстСообщения1НачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Для Каждого ТекОбъект Из wsКлиент Цикл
		Если ТекОбъект <> Неопределено Тогда
			Если ТекОбъект.Запущен() Тогда
				СтруктураИнфОКлиенте = ОбработатьОтветСервера(ТекОбъект.ПолучитьИнформациюОКлиенте());
			КонецЕсли;		
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ОбработатьОтветСервера(jsonText)

	Чтение = Новый ЧтениеJSON();
	Чтение.УстановитьСтроку(jsonText);
	Возврат ПрочитатьJSON(Чтение);

КонецФункции

&НаКлиенте
Процедура Подключится2(Команда)
	ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ОбработкаВыбораПользователя", ЭтотОбъект, Новый Структура("Индекс", 1, ));	
	ОткрытьФорму("Обработка.Чат.Форма.ФормаВыбораПользователя", , ЭтаФорма, ,,, ОписаниеОповещенияОЗакрытии);	
КонецПроцедуры

&НаКлиенте
Процедура Подключится3(Команда)
	ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ОбработкаВыбораПользователя", ЭтотОбъект, Новый Структура("Индекс", 2));	
	ОткрытьФорму("Обработка.Чат.Форма.ФормаВыбораПользователя", , ЭтаФорма, ,,, ОписаниеОповещенияОЗакрытии);	
КонецПроцедуры

&НаКлиенте
Процедура Подключится4(Команда)
	ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ОбработкаВыбораПользователя", ЭтотОбъект, Новый Структура("Индекс", 3));	
	ОткрытьФорму("Обработка.Чат.Форма.ФормаВыбораПользователя", , ЭтаФорма, ,,, ОписаниеОповещенияОЗакрытии);	
КонецПроцедуры

&НаКлиенте
Процедура Отключится(Команда)

	Индекс = Прав(Команда.Имя, 1);
	Поле = Элементы.Найти("Клиент" + Индекс);
//	Поле = Элементы["Клиент" + Индекс];
	
	Если Поле = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	мДанные = СтрРазделить(Поле.Заголовок, ":");
	Если мДанные.Количество() <> 2  ТОгда
		Возврат;
	КонецЕсли;
	
	СтруктураКлиента = wsКлиент.Получить(СокрЛП(мДанные[1]));
	
	Если СтруктураКлиента <> Неопределено Тогда
		Клиент = СтруктураКлиента.Клиент;
		Если Клиент <> Неопределено Тогда 
			Клиент.Закрыть();
			Клиент = Неопределено;
		КонецЕсли;
		wsКлиент.Удалить(СокрЛП(мДанные[1]));
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Асинх Процедура ОбработкаВыбораПользователя(Результат, ДополнительныеПараетры) Экспорт
	Если ТипЗнч(Результат) = Тип("Структура") Тогда	
		СтруктураКлиента = wsКлиент.Получить(Результат.UUID);	
		Если СтруктураКлиента <> Неопределено ТОгда
			Клиент = СтруктураКлиента.Клиент;
			Если Клиент <> Неопределено Тогда
				Клиент.Закрыть();
				Клиент = Неопределено;
			КонецЕсли;
		КонецЕсли;	
		Клиент = WebSocketКлиент.ПолучитьОбъект();
		Клиент.Сервер = Сервер;
		Клиент.Порт = Порт;
		Клиент.ОткрытьКак(Результат.UUID, Результат.ИмяПользователя);
		wsКлиент.Вставить(Результат.UUID, Новый Структура("Клиент,ПутьКДанным", Клиент, "Клиент" + СокрЛП(ДополнительныеПараетры.Индекс)));
		Элементы["Клиент" + СокрЛП(ДополнительныеПараетры.Индекс)].Заголовок = Результат.ИмяПользователя + " : " + Результат.UUID;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Порт = Константы.Порт.Получить();
	Сервер = Константы.Сервер.Получить();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьКоманды()

	Для Счетчик = 0 По 3 Цикл
		НазваниеНовогоЭлемента = "Отключится" + Счетчик;		
		НоваяКоманда = ЭтаФорма.Команды.Добавить(НазваниеНовогоЭлемента);
		НоваяКоманда.Действие = "Отключится";
		НоваяКоманда.Заголовок = "Отключится";
		НоваяКоманда.ИзменяетСохраняемыеДанные = Ложь;
		НоваяКоманда.Отображение = ОтображениеКнопки.Авто;
		НоваяКоманда.Подсказка = "Отключится";
		
		НовыйЭлемент = Элементы.Вставить(НазваниеНовогоЭлемента, Тип("КнопкаФормы"), Элементы["КМКлиент" + Счетчик]);
		НовыйЭлемент.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
		НовыйЭлемент.Заголовок = "Отключится";
		НовыйЭлемент.ИмяКоманды = НазваниеНовогоЭлемента;
	КонецЦикла;

КонецПроцедуры

