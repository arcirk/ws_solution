

&НаКлиенте
Процедура ЗакрытьФорму(Кнопка)
	Если СокрЛП(Имя) = "" ТОгда  
		ВызватьИсключение "Не указано имя пользователя!";
	КонецЕсли;     
	
	Если НЕ ПодтверждениеПароляНеТребуется И Пароль <> ПодтверждениеПароля Тогда
		ВызватьИсключение "Пароли не совпадают!";
	КонецЕсли;

	Если СокрЛП(Идентификатор) = "" ТОгда
		Идентификатор = Новый УникальныйИдентификатор();
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("Имя", Имя);
	Результат.Вставить("Пароль", Пароль);
	Результат.Вставить("Представление", Представление);  
	Результат.Вставить("Идентификатор", Идентификатор);
	Результат.Вставить("Роль", Роль);   
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательИБПриИзменении(Элемент)
	
	Идентификатор = "";
	
	Если ЗначениеЗаполнено(ПользовательИБ) ТОгда
		УстановитьПараметрыПользователяПоУмолчанию();
	КонецЕсли;
	

КонецПроцедуры


&НаСервере
Процедура УстановитьПараметрыПользователяПоУмолчанию()
	
	Если НЕ ЗначениеЗаполнено(ПользовательИБ) ТОгда
			Представление = ""; 
			Имя = "";
			Пароль = "";
			ПодтверждениеПароля = "";		
	КонецЕсли;
	
	Если Метаданные.Справочники.Найти("УчетныеЗаписиПользователей") <> Неопределено Тогда   
		ТекПользователь = Справочники.УчетныеЗаписиПользователей.НайтиПоРеквизиту("Пользователь", ПользовательИБ);
		Если ЗначениеЗаполнено(ТекПользователь) ТОгда
			Представление = СокрЛП(ПользовательИБ.Наименование); 
			Имя = СокрЛП(ПользовательИБ.Код);
			Пароль = ТекПользователь.Пароль;
			ПодтверждениеПароля = ТекПользователь.Пароль; 
		КонецЕсли;
	КонецЕсли;

	Идентификатор = XMLСтрока(ПользовательИБ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии()

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Параметры.Свойство("ПользовательИБ", ПользовательИБ);
	Параметры.Свойство("Идентификатор", Идентификатор);
	Параметры.Свойство("Имя", Имя);
	Параметры.Свойство("Пароль", Пароль);
	Параметры.Свойство("ПодтверждениеПароля", ПодтверждениеПароля);
	Параметры.Свойство("ПодтверждениеПароляНеТребуется", ПодтверждениеПароляНеТребуется);
	Параметры.Свойство("Представление", Представление);
	Параметры.Свойство("РежимИзменения", РежимИзменения);
	Параметры.Свойство("Роль", Роль);	

	Если Параметры.Свойство("ПодтверждениеПароляНеТребуется") Тогда
		Элементы.ПодтверждениеПароля.Доступность = НЕ Параметры.ПодтверждениеПароляНеТребуется; 
		Элементы.Роль.Доступность = НЕ Параметры.ПодтверждениеПароляНеТребуется;
		ПодтверждениеПароляНеТребуется = Параметры.ПодтверждениеПароляНеТребуется;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПоТекущемДанным(Команда)
	СоздатьПоТекущемДаннымСервер();
КонецПроцедуры

&НаСервере
Процедура СоздатьПоТекущемДаннымСервер()
	
	Если СокрЛП(Идентификатор) = "" Тогда
		Возврат;
	КонецЕсли;

	ТекПользователь = Справочники.Пользователи.ПолучитьСсылку(Новый УникальныйИдентификатор(Идентификатор));
	Если ТекПользователь.ПолучитьОбъект() <> Неопределено ТОгда
		ВызватьИсключение "Пользователь с текущим идентификатором уже существует!";
	КонецЕсли;

	НовыйЭлемент = Справочники.Пользователи.СоздатьЭлемент();
	НовыйЭлемент.УстановитьСсылкуНового(ТекПользователь);
	НовыйЭлемент.Код = Имя;
	НовыйЭлемент.Наименование = Представление;
	НовыйЭлемент.Записать();
	
	НовыйЭлемент = Справочники.УчетныеЗаписиПользователей.СоздатьЭлемент();
	НовыйЭлемент.Пользователь = ТекПользователь;
	НовыйЭлемент.Наименование = Представление;
	НовыйЭлемент.Пароль = Пароль;
	НовыйЭлемент.Записать();

КонецПроцедуры

&НаКлиенте
Асинх Процедура ИдентификаторОткрытие(Элемент, СтандартнаяОбработка)
	#Если НЕ ВебКлиент Тогда
	СтандартнаяОбработка = Ложь;
	Если СокрЛП(Идентификатор) <> "" ТОгда
		Если Ждать ВопросАсинх("Установить рандомный идентификатор?", РежимДиалогаВопрос.ОКОтмена) = КодВозвратаДиалога.Да Тогда
			Идентификатор = Новый УникальныйИдентификатор();
		КонецЕсли;
	Иначе
		Идентификатор = Новый УникальныйИдентификатор();
	КонецЕсли;
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ПарольОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Элементы.Пароль.РежимПароля = НЕ Элементы.Пароль.РежимПароля;
	Элементы.ПодтверждениеПароля.РежимПароля = НЕ Элементы.ПодтверждениеПароля.РежимПароля;
КонецПроцедуры
