		
&НаСервере
Функция ПолучитьЗначениеКонстанты(ИмяКонстанты)
    Возврат Константы[ИмяКонстанты].Получить();
КонецФункции
		
&НаКлиенте
Асинх Процедура ДомашнийКаталогНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога); 
	Диалог.Каталог = ПолучитьЗначениеКонстанты("ДомашнийКаталог");
	Результат = Ждать Диалог.ВыбратьАсинх();
	
	//@skip-warning
	Если Результат <> Неопределено И Результат.Количество() > 0 ТОгда
		НаборКонстант.ДомашнийКаталог = Результат[0];	
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если СокрЛП(НаборКонстант.Сервер) = "" Тогда
		НаборКонстант.Сервер = "0.0.0.0";
	КонецЕсли;
	
	Если НаборКонстант.Порт = 0 Тогда
		НаборКонстант.Порт = 8080;
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ПрочитатьНастройки(Команда)
#Если НЕ ВебКлиент Тогда	
	Если СокрЛП(НаборКонстант.ДомашнийКаталог) = "" Тогда
		ПредупреждениеАсинх("Не указан каталог файлов конфигурации!");
		Возврат;	
	КонецЕсли;
	
	Если НЕ КаталогСуществует("ДомашнийКаталог") Тогда
		ПредупреждениеАсинх("Каталог файлов не существует!");
		Возврат;
	КонецЕсли;

	ПрочитатьНаКлиенте();
#КонецЕсли
КонецПроцедуры

&НаКлиенте
Функция КаталогСуществует(ИмяКонтанты)

	
	Файл = Новый Файл(НаборКонстант[ИмяКонтанты]);
	Возврат Файл.Существует();

КонецФункции

&НаКлиенте
Функция ЭтоЛинукс()
	
	Инф = Новый СистемнаяИнформация();
	Возврат Инф.ТипПлатформы = ТипПлатформы.Linux_x86_64;

КонецФункции

&НаКлиенте
Процедура ПрочитатьНаКлиенте()

#Если НЕ ВебКлиент Тогда	
	Отладка = Истина;
	
	Разделитель = ?(НЕ ЭтоЛинукс(), "\", "/");

	path = НаборКонстант[?(Отладка, "ДомашнийКаталог", "КаталогОтладки")] + Разделитель + "config" + Разделитель + "conf.json";

	Файл = Новый Файл(path);
	
		
	Если Файл.Существует() Тогда
		
		
		Чтение = Новый ЧтениеJSON();
		
		Попытка
			Чтение.ОткрытьФайл(Файл.ПолноеИмя);
			Результат = ПрочитатьJSON(Чтение);
			НаборКонстант.Сервер = Результат.host;
			НаборКонстант.Порт = Число(Результат.port);
			НаборКонстант.ДомашнийКаталог = Результат.root_dir;   
			НаборКонстант.КаталогОтладки = Результат.debug_dir;
			Модифицированность = Истина;
		Исключение
			Сообщить("Ошибка: " + ErrorDescription());
		КонецПопытки;
		
	КонецЕсли;
	
#КонецЕсли

КонецПроцедуры


//&НаКлиенте
//Асинх Процедура КаталогФайловКофигурацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
//	
//	СтандартнаяОбработка = Ложь;
//	
//	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
//	Результат = Ждать Диалог.ВыбратьАсинх();
//	
//	//@skip-warning
//	Если Результат.Количество() > 0 ТОгда
//		НаборКонстант.КаталогФайловКофигурации = Результат[0];	
//	КонецЕсли;
//	
//КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
#Если НЕ ВебКлиент Тогда
	Отладка = Истина;
	
	Разделитель = ?(НЕ ЭтоЛинукс(), "\", "/");
	
	path = ТекущийОбъект[?(Отладка, "ДомашнийКаталог", "КаталогОтладки")] + Разделитель + "config" + Разделитель + "conf.json";
	
	НастройкиСериализации = Новый НастройкиСериализацииJSON;
	НастройкиСериализации.ВариантЗаписиДаты = ВариантЗаписиДатыJSON.УниверсальнаяДата;
	НастройкиСериализации.ФорматСериализацииДаты = ФорматДатыJSON.ISO;
	НастройкиСериализации.СериализовыватьМассивыКакОбъекты = Истина;

	Запись = Новый ЗаписьJSON;
	Запись.УстановитьСтроку();
	Struc = Новый Структура;
	Struc.Вставить("name", "ws_server");
	Struc.Вставить("host", ТекущийОбъект.Сервер);   
	Struc.Вставить("port", ТекущийОбъект.Порт);
	Struc.Вставить("root_dir", ТекущийОбъект.ДомашнийКаталог); 
	Struc.Вставить("debug_dir", ТекущийОбъект.КаталогОтладки); 
	ЗаписатьJSON(Запись, Struc, НастройкиСериализации);
	Текст = Новый ТекстовыйДокумент;
	Текст.УстановитьТекст(Запись.Закрыть());
	ТекСт.Записать(path, "CESU-8");
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

КонецПроцедуры


&НаКлиенте
Асинх Процедура КаталогОтладкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога); 
	Диалог.Каталог = ПолучитьЗначениеКонстанты("КаталогОтладки");
	Результат = Ждать Диалог.ВыбратьАсинх();
	
	//@skip-warning
	Если Результат <> Неопределено И Результат.Количество() > 0 ТОгда
		НаборКонстант.КаталогОтладки = Результат[0];	
	КонецЕсли;
	
КонецПроцедуры



